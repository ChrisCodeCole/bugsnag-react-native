{"version":3,"sources":["/Users/jamielynch/repos/bugsnag-react-native/examples/plain/node_modules/react-native/Libraries/Image/Image.android.js"],"sourcesContent":["/**\n * Copyright (c) 2015-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @flow\n * @format\n */\n\n'use strict';\n\nconst ImageStylePropTypes = require('ImageStylePropTypes');\nconst NativeModules = require('NativeModules');\nconst React = require('React');\nconst ReactNative = require('ReactNative');\nconst PropTypes = require('prop-types');\nconst StyleSheet = require('StyleSheet');\nconst StyleSheetPropType = require('StyleSheetPropType');\nconst TextAncestor = require('TextAncestor');\nconst ViewPropTypes = require('ViewPropTypes');\n\nconst flattenStyle = require('flattenStyle');\nconst merge = require('merge');\nconst requireNativeComponent = require('requireNativeComponent');\nconst resolveAssetSource = require('resolveAssetSource');\n\nconst {ImageLoader} = NativeModules;\n\nconst RKImage = requireNativeComponent('RCTImageView');\nconst RCTTextInlineImage = requireNativeComponent('RCTTextInlineImage');\n\nimport type {ImageProps as ImagePropsType} from 'ImageProps';\n\nlet _requestId = 1;\nfunction generateRequestId() {\n  return _requestId++;\n}\n\nconst ImageProps = {\n  ...ViewPropTypes,\n  style: StyleSheetPropType(ImageStylePropTypes),\n  /**\n   * See https://facebook.github.io/react-native/docs/image.html#source\n   */\n  source: PropTypes.oneOfType([\n    PropTypes.shape({\n      uri: PropTypes.string,\n      headers: PropTypes.objectOf(PropTypes.string),\n    }),\n    // Opaque type returned by require('./image.jpg')\n    PropTypes.number,\n    // Multiple sources\n    PropTypes.arrayOf(\n      PropTypes.shape({\n        uri: PropTypes.string,\n        width: PropTypes.number,\n        height: PropTypes.number,\n        headers: PropTypes.objectOf(PropTypes.string),\n      }),\n    ),\n  ]),\n  /**\n   * blurRadius: the blur radius of the blur filter added to the image\n   *\n   * See https://facebook.github.io/react-native/docs/image.html#blurradius\n   */\n  blurRadius: PropTypes.number,\n  /**\n   * See https://facebook.github.io/react-native/docs/image.html#defaultsource\n   */\n  defaultSource: PropTypes.number,\n  /**\n   * See https://facebook.github.io/react-native/docs/image.html#loadingindicatorsource\n   */\n  loadingIndicatorSource: PropTypes.oneOfType([\n    PropTypes.shape({\n      uri: PropTypes.string,\n    }),\n    // Opaque type returned by require('./image.jpg')\n    PropTypes.number,\n  ]),\n  progressiveRenderingEnabled: PropTypes.bool,\n  fadeDuration: PropTypes.number,\n  /**\n   * Invoked on load start\n   */\n  onLoadStart: PropTypes.func,\n  /**\n   * Invoked on load error\n   */\n  onError: PropTypes.func,\n  /**\n   * Invoked when load completes successfully\n   */\n  onLoad: PropTypes.func,\n  /**\n   * Invoked when load either succeeds or fails\n   */\n  onLoadEnd: PropTypes.func,\n  /**\n   * Used to locate this view in end-to-end tests.\n   */\n  testID: PropTypes.string,\n  /**\n   * The mechanism that should be used to resize the image when the image's dimensions\n   * differ from the image view's dimensions. Defaults to `auto`.\n   *\n   * See https://facebook.github.io/react-native/docs/image.html#resizemethod\n   */\n  resizeMethod: PropTypes.oneOf(['auto', 'resize', 'scale']),\n  /**\n   * Determines how to resize the image when the frame doesn't match the raw\n   * image dimensions.\n   *\n   * See https://facebook.github.io/react-native/docs/image.html#resizemode\n   */\n  resizeMode: PropTypes.oneOf([\n    'cover',\n    'contain',\n    'stretch',\n    'repeat',\n    'center',\n  ]),\n};\n\nfunction getSize(\n  url: string,\n  success: (width: number, height: number) => void,\n  failure?: (error: any) => void,\n) {\n  return ImageLoader.getSize(url)\n    .then(function(sizes) {\n      success(sizes.width, sizes.height);\n    })\n    .catch(\n      failure ||\n        function() {\n          console.warn('Failed to get size for image: ' + url);\n        },\n    );\n}\n\nfunction prefetch(url: string, callback: ?Function) {\n  const requestId = generateRequestId();\n  callback && callback(requestId);\n  return ImageLoader.prefetchImage(url, requestId);\n}\n\nfunction abortPrefetch(requestId: number) {\n  ImageLoader.abortRequest(requestId);\n}\n\n/**\n * Perform cache interrogation.\n *\n * See https://facebook.github.io/react-native/docs/image.html#querycache\n */\nasync function queryCache(\n  urls: Array<string>,\n): Promise<Map<string, 'memory' | 'disk'>> {\n  return await ImageLoader.queryCache(urls);\n}\n\ndeclare class ImageComponentType extends ReactNative.NativeComponent<\n  ImagePropsType,\n> {\n  static getSize: typeof getSize;\n  static prefetch: typeof prefetch;\n  static abortPrefetch: typeof abortPrefetch;\n  static queryCache: typeof queryCache;\n  static resolveAssetSource: typeof resolveAssetSource;\n  static propTypes: typeof ImageProps;\n}\n\n/**\n * A React component for displaying different types of images,\n * including network images, static resources, temporary local images, and\n * images from local disk, such as the camera roll.\n *\n * See https://facebook.github.io/react-native/docs/image.html\n */\nlet Image = (\n  props: ImagePropsType,\n  forwardedRef: ?React.Ref<'RCTTextInlineImage' | 'RKImage'>,\n) => {\n  let source = resolveAssetSource(props.source);\n  const defaultSource = resolveAssetSource(props.defaultSource);\n  const loadingIndicatorSource = resolveAssetSource(\n    props.loadingIndicatorSource,\n  );\n\n  if (source && source.uri === '') {\n    console.warn('source.uri should not be an empty string');\n  }\n\n  if (props.src) {\n    console.warn(\n      'The <Image> component requires a `source` property rather than `src`.',\n    );\n  }\n\n  if (props.children) {\n    throw new Error(\n      'The <Image> component cannot contain children. If you want to render content on top of the image, consider using the <ImageBackground> component or absolute positioning.',\n    );\n  }\n\n  if (props.defaultSource && props.loadingIndicatorSource) {\n    throw new Error(\n      'The <Image> component cannot have defaultSource and loadingIndicatorSource at the same time. Please use either defaultSource or loadingIndicatorSource.',\n    );\n  }\n\n  if (source && !source.uri && !Array.isArray(source)) {\n    source = null;\n  }\n\n  let style;\n  let sources;\n  if (source?.uri != null) {\n    /* $FlowFixMe(>=0.78.0 site=react_native_android_fb) This issue was found\n     * when making Flow check .android.js files. */\n    const {width, height} = source;\n    style = flattenStyle([{width, height}, styles.base, props.style]);\n    /* $FlowFixMe(>=0.78.0 site=react_native_android_fb) This issue was found\n     * when making Flow check .android.js files. */\n    sources = [{uri: source.uri}];\n  } else {\n    style = flattenStyle([styles.base, props.style]);\n    sources = source;\n  }\n\n  const {onLoadStart, onLoad, onLoadEnd, onError} = props;\n  const nativeProps = merge(props, {\n    style,\n    shouldNotifyLoadEvents: !!(onLoadStart || onLoad || onLoadEnd || onError),\n    src: sources,\n    /* $FlowFixMe(>=0.78.0 site=react_native_android_fb) This issue was found\n     * when making Flow check .android.js files. */\n    headers: source?.headers,\n    defaultSrc: defaultSource ? defaultSource.uri : null,\n    loadingIndicatorSrc: loadingIndicatorSource\n      ? loadingIndicatorSource.uri\n      : null,\n    ref: forwardedRef,\n  });\n\n  return (\n    <TextAncestor.Consumer>\n      {hasTextAncestor =>\n        hasTextAncestor ? (\n          <RCTTextInlineImage {...nativeProps} />\n        ) : (\n          <RKImage {...nativeProps} />\n        )\n      }\n    </TextAncestor.Consumer>\n  );\n};\n\n// $FlowFixMe - TODO T29156721 `React.forwardRef` is not defined in Flow, yet.\nImage = React.forwardRef(Image);\n\n/**\n * Prefetches a remote image for later use by downloading it to the disk\n * cache\n *\n * See https://facebook.github.io/react-native/docs/image.html#prefetch\n */\nImage.getSize = getSize;\n\n/**\n * Prefetches a remote image for later use by downloading it to the disk\n * cache\n *\n * See https://facebook.github.io/react-native/docs/image.html#prefetch\n */\nImage.prefetch = prefetch;\n\n/**\n * Abort prefetch request.\n *\n * See https://facebook.github.io/react-native/docs/image.html#abortprefetch\n */\nImage.abortPrefetch = abortPrefetch;\n\n/**\n * Perform cache interrogation.\n *\n * See https://facebook.github.io/react-native/docs/image.html#querycache\n */\nImage.queryCache = queryCache;\n\n/**\n * Resolves an asset reference into an object.\n *\n * See https://facebook.github.io/react-native/docs/image.html#resolveassetsource\n */\nImage.resolveAssetSource = resolveAssetSource;\n\nImage.propTypes = ImageProps;\n\nconst styles = StyleSheet.create({\n  base: {\n    overflow: 'hidden',\n  },\n});\n\nmodule.exports = (Image: Class<ImageComponentType>);\n"],"names":["ImageStylePropTypes","require","d","NativeModules","React","PropTypes","StyleSheet","StyleSheetPropType","TextAncestor","ViewPropTypes","flattenStyle","merge","requireNativeComponent","resolveAssetSource","ImageLoader","RKImage","RCTTextInlineImage","_requestId","ImageProps","_objectSpread","style","source","oneOfType","shape","uri","string","headers","objectOf","number","arrayOf","width","height","blurRadius","defaultSource","loadingIndicatorSource","progressiveRenderingEnabled","bool","fadeDuration","onLoadStart","func","onError","onLoad","onLoadEnd","testID","resizeMethod","oneOf","resizeMode","Image","props","forwardedRef","_source","_source3","sources","console","warn","src","children","Error","Array","isArray","undefined","_source2","styles","base","nativeProps","shouldNotifyLoadEvents","defaultSrc","loadingIndicatorSrc","ref","createElement","Consumer","hasTextAncestor","forwardRef","getSize","url","success","failure","then","sizes","catch","prefetch","callback","requestId","prefetchImage","abortPrefetch","abortRequest","queryCache","urls","_regeneratorRuntime","async","_context","prev","next","awrap","abrupt","sent","stop","this","propTypes","create","overflow","module","exports"],"mappings":"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","file":"257.js"}