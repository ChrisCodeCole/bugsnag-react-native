{"version":3,"sources":["/Users/jamielynch/repos/bugsnag-react-native/examples/plain/node_modules/react-native/Libraries/Image/ImageBackground.js"],"sourcesContent":["/**\n * Copyright (c) 2015-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @flow\n * @format\n */\n'use strict';\n\nconst Image = require('Image');\nconst React = require('React');\nconst StyleSheet = require('StyleSheet');\nconst View = require('View');\n\nconst ensureComponentIsNative = require('ensureComponentIsNative');\n\n/**\n * Very simple drop-in replacement for <Image> which supports nesting views.\n *\n * ```ReactNativeWebPlayer\n * import React, { Component } from 'react';\n * import { AppRegistry, View, ImageBackground, Text } from 'react-native';\n *\n * class DisplayAnImageBackground extends Component {\n *   render() {\n *     return (\n *       <ImageBackground\n *         style={{width: 50, height: 50}}\n *         source={{uri: 'https://facebook.github.io/react-native/img/opengraph.png'}}\n *       >\n *         <Text>React</Text>\n *       </ImageBackground>\n *     );\n *   }\n * }\n *\n * // App registration and rendering\n * AppRegistry.registerComponent('DisplayAnImageBackground', () => DisplayAnImageBackground);\n * ```\n */\nclass ImageBackground extends React.Component<$FlowFixMeProps> {\n  setNativeProps(props: Object) {\n    // Work-around flow\n    const viewRef = this._viewRef;\n    if (viewRef) {\n      ensureComponentIsNative(viewRef);\n      viewRef.setNativeProps(props);\n    }\n  }\n\n  _viewRef: ?React.ElementRef<typeof View> = null;\n\n  _captureRef = ref => {\n    this._viewRef = ref;\n  };\n\n  render() {\n    const {children, style, imageStyle, imageRef, ...props} = this.props;\n\n    return (\n      <View\n        accessibilityIgnoresInvertColors={true}\n        style={style}\n        ref={this._captureRef}>\n        <Image\n          {...props}\n          style={[\n            StyleSheet.absoluteFill,\n            {\n              // Temporary Workaround:\n              // Current (imperfect yet) implementation of <Image> overwrites width and height styles\n              // (which is not quite correct), and these styles conflict with explicitly set styles\n              // of <ImageBackground> and with our internal layout model here.\n              // So, we have to proxy/reapply these styles explicitly for actual <Image> component.\n              // This workaround should be removed after implementing proper support of\n              // intrinsic content size of the <Image>.\n              width: style.width,\n              height: style.height,\n            },\n            imageStyle,\n          ]}\n          ref={imageRef}\n        />\n        {children}\n      </View>\n    );\n  }\n}\n\nmodule.exports = ImageBackground;\n"],"names":["Image","require","d","React","StyleSheet","View","ensureComponentIsNative","ImageBackground","_viewRef","_captureRef","ref","_this","props","viewRef","this","setNativeProps","_this$props","children","style","imageStyle","imageRef","_objectWithoutProperties","createElement","accessibilityIgnoresInvertColors","_extends","absoluteFill","width","height","Component","module","exports"],"mappings":"4BASA,uFAEMA,EAAQC,EAAOC,EAAA,IACfC,EAAQF,EAAOC,EAAA,IACfE,EAAaH,EAAOC,EAAA,IACpBG,EAAOJ,EAAOC,EAAA,KAEdI,EAA0BL,EAAOC,EAAA,KA0BjCK,gLAUJC,SAA2C,OAE3CC,YAAc,SAAAC,GACZC,EAAKH,SAAWE,6DAZHE,GAEb,IAAMC,EAAUC,KAAKN,SACjBK,IACFP,EAAwBO,GACxBA,EAAQE,eAAeH,qCAUlB,IAAAI,EACmDF,KAAKF,MAAxDK,EADAD,EACAC,SAAUC,EADVF,EACUE,MAAOC,EADjBH,EACiBG,WAAYC,EAD7BJ,EAC6BI,SAAaR,EAD1CS,EAAAL,GAAA,WAAA,QAAA,aAAA,aAGP,OACEb,EAAAmB,cAACjB,GACCkB,kCAAkC,EAClCL,MAAOA,EACPR,IAAKI,KAAKL,aACVN,EAAAmB,cAACtB,EAADwB,KACMZ,GACJM,OACEd,EAAWqB,cASTC,MAAOR,EAAMQ,MACbC,OAAQT,EAAMS,QAEhBR,GAEFT,IAAKU,KAENH,WA3CqBd,EAAMyB,WAiDpCC,EAAOC,QAAUvB","file":"267.js"}