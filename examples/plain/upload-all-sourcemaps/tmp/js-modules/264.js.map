{"version":3,"sources":["/Users/jamielynch/repos/bugsnag-react-native/examples/plain/node_modules/react-native/Libraries/Components/CheckBox/CheckBox.android.js"],"sourcesContent":["/**\n * Copyright (c) 2017-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @flow\n * @format\n */\n'use strict';\n\nconst NativeMethodsMixin = require('NativeMethodsMixin');\nconst PropTypes = require('prop-types');\nconst React = require('React');\nconst StyleSheet = require('StyleSheet');\nconst ViewPropTypes = require('ViewPropTypes');\n\nconst createReactClass = require('create-react-class');\nconst requireNativeComponent = require('requireNativeComponent');\n\nconst RCTCheckBox = requireNativeComponent('AndroidCheckBox');\n\ntype DefaultProps = {\n  value: boolean,\n  disabled: boolean,\n};\n\n/**\n * Renders a boolean input (Android only).\n *\n * This is a controlled component that requires an `onValueChange` callback that\n * updates the `value` prop in order for the component to reflect user actions.\n * If the `value` prop is not updated, the component will continue to render\n * the supplied `value` prop instead of the expected result of any user actions.\n *\n * ```\n * import React from 'react';\n * import { AppRegistry, StyleSheet, Text, View, CheckBox } from 'react-native';\n *\n * export default class App extends React.Component {\n *   constructor(props) {\n *     super(props);\n *     this.state = {\n *       checked: false\n *     }\n *   }\n *\n *   toggle() {\n *     this.setState(({checked}) => {\n *       return {\n *         checked: !checked\n *       };\n *     });\n *   }\n *\n *   render() {\n *     const {checked} = this.state;\n *     return (\n *       <View style={styles.container}>\n *         <Text>Checked</Text>\n *         <CheckBox value={checked} onChange={this.toggle.bind(this)} />\n *       </View>\n *     );\n *   }\n * }\n *\n * const styles = StyleSheet.create({\n *   container: {\n *     flex: 1,\n *     flexDirection: 'row',\n *     alignItems: 'center',\n *     justifyContent: 'center',\n *   },\n * });\n *\n * // skip this line if using Create React Native App\n * AppRegistry.registerComponent('App', () => App);\n * ```\n *\n * @keyword checkbox\n * @keyword toggle\n */\nlet CheckBox = createReactClass({\n  displayName: 'CheckBox',\n  propTypes: {\n    ...ViewPropTypes,\n    /**\n     * The value of the checkbox.  If true the checkbox will be turned on.\n     * Default value is false.\n     */\n    value: PropTypes.bool,\n    /**\n     * If true the user won't be able to toggle the checkbox.\n     * Default value is false.\n     */\n    disabled: PropTypes.bool,\n    /**\n     * Used in case the props change removes the component.\n     */\n    onChange: PropTypes.func,\n    /**\n     * Invoked with the new value when the value changes.\n     */\n    onValueChange: PropTypes.func,\n    /**\n     * Used to locate this view in end-to-end tests.\n     */\n    testID: PropTypes.string,\n  },\n\n  getDefaultProps: function(): DefaultProps {\n    return {\n      value: false,\n      disabled: false,\n    };\n  },\n\n  mixins: [NativeMethodsMixin],\n\n  _rctCheckBox: {},\n  _onChange: function(event: Object) {\n    this._rctCheckBox.setNativeProps({value: this.props.value});\n    // Change the props after the native props are set in case the props\n    // change removes the component\n    this.props.onChange && this.props.onChange(event);\n    this.props.onValueChange &&\n      this.props.onValueChange(event.nativeEvent.value);\n  },\n\n  render: function() {\n    let props = {...this.props};\n    props.onStartShouldSetResponder = () => true;\n    props.onResponderTerminationRequest = () => false;\n    /* $FlowFixMe(>=0.78.0 site=react_native_android_fb) This issue was found\n     * when making Flow check .android.js files. */\n    props.enabled = !this.props.disabled;\n    /* $FlowFixMe(>=0.78.0 site=react_native_android_fb) This issue was found\n     * when making Flow check .android.js files. */\n    props.on = this.props.value;\n    props.style = [styles.rctCheckBox, this.props.style];\n\n    return (\n      <RCTCheckBox\n        {...props}\n        ref={ref => {\n          /* $FlowFixMe(>=0.53.0 site=react_native_fb,react_native_oss) This\n           * comment suppresses an error when upgrading Flow's support for\n           * React. To see the error delete this comment and run Flow. */\n          this._rctCheckBox = ref;\n        }}\n        onChange={this._onChange}\n      />\n    );\n  },\n});\n\nlet styles = StyleSheet.create({\n  rctCheckBox: {\n    height: 32,\n    width: 32,\n  },\n});\n\nmodule.exports = CheckBox;\n"],"names":["NativeMethodsMixin","require","d","PropTypes","React","StyleSheet","ViewPropTypes","createReactClass","RCTCheckBox","requireNativeComponent","CheckBox","displayName","propTypes","_objectSpread","value","bool","disabled","onChange","func","onValueChange","testID","string","getDefaultProps","mixins","_rctCheckBox","_onChange","event","this","setNativeProps","props","nativeEvent","render","_this","onStartShouldSetResponder","onResponderTerminationRequest","enabled","on","style","styles","rctCheckBox","createElement","_extends","ref","create","height","width","module","exports"],"mappings":"4BASA,qCAEMA,EAAqBC,EAAOC,EAAA,IAC5BC,EAAYF,EAAOC,EAAA,IACnBE,EAAQH,EAAOC,EAAA,IACfG,EAAaJ,EAAOC,EAAA,IACpBI,EAAgBL,EAAOC,EAAA,IAEvBK,EAAmBN,EAAOC,EAAA,IAG1BM,EAFyBP,EAAOC,EAAA,GAElBO,CAAuB,mBA8DvCC,EAAWH,GACbI,YAAa,WACbC,UAASC,KACJP,GAKHQ,MAAOX,EAAUY,KAKjBC,SAAUb,EAAUY,KAIpBE,SAAUd,EAAUe,KAIpBC,cAAehB,EAAUe,KAIzBE,OAAQjB,EAAUkB,SAGpBC,gBAAiB,WACf,OACER,OAAO,EACPE,UAAU,IAIdO,QAASvB,GAETwB,gBACAC,UAAW,SAASC,GAClBC,KAAKH,aAAaI,gBAAgBd,MAAOa,KAAKE,MAAMf,QAGpDa,KAAKE,MAAMZ,UAAYU,KAAKE,MAAMZ,SAASS,GAC3CC,KAAKE,MAAMV,eACTQ,KAAKE,MAAMV,cAAcO,EAAMI,YAAYhB,QAG/CiB,OAAQ,WAAW,IAAAC,EAAAL,KACbE,EAAKhB,KAAOc,KAAKE,OAWrB,OAVAA,EAAMI,0BAA4B,WAAA,OAAM,GACxCJ,EAAMK,8BAAgC,WAAA,OAAM,GAG5CL,EAAMM,SAAWR,KAAKE,MAAMb,SAG5Ba,EAAMO,GAAKT,KAAKE,MAAMf,MACtBe,EAAMQ,OAASC,EAAOC,YAAaZ,KAAKE,MAAMQ,OAG5CjC,EAAAoC,cAAChC,EAADiC,KACMZ,GACJa,IAAK,SAAAA,GAIHV,EAAKR,aAAekB,GAEtBzB,SAAUU,KAAKF,gBAMnBa,EAASjC,EAAWsC,QACtBJ,aACEK,OAAQ,GACRC,MAAO,MAIXC,EAAOC,QAAUrC","file":"264.js"}