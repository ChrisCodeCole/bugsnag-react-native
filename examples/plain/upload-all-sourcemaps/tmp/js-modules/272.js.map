{"version":3,"sources":["/Users/jamielynch/repos/bugsnag-react-native/examples/plain/node_modules/react-native/Libraries/Components/Keyboard/KeyboardAvoidingView.js"],"sourcesContent":["/**\n * Copyright (c) 2015-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @format\n * @flow\n */\n\n'use strict';\n\nconst Keyboard = require('Keyboard');\nconst LayoutAnimation = require('LayoutAnimation');\nconst Platform = require('Platform');\nconst React = require('React');\nconst StyleSheet = require('StyleSheet');\nconst View = require('View');\n\nimport type EmitterSubscription from 'EmitterSubscription';\nimport type {ViewStyleProp} from 'StyleSheet';\nimport type {ViewProps, ViewLayout, ViewLayoutEvent} from 'ViewPropTypes';\nimport type {KeyboardEvent} from 'Keyboard';\n\ntype Props = $ReadOnly<{|\n  ...ViewProps,\n\n  /**\n   * Specify how to react to the presence of the keyboard.\n   */\n  behavior?: ?('height' | 'position' | 'padding'),\n\n  /**\n   * Style of the content container when `behavior` is 'position'.\n   */\n  contentContainerStyle?: ?ViewStyleProp,\n\n  /**\n   * Controls whether this `KeyboardAvoidingView` instance should take effect.\n   * This is useful when more than one is on the screen. Defaults to true.\n   */\n  enabled: ?boolean,\n\n  /**\n   * Distance between the top of the user screen and the React Native view. This\n   * may be non-zero in some cases. Defaults to 0.\n   */\n  keyboardVerticalOffset: number,\n|}>;\n\ntype State = {|\n  bottom: number,\n|};\n\nconst viewRef = 'VIEW';\n\n/**\n * View that moves out of the way when the keyboard appears by automatically\n * adjusting its height, position, or bottom padding.\n */\nclass KeyboardAvoidingView extends React.Component<Props, State> {\n  static defaultProps = {\n    enabled: true,\n    keyboardVerticalOffset: 0,\n  };\n\n  _frame: ?ViewLayout = null;\n  _subscriptions: Array<EmitterSubscription> = [];\n\n  state = {\n    bottom: 0,\n  };\n\n  _relativeKeyboardHeight(keyboardFrame): number {\n    const frame = this._frame;\n    if (!frame || !keyboardFrame) {\n      return 0;\n    }\n\n    const keyboardY = keyboardFrame.screenY - this.props.keyboardVerticalOffset;\n\n    // Calculate the displacement needed for the view such that it\n    // no longer overlaps with the keyboard\n    return Math.max(frame.y + frame.height - keyboardY, 0);\n  }\n\n  _onKeyboardChange = (event: ?KeyboardEvent) => {\n    if (event == null) {\n      this.setState({bottom: 0});\n      return;\n    }\n\n    const {duration, easing, endCoordinates} = event;\n    const height = this._relativeKeyboardHeight(endCoordinates);\n\n    if (this.state.bottom === height) {\n      return;\n    }\n\n    if (duration && easing) {\n      LayoutAnimation.configureNext({\n        duration: duration,\n        update: {\n          duration: duration,\n          type: LayoutAnimation.Types[easing] || 'keyboard',\n        },\n      });\n    }\n    this.setState({bottom: height});\n  };\n\n  _onLayout = (event: ViewLayoutEvent) => {\n    this._frame = event.nativeEvent.layout;\n  };\n\n  UNSAFE_componentWillUpdate(nextProps: Props, nextState: State): void {\n    if (\n      nextState.bottom === this.state.bottom &&\n      this.props.behavior === 'height' &&\n      nextProps.behavior === 'height'\n    ) {\n      // If the component rerenders without an internal state change, e.g.\n      // triggered by parent component re-rendering, no need for bottom to change.\n      nextState.bottom = 0;\n    }\n  }\n\n  componentDidMount(): void {\n    if (Platform.OS === 'ios') {\n      this._subscriptions = [\n        Keyboard.addListener('keyboardWillChangeFrame', this._onKeyboardChange),\n      ];\n    } else {\n      this._subscriptions = [\n        Keyboard.addListener('keyboardDidHide', this._onKeyboardChange),\n        Keyboard.addListener('keyboardDidShow', this._onKeyboardChange),\n      ];\n    }\n  }\n\n  componentWillUnmount(): void {\n    this._subscriptions.forEach(subscription => {\n      subscription.remove();\n    });\n  }\n\n  render(): React.Node {\n    const {\n      behavior,\n      children,\n      contentContainerStyle,\n      enabled,\n      keyboardVerticalOffset, // eslint-disable-line no-unused-vars\n      style,\n      ...props\n    } = this.props;\n    const bottomHeight = enabled ? this.state.bottom : 0;\n    switch (behavior) {\n      case 'height':\n        let heightStyle;\n        if (this._frame != null) {\n          // Note that we only apply a height change when there is keyboard present,\n          // i.e. this.state.bottom is greater than 0. If we remove that condition,\n          // this.frame.height will never go back to its original value.\n          // When height changes, we need to disable flex.\n          heightStyle = {\n            height: this._frame.height - bottomHeight,\n            flex: 0,\n          };\n        }\n        return (\n          <View\n            ref={viewRef}\n            style={StyleSheet.compose(\n              style,\n              heightStyle,\n            )}\n            onLayout={this._onLayout}\n            {...props}>\n            {children}\n          </View>\n        );\n\n      case 'position':\n        return (\n          <View\n            ref={viewRef}\n            style={style}\n            onLayout={this._onLayout}\n            {...props}>\n            <View\n              style={StyleSheet.compose(\n                contentContainerStyle,\n                {\n                  bottom: bottomHeight,\n                },\n              )}>\n              {children}\n            </View>\n          </View>\n        );\n\n      case 'padding':\n        return (\n          <View\n            ref={viewRef}\n            style={StyleSheet.compose(\n              style,\n              {paddingBottom: bottomHeight},\n            )}\n            onLayout={this._onLayout}\n            {...props}>\n            {children}\n          </View>\n        );\n\n      default:\n        return (\n          <View\n            ref={viewRef}\n            onLayout={this._onLayout}\n            style={style}\n            {...props}>\n            {children}\n          </View>\n        );\n    }\n  }\n}\n\nmodule.exports = KeyboardAvoidingView;\n"],"names":["Keyboard","require","d","LayoutAnimation","React","StyleSheet","View","KeyboardAvoidingView","_frame","_subscriptions","state","bottom","_onKeyboardChange","event","duration","easing","endCoordinates","height","_this","_relativeKeyboardHeight","configureNext","update","type","Types","setState","_onLayout","nativeEvent","layout","keyboardFrame","frame","this","keyboardY","screenY","props","keyboardVerticalOffset","Math","max","y","nextProps","nextState","behavior","addListener","forEach","subscription","remove","_this$props","children","contentContainerStyle","enabled","style","_objectWithoutProperties","bottomHeight","heightStyle","flex","createElement","_extends","ref","compose","onLayout","paddingBottom","Component","defaultProps","module","exports"],"mappings":"4BAUA,uFAEMA,EAAWC,EAAOC,EAAA,IAClBC,EAAkBF,EAAOC,EAAA,IAEzBE,GADWH,EAAOC,EAAA,IACVD,EAAOC,EAAA,MACfG,EAAaJ,EAAOC,EAAA,KACpBI,EAAOL,EAAOC,EAAA,KA2CdK,gLAMJC,OAAsB,OACtBC,oBAEAC,OACEC,OAAQ,KAgBVC,kBAAoB,SAACC,GACnB,GAAa,MAATA,EAAJ,CAD6C,IAMtCC,EAAoCD,EAApCC,SAAUC,EAA0BF,EAA1BE,OAAQC,EAAkBH,EAAlBG,eACnBC,EAASC,EAAKC,wBAAwBH,GAExCE,EAAKR,MAAMC,SAAWM,IAItBH,GAAYC,GACdZ,EAAgBiB,eACdN,SAAUA,EACVO,QACEP,SAAUA,EACVQ,KAAMnB,EAAgBoB,MAAMR,IAAW,cAI7CG,EAAKM,UAAUb,OAAQM,UApBrBC,EAAKM,UAAUb,OAAQ,OAuB3Bc,UAAY,SAACZ,GACXK,EAAKV,OAASK,EAAMa,YAAYC,2EAvCVC,GACtB,IAAMC,EAAQC,KAAKtB,OACnB,IAAKqB,IAAUD,EACb,OAAO,EAGT,IAAMG,EAAYH,EAAcI,QAAUF,KAAKG,MAAMC,uBAIrD,OAAOC,KAAKC,IAAIP,EAAMQ,EAAIR,EAAMZ,OAASc,EAAW,sDAgC3BO,EAAkBC,GAEzCA,EAAU5B,SAAWmB,KAAKpB,MAAMC,QACR,WAAxBmB,KAAKG,MAAMO,UACY,WAAvBF,EAAUE,WAIVD,EAAU5B,OAAS,+CAUnBmB,KAAKrB,gBACHT,EAASyC,YAAY,kBAAmBX,KAAKlB,mBAC7CZ,EAASyC,YAAY,kBAAmBX,KAAKlB,mEAMjDkB,KAAKrB,eAAeiC,QAAQ,SAAAC,GAC1BA,EAAaC,4CAII,IAAAC,EASff,KAAKG,MAPPO,EAFiBK,EAEjBL,SACAM,EAHiBD,EAGjBC,SACAC,EAJiBF,EAIjBE,sBACAC,EALiBH,EAKjBG,QAEAC,GAPiBJ,EAMjBX,uBANiBW,EAOjBI,OACGhB,EARciB,EAAAL,GAAA,WAAA,WAAA,wBAAA,UAAA,yBAAA,UAUbM,EAAeH,EAAUlB,KAAKpB,MAAMC,OAAS,EACnD,OAAQ6B,GACN,IAAK,SACH,IAAIY,EAWJ,OAVmB,MAAftB,KAAKtB,SAKP4C,GACEnC,OAAQa,KAAKtB,OAAOS,OAASkC,EAC7BE,KAAM,IAIRjD,EAAAkD,cAAChD,EAADiD,GACEC,IAtHI,OAuHJP,MAAO5C,EAAWoD,QAChBR,EACAG,GAEFM,SAAU5B,KAAKL,WACXQ,GACHa,GAIP,IAAK,WACH,OACE1C,EAAAkD,cAAChD,EAADiD,GACEC,IApII,OAqIJP,MAAOA,EACPS,SAAU5B,KAAKL,WACXQ,GACJ7B,EAAAkD,cAAChD,GACC2C,MAAO5C,EAAWoD,QAChBV,GAEEpC,OAAQwC,KAGXL,IAKT,IAAK,UACH,OACE1C,EAAAkD,cAAChD,EAADiD,GACEC,IAvJI,OAwJJP,MAAO5C,EAAWoD,QAChBR,GACCU,cAAeR,IAElBO,SAAU5B,KAAKL,WACXQ,GACHa,GAIP,QACE,OACE1C,EAAAkD,cAAChD,EAADiD,GACEC,IArKI,OAsKJE,SAAU5B,KAAKL,UACfwB,MAAOA,GACHhB,GACHa,YAnKsB1C,EAAMwD,WAAnCrD,EACGsD,cACLb,SAAS,EACTd,uBAAwB,GAuK5B4B,EAAOC,QAAUxD","file":"272.js"}