{"version":3,"sources":["/Users/jamielynch/repos/bugsnag-react-native/examples/plain/node_modules/react-native/Libraries/Geolocation/Geolocation.js"],"sourcesContent":["/**\n * Copyright (c) 2015-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @format\n * @flow\n */\n\n'use strict';\n\nconst NativeEventEmitter = require('NativeEventEmitter');\nconst RCTLocationObserver = require('NativeModules').LocationObserver;\n\nconst invariant = require('fbjs/lib/invariant');\nconst logError = require('logError');\n/* $FlowFixMe(>=0.54.0 site=react_native_oss) This comment suppresses an error\n * found when Flow v0.54 was deployed. To see the error delete this comment and\n * run Flow. */\nconst warning = require('fbjs/lib/warning');\n\nconst LocationEventEmitter = new NativeEventEmitter(RCTLocationObserver);\n\nconst Platform = require('Platform');\nconst PermissionsAndroid = require('PermissionsAndroid');\n\nlet subscriptions = [];\nlet updatesEnabled = false;\n\ntype GeoConfiguration = {\n  skipPermissionRequests: boolean,\n};\n\ntype GeoOptions = {\n  timeout?: number,\n  maximumAge?: number,\n  enableHighAccuracy?: boolean,\n  distanceFilter: number,\n  useSignificantChanges?: boolean,\n};\n\n/**\n * The Geolocation API extends the web spec:\n * https://developer.mozilla.org/en-US/docs/Web/API/Geolocation\n *\n * See https://facebook.github.io/react-native/docs/geolocation.html\n */\nconst Geolocation = {\n  /*\n    * Sets configuration options that will be used in all location requests.\n    *\n    * See https://facebook.github.io/react-native/docs/geolocation.html#setrnconfiguration\n    *\n    */\n  setRNConfiguration: function(config: GeoConfiguration) {\n    if (RCTLocationObserver.setConfiguration) {\n      RCTLocationObserver.setConfiguration(config);\n    }\n  },\n\n  /*\n   * Request suitable Location permission based on the key configured on pList.\n   *\n   * See https://facebook.github.io/react-native/docs/geolocation.html#requestauthorization\n   */\n  requestAuthorization: function() {\n    RCTLocationObserver.requestAuthorization();\n  },\n\n  /*\n   * Invokes the success callback once with the latest location info.\n   *\n   * See https://facebook.github.io/react-native/docs/geolocation.html#getcurrentposition\n   */\n  getCurrentPosition: async function(\n    geo_success: Function,\n    geo_error?: Function,\n    geo_options?: GeoOptions,\n  ) {\n    invariant(\n      typeof geo_success === 'function',\n      'Must provide a valid geo_success callback.',\n    );\n    let hasPermission = true;\n    // Supports Android's new permission model. For Android older devices,\n    // it's always on.\n    if (Platform.OS === 'android' && Platform.Version >= 23) {\n      hasPermission = await PermissionsAndroid.check(\n        PermissionsAndroid.PERMISSIONS.ACCESS_FINE_LOCATION,\n      );\n      if (!hasPermission) {\n        const status = await PermissionsAndroid.request(\n          PermissionsAndroid.PERMISSIONS.ACCESS_FINE_LOCATION,\n        );\n        hasPermission = status === PermissionsAndroid.RESULTS.GRANTED;\n      }\n    }\n    if (hasPermission) {\n      RCTLocationObserver.getCurrentPosition(\n        geo_options || {},\n        geo_success,\n        geo_error || logError,\n      );\n    }\n  },\n\n  /*\n   * Invokes the success callback whenever the location changes.\n   *\n   * See https://facebook.github.io/react-native/docs/geolocation.html#watchposition\n   */\n  watchPosition: function(\n    success: Function,\n    error?: Function,\n    options?: GeoOptions,\n  ): number {\n    if (!updatesEnabled) {\n      RCTLocationObserver.startObserving(options || {});\n      updatesEnabled = true;\n    }\n    const watchID = subscriptions.length;\n    subscriptions.push([\n      LocationEventEmitter.addListener('geolocationDidChange', success),\n      error\n        ? LocationEventEmitter.addListener('geolocationError', error)\n        : null,\n    ]);\n    return watchID;\n  },\n\n  clearWatch: function(watchID: number) {\n    const sub = subscriptions[watchID];\n    if (!sub) {\n      // Silently exit when the watchID is invalid or already cleared\n      // This is consistent with timers\n      return;\n    }\n\n    sub[0].remove();\n    // array element refinements not yet enabled in Flow\n    const sub1 = sub[1];\n    sub1 && sub1.remove();\n    subscriptions[watchID] = undefined;\n    let noWatchers = true;\n    for (let ii = 0; ii < subscriptions.length; ii++) {\n      if (subscriptions[ii]) {\n        noWatchers = false; // still valid subscriptions\n      }\n    }\n    if (noWatchers) {\n      Geolocation.stopObserving();\n    }\n  },\n\n  stopObserving: function() {\n    if (updatesEnabled) {\n      RCTLocationObserver.stopObserving();\n      updatesEnabled = false;\n      for (let ii = 0; ii < subscriptions.length; ii++) {\n        const sub = subscriptions[ii];\n        if (sub) {\n          warning(false, 'Called stopObserving with existing subscriptions.');\n          sub[0].remove();\n          // array element refinements not yet enabled in Flow\n          const sub1 = sub[1];\n          sub1 && sub1.remove();\n        }\n      }\n      subscriptions = [];\n    }\n  },\n};\n\nmodule.exports = Geolocation;\n"],"names":["NativeEventEmitter","require","d","RCTLocationObserver","LocationObserver","invariant","logError","warning","LocationEventEmitter","Platform","PermissionsAndroid","subscriptions","updatesEnabled","Geolocation","setRNConfiguration","config","setConfiguration","requestAuthorization","getCurrentPosition","geo_success","geo_error","geo_options","hasPermission","status","_regeneratorRuntime","async","_context","prev","next","Version","awrap","check","PERMISSIONS","ACCESS_FINE_LOCATION","sent","request","RESULTS","GRANTED","stop","this","watchPosition","success","error","options","startObserving","watchID","length","push","addListener","clearWatch","sub","remove","sub1","undefined","noWatchers","ii","stopObserving","module","exports"],"mappings":"4BAUA,2BAEMA,EAAqBC,EAAOC,EAAA,IAC5BC,EAAsBF,EAAOC,EAAA,IAAkBE,iBAE/CC,EAAYJ,EAAOC,EAAA,IACnBI,EAAWL,EAAOC,EAAA,IAIlBK,EAAUN,EAAOC,EAAA,IAEjBM,EAAuB,IAAIR,EAAmBG,GAE9CM,EAAWR,EAAOC,EAAA,IAClBQ,EAAqBT,EAAOC,EAAA,IAE9BS,KACAC,GAAiB,EAoBfC,GAOJC,mBAAoB,SAASC,GACvBZ,EAAoBa,kBACtBb,EAAoBa,iBAAiBD,IASzCE,qBAAsB,WACpBd,EAAoBc,wBAQtBC,mBAAoB,SAClBC,EACAC,EACAC,GAHkB,IAAAC,EAAAC,EAAA,OAAAC,EAAAC,MAAA,SAAAC,GAAA,OAAA,OAAAA,EAAAC,KAAAD,EAAAE,MAAA,KAAA,EAAA,GAKlBvB,EACyB,mBAAhBc,EACP,8CAEEG,GAAgB,IAGab,EAASoB,SAAW,IAZnC,CAAAH,EAAAE,KAAA,GAAA,MAAA,OAAAF,EAAAE,KAAA,EAAAJ,EAAAM,MAaMpB,EAAmBqB,MACvCrB,EAAmBsB,YAAYC,uBAdjB,KAAA,EAAA,GAahBX,EAbgBI,EAAAQ,KAAA,CAAAR,EAAAE,KAAA,GAAA,MAAA,OAAAF,EAAAE,KAAA,EAAAJ,EAAAM,MAiBOpB,EAAmByB,QACtCzB,EAAmBsB,YAAYC,uBAlBnB,KAAA,EAiBRV,EAjBQG,EAAAQ,KAoBdZ,EAAgBC,IAAWb,EAAmB0B,QAAQC,QApBxC,KAAA,GAuBdf,GACFnB,EAAoBe,mBAClBG,MACAF,EACAC,GAAad,GA3BC,KAAA,GAAA,IAAA,MAAA,OAAAoB,EAAAY,SAAA,KAAAC,OAqCpBC,cAAe,SACbC,EACAC,EACAC,GAEK/B,IACHT,EAAoByC,eAAeD,OACnC/B,GAAiB,GAEnB,IAAMiC,EAAUlC,EAAcmC,OAO9B,OANAnC,EAAcoC,MACZvC,EAAqBwC,YAAY,uBAAwBP,GACzDC,EACIlC,EAAqBwC,YAAY,mBAAoBN,GACrD,OAECG,GAGTI,WAAY,SAASJ,GACnB,IAAMK,EAAMvC,EAAckC,GAC1B,GAAKK,EAAL,CAMAA,EAAI,GAAGC,SAEP,IAAMC,EAAOF,EAAI,GACjBE,GAAQA,EAAKD,SACbxC,EAAckC,QAAWQ,EAEzB,IADA,IAAIC,GAAa,EACRC,EAAK,EAAGA,EAAK5C,EAAcmC,OAAQS,IACtC5C,EAAc4C,KAChBD,GAAa,GAGbA,GACFzC,EAAY2C,kBAIhBA,cAAe,WACb,GAAI5C,EAAgB,CAClBT,EAAoBqD,gBACpB5C,GAAiB,EACjB,IAAK,IAAI2C,EAAK,EAAGA,EAAK5C,EAAcmC,OAAQS,IAAM,CAChD,IAAML,EAAMvC,EAAc4C,GAC1B,GAAIL,EAAK,CACP3C,GAAQ,EAAO,qDACf2C,EAAI,GAAGC,SAEP,IAAMC,EAAOF,EAAI,GACjBE,GAAQA,EAAKD,UAGjBxC,QAKN8C,EAAOC,QAAU7C","file":"144.js"}