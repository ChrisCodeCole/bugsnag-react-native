{"version":3,"sources":["/Users/jamielynch/repos/bugsnag-react-native/examples/plain/node_modules/react-native/Libraries/Blob/File.js"],"sourcesContent":["/**\n * Copyright (c) 2013-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @flow\n * @format\n */\n'use strict';\n\nconst Blob = require('Blob');\n\nconst invariant = require('fbjs/lib/invariant');\n\nimport type {BlobOptions} from 'BlobTypes';\n\n/**\n * The File interface provides information about files.\n */\nclass File extends Blob {\n  /**\n   * Constructor for JS consumers.\n   */\n  constructor(\n    parts: Array<Blob | string>,\n    name: string,\n    options?: BlobOptions,\n  ) {\n    invariant(\n      parts != null && name != null,\n      'Failed to construct `File`: Must pass both `parts` and `name` arguments.',\n    );\n\n    super(parts, options);\n    this.data.name = name;\n  }\n\n  /**\n   * Name of the file.\n   */\n  get name(): string {\n    invariant(this.data.name != null, 'Files must have a name set.');\n    return this.data.name;\n  }\n\n  /*\n   * Last modified time of the file.\n   */\n  get lastModified(): number {\n    return this.data.lastModified || 0;\n  }\n}\n\nmodule.exports = File;\n"],"names":["Blob","require","d","invariant","File","parts","name","options","_this","_classCallCheck","this","_possibleConstructorReturn","_getPrototypeOf","call","data","lastModified","module","exports"],"mappings":"4BASA,mEAEMA,EAAOC,EAAOC,EAAA,IAEdC,EAAYF,EAAOC,EAAA,IAOnBE,eAIJ,SAAAA,EACEC,EACAC,EACAC,GACA,IAAAC,EAAA,OAAAC,EAAAC,KAAAN,GACAD,EACW,MAATE,GAAyB,MAARC,EACjB,6EAGFE,EAAAG,EAAAD,KAAAE,EAAAR,GAAAS,KAAAH,KAAML,EAAOE,KACRO,KAAKR,KAAOA,EAPjBE,aAReR,mCAuBf,OADAG,EAA4B,MAAlBO,KAAKI,KAAKR,KAAc,+BAC3BI,KAAKI,KAAKR,0CAOjB,OAAOI,KAAKI,KAAKC,cAAgB,YAIrCC,EAAOC,QAAUb","file":"139.js"}