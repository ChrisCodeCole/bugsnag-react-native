{"version":3,"sources":["/Users/jamielynch/repos/bugsnag-react-native/examples/plain/node_modules/react-native/Libraries/Utilities/stringifySafe.js"],"sourcesContent":["/**\n * Copyright (c) 2015-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @format\n * @flow\n */\n\n'use strict';\n\n/**\n * Tries to stringify with JSON.stringify and toString, but catches exceptions\n * (e.g. from circular objects) and always returns a string and never throws.\n */\nfunction stringifySafe(arg: any): string {\n  let ret;\n  const type = typeof arg;\n  if (arg === undefined) {\n    ret = 'undefined';\n  } else if (arg === null) {\n    ret = 'null';\n  } else if (type === 'string') {\n    ret = '\"' + arg + '\"';\n  } else if (type === 'function') {\n    try {\n      ret = arg.toString();\n    } catch (e) {\n      ret = '[function unknown]';\n    }\n  } else {\n    // Perform a try catch, just in case the object has a circular\n    // reference or stringify throws for some other reason.\n    try {\n      ret = JSON.stringify(arg);\n    } catch (e) {\n      if (typeof arg.toString === 'function') {\n        try {\n          ret = arg.toString();\n        } catch (E) {}\n      }\n    }\n  }\n  return ret || '[\"' + type + '\" failed to stringify]';\n}\n\nmodule.exports = stringifySafe;\n"],"names":["module","exports","arg","ret","type","undefined","toString","e","JSON","stringify","E"],"mappings":"4BAUA,aAqCAA,EAAOC,QA/BP,SAAuBC,GACrB,IAAIC,EACEC,SAAcF,EACpB,QAAYG,IAARH,EACFC,EAAM,iBACD,GAAY,OAARD,EACTC,EAAM,YACD,GAAa,WAATC,EACTD,EAAM,IAAMD,EAAM,SACb,GAAa,aAATE,EACT,IACED,EAAMD,EAAII,WACV,MAAOC,GACPJ,EAAM,0BAKR,IACEA,EAAMK,KAAKC,UAAUP,GACrB,MAAOK,GACP,GAA4B,mBAAjBL,EAAII,SACb,IACEH,EAAMD,EAAII,WACV,MAAOI,KAIf,OAAOP,GAAO,KAAOC,EAAO","file":"46.js"}