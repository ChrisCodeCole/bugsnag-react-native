{"version":3,"sources":["/Users/jamielynch/repos/bugsnag-react-native/examples/plain/node_modules/stacktrace-parser/lib/stacktrace-parser.js"],"sourcesContent":["\n\nvar UNKNOWN_FUNCTION = '<unknown>';\n\nvar StackTraceParser = {\n  /**\n   * This parses the different stack traces and puts them into one format\n   * This borrows heavily from TraceKit (https://github.com/occ/TraceKit)\n   */\n  parse: function(stackString) {\n    var chrome = /^\\s*at (?:(?:(?:Anonymous function)?|((?:\\[object object\\])?\\S+(?: \\[as \\S+\\])?)) )?\\(?((?:file|http|https):.*?):(\\d+)(?::(\\d+))?\\)?\\s*$/i,\n        gecko = /^(?:\\s*([^@]*)(?:\\((.*?)\\))?@)?(\\S.*?):(\\d+)(?::(\\d+))?\\s*$/i,\n        node  = /^\\s*at (?:((?:\\[object object\\])?\\S+(?: \\[as \\S+\\])?) )?\\(?(.*?):(\\d+)(?::(\\d+))?\\)?\\s*$/i,\n        lines = stackString.split('\\n'),\n        stack = [],\n        parts,\n        element;\n\n    for (var i = 0, j = lines.length; i < j; ++i) {\n        if ((parts = gecko.exec(lines[i]))) {\n            element = {\n                'file': parts[3],\n                'methodName': parts[1] || UNKNOWN_FUNCTION,\n                'lineNumber': +parts[4],\n                'column': parts[5] ? +parts[5] : null\n            };\n        } else if ((parts = chrome.exec(lines[i]))) {\n            element = {\n                'file': parts[2],\n                'methodName': parts[1] || UNKNOWN_FUNCTION,\n                'lineNumber': +parts[3],\n                'column': parts[4] ? +parts[4] : null\n            };\n        } else if ((parts = node.exec(lines[i]))) {\n            element = {\n                'file': parts[2],\n                'methodName': parts[1] || UNKNOWN_FUNCTION,\n                'lineNumber': +parts[3],\n                'column': parts[4] ? +parts[4] : null\n            };\n        } else {\n            continue;\n        }\n\n        stack.push(element);\n    }\n\n    return stack;\n  }\n};\n\n\nmodule.exports = StackTraceParser;\n"],"names":["StackTraceParser","parse","stackString","parts","element","chrome","gecko","node","lines","split","stack","i","j","length","exec","file","methodName","lineNumber","column","push","module","exports"],"mappings":"4BAEA,IAEIA,GAKFC,MAAO,SAASC,GASd,IARA,IAKIC,EACAC,EANAC,EAAS,4IACTC,EAAQ,+DACRC,EAAQ,4FACRC,EAAQN,EAAYO,MAAM,MAC1BC,KAIKC,EAAI,EAAGC,EAAIJ,EAAMK,OAAQF,EAAIC,IAAKD,EAAG,CAC1C,GAAKR,EAAQG,EAAMQ,KAAKN,EAAMG,IAC1BP,GACIW,KAAQZ,EAAM,GACda,WAAcb,EAAM,IApBb,YAqBPc,YAAed,EAAM,GACrBe,OAAUf,EAAM,IAAMA,EAAM,GAAK,WAElC,GAAKA,EAAQE,EAAOS,KAAKN,EAAMG,IAClCP,GACIW,KAAQZ,EAAM,GACda,WAAcb,EAAM,IA3Bb,YA4BPc,YAAed,EAAM,GACrBe,OAAUf,EAAM,IAAMA,EAAM,GAAK,UAElC,CAAA,KAAKA,EAAQI,EAAKO,KAAKN,EAAMG,KAQhC,SAPAP,GACIW,KAAQZ,EAAM,GACda,WAAcb,EAAM,IAlCb,YAmCPc,YAAed,EAAM,GACrBe,OAAUf,EAAM,IAAMA,EAAM,GAAK,MAMzCO,EAAMS,KAAKf,GAGf,OAAOM,IAKXU,EAAOC,QAAUrB","file":"105.js"}