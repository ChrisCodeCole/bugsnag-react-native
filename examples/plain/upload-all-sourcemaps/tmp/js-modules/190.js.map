{"version":3,"sources":["/Users/jamielynch/repos/bugsnag-react-native/examples/plain/node_modules/react-native/Libraries/Components/Touchable/PooledClass.js"],"sourcesContent":["/**\n * Copyright (c) 2013-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @format\n * @flow\n */\n\n'use strict';\n\nconst invariant = require('fbjs/lib/invariant');\n\n/**\n * Static poolers. Several custom versions for each potential number of\n * arguments. A completely generic pooler is easy to implement, but would\n * require accessing the `arguments` object. In each of these, `this` refers to\n * the Class itself, not an instance. If any others are needed, simply add them\n * here, or in their own files.\n */\nconst oneArgumentPooler = function(copyFieldsFrom) {\n  const Klass = this;\n  if (Klass.instancePool.length) {\n    const instance = Klass.instancePool.pop();\n    Klass.call(instance, copyFieldsFrom);\n    return instance;\n  } else {\n    return new Klass(copyFieldsFrom);\n  }\n};\n\nconst twoArgumentPooler = function(a1, a2) {\n  const Klass = this;\n  if (Klass.instancePool.length) {\n    const instance = Klass.instancePool.pop();\n    Klass.call(instance, a1, a2);\n    return instance;\n  } else {\n    return new Klass(a1, a2);\n  }\n};\n\nconst threeArgumentPooler = function(a1, a2, a3) {\n  const Klass = this;\n  if (Klass.instancePool.length) {\n    const instance = Klass.instancePool.pop();\n    Klass.call(instance, a1, a2, a3);\n    return instance;\n  } else {\n    return new Klass(a1, a2, a3);\n  }\n};\n\nconst fourArgumentPooler = function(a1, a2, a3, a4) {\n  const Klass = this;\n  if (Klass.instancePool.length) {\n    const instance = Klass.instancePool.pop();\n    Klass.call(instance, a1, a2, a3, a4);\n    return instance;\n  } else {\n    return new Klass(a1, a2, a3, a4);\n  }\n};\n\nconst standardReleaser = function(instance) {\n  const Klass = this;\n  invariant(\n    instance instanceof Klass,\n    'Trying to release an instance into a pool of a different type.',\n  );\n  instance.destructor();\n  if (Klass.instancePool.length < Klass.poolSize) {\n    Klass.instancePool.push(instance);\n  }\n};\n\nconst DEFAULT_POOL_SIZE = 10;\nconst DEFAULT_POOLER = oneArgumentPooler;\n\ntype Pooler = any;\n\n/**\n * Augments `CopyConstructor` to be a poolable class, augmenting only the class\n * itself (statically) not adding any prototypical fields. Any CopyConstructor\n * you give this may have a `poolSize` property, and will look for a\n * prototypical `destructor` on instances.\n *\n * @param {Function} CopyConstructor Constructor that can be used to reset.\n * @param {Function} pooler Customizable pooler.\n */\nconst addPoolingTo = function<T>(\n  CopyConstructor: Class<T>,\n  pooler: Pooler,\n): Class<T> & {\n  getPooled(\n    ...args: $ReadOnlyArray<mixed>\n  ): /* arguments of the constructor */ T,\n  release(instance: mixed): void,\n} {\n  // Casting as any so that flow ignores the actual implementation and trusts\n  // it to match the type we declared\n  const NewKlass = (CopyConstructor: any);\n  NewKlass.instancePool = [];\n  NewKlass.getPooled = pooler || DEFAULT_POOLER;\n  if (!NewKlass.poolSize) {\n    NewKlass.poolSize = DEFAULT_POOL_SIZE;\n  }\n  NewKlass.release = standardReleaser;\n  return NewKlass;\n};\n\nconst PooledClass = {\n  addPoolingTo: addPoolingTo,\n  oneArgumentPooler: (oneArgumentPooler: Pooler),\n  twoArgumentPooler: (twoArgumentPooler: Pooler),\n  threeArgumentPooler: (threeArgumentPooler: Pooler),\n  fourArgumentPooler: (fourArgumentPooler: Pooler),\n};\n\nmodule.exports = PooledClass;\n"],"names":["invariant","require","d","oneArgumentPooler","copyFieldsFrom","this","instancePool","length","instance","pop","call","standardReleaser","destructor","poolSize","push","DEFAULT_POOLER","PooledClass","addPoolingTo","CopyConstructor","pooler","NewKlass","getPooled","release","twoArgumentPooler","a1","a2","threeArgumentPooler","a3","fourArgumentPooler","a4","module","exports"],"mappings":"4BAUA,aAEA,IAAMA,EAAYC,EAAOC,EAAA,IASnBC,EAAoB,SAASC,GAEjC,GADcC,KACJC,aAAaC,OAAQ,CAC7B,IAAMC,EAFMH,KAEWC,aAAaG,MAEpC,OAJYJ,KAGNK,KAAKF,EAAUJ,GACdI,EAEP,OAAO,IANKH,KAMKD,IAqCfO,EAAmB,SAASH,GAEhCR,EACEQ,aAFYH,KAGZ,kEAEFG,EAASI,aALKP,KAMJC,aAAaC,OANTF,KAMwBQ,UANxBR,KAONC,aAAaQ,KAAKN,IAKtBO,EAAiBZ,EAkCjBa,GACJC,aAtBmB,SACnBC,EACAC,GASA,IAAMC,EAAYF,EAOlB,OANAE,EAASd,gBACTc,EAASC,UAAYF,GAAUJ,EAC1BK,EAASP,WACZO,EAASP,SA7Ba,IA+BxBO,EAASE,QAAUX,EACZS,GAKPjB,kBAAoBA,EACpBoB,kBAnFwB,SAASC,EAAIC,GAErC,GADcpB,KACJC,aAAaC,OAAQ,CAC7B,IAAMC,EAFMH,KAEWC,aAAaG,MAEpC,OAJYJ,KAGNK,KAAKF,EAAUgB,EAAIC,GAClBjB,EAEP,OAAO,IANKH,KAMKmB,EAAIC,IA6EvBC,oBAzE0B,SAASF,EAAIC,EAAIE,GAE3C,GADctB,KACJC,aAAaC,OAAQ,CAC7B,IAAMC,EAFMH,KAEWC,aAAaG,MAEpC,OAJYJ,KAGNK,KAAKF,EAAUgB,EAAIC,EAAIE,GACtBnB,EAEP,OAAO,IANKH,KAMKmB,EAAIC,EAAIE,IAmE3BC,mBA/DyB,SAASJ,EAAIC,EAAIE,EAAIE,GAE9C,GADcxB,KACJC,aAAaC,OAAQ,CAC7B,IAAMC,EAFMH,KAEWC,aAAaG,MAEpC,OAJYJ,KAGNK,KAAKF,EAAUgB,EAAIC,EAAIE,EAAIE,GAC1BrB,EAEP,OAAO,IANKH,KAMKmB,EAAIC,EAAIE,EAAIE,KA2DjCC,EAAOC,QAAUf","file":"190.js"}