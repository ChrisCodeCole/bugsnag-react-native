{"version":3,"sources":["/Users/jamielynch/repos/bugsnag-react-native/examples/plain/node_modules/react-native/Libraries/Text/TextPropTypes.js"],"sourcesContent":["/**\n * Copyright (c) 2015-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @flow\n * @format\n */\n\n'use strict';\n\nconst ColorPropType = require('ColorPropType');\nconst EdgeInsetsPropType = require('EdgeInsetsPropType');\nconst PropTypes = require('prop-types');\nconst StyleSheetPropType = require('StyleSheetPropType');\nconst TextStylePropTypes = require('TextStylePropTypes');\n\nconst stylePropType = StyleSheetPropType(TextStylePropTypes);\n\nmodule.exports = {\n  /**\n   * When `numberOfLines` is set, this prop defines how text will be\n   * truncated.\n   *\n   * See https://facebook.github.io/react-native/docs/text.html#ellipsizemode\n   */\n  ellipsizeMode: PropTypes.oneOf(['head', 'middle', 'tail', 'clip']),\n  /**\n   * Used to truncate the text with an ellipsis.\n   *\n   * See https://facebook.github.io/react-native/docs/text.html#numberoflines\n   */\n  numberOfLines: PropTypes.number,\n  /**\n   * Set text break strategy on Android.\n   *\n   * See https://facebook.github.io/react-native/docs/text.html#textbreakstrategy\n   */\n  textBreakStrategy: PropTypes.oneOf(['simple', 'highQuality', 'balanced']),\n  /**\n   * Invoked on mount and layout changes.\n   *\n   * See https://facebook.github.io/react-native/docs/text.html#onlayout\n   */\n  onLayout: PropTypes.func,\n  /**\n   * This function is called on press.\n   *\n   * See https://facebook.github.io/react-native/docs/text.html#onpress\n   */\n  onPress: PropTypes.func,\n  /**\n   * This function is called on long press.\n   *\n   * See https://facebook.github.io/react-native/docs/text.html#onlongpress\n   */\n  onLongPress: PropTypes.func,\n  /**\n   * Defines how far your touch may move off of the button, before\n   * deactivating the button.\n   *\n   * See https://facebook.github.io/react-native/docs/text.html#pressretentionoffset\n   */\n  pressRetentionOffset: EdgeInsetsPropType,\n  /**\n   * Lets the user select text.\n   *\n   * See https://facebook.github.io/react-native/docs/text.html#selectable\n   */\n  selectable: PropTypes.bool,\n  /**\n   * The highlight color of the text.\n   *\n   * See https://facebook.github.io/react-native/docs/text.html#selectioncolor\n   */\n  selectionColor: ColorPropType,\n  /**\n   * When `true`, no visual change is made when text is pressed down.\n   *\n   * See https://facebook.github.io/react-native/docs/text.html#supperhighlighting\n   */\n  suppressHighlighting: PropTypes.bool,\n  style: stylePropType,\n  /**\n   * Used to locate this view in end-to-end tests.\n   *\n   * See https://facebook.github.io/react-native/docs/text.html#testid\n   */\n  testID: PropTypes.string,\n  /**\n   * Used to locate this view from native code.\n   *\n   * See https://facebook.github.io/react-native/docs/text.html#nativeid\n   */\n  nativeID: PropTypes.string,\n  /**\n   * Whether fonts should scale to respect Text Size accessibility settings.\n   *\n   * See https://facebook.github.io/react-native/docs/text.html#allowfontscaling\n   */\n  allowFontScaling: PropTypes.bool,\n  /**\n   * Indicates whether the view is an accessibility element.\n   *\n   * See https://facebook.github.io/react-native/docs/text.html#accessible\n   */\n  accessible: PropTypes.bool,\n  /**\n   * Whether font should be scaled down automatically.\n   *\n   * See https://facebook.github.io/react-native/docs/text.html#adjustsfontsizetofit\n   */\n  adjustsFontSizeToFit: PropTypes.bool,\n  /**\n   * Smallest possible scale a font can reach.\n   *\n   * See https://facebook.github.io/react-native/docs/text.html#minimumfontscale\n   */\n  minimumFontScale: PropTypes.number,\n  /**\n   * Specifies the disabled state of the text view for testing purposes.\n   *\n   * See https://facebook.github.io/react-native/docs/text.html#disabled\n   */\n  disabled: PropTypes.bool,\n};\n"],"names":["ColorPropType","require","d","EdgeInsetsPropType","PropTypes","stylePropType","StyleSheetPropType","module","exports","ellipsizeMode","oneOf","numberOfLines","number","textBreakStrategy","onLayout","func","onPress","onLongPress","pressRetentionOffset","selectable","bool","selectionColor","suppressHighlighting","style","testID","string","nativeID","allowFontScaling","accessible","adjustsFontSizeToFit","minimumFontScale","disabled"],"mappings":"4BAUA,aAEA,IAAMA,EAAgBC,EAAOC,EAAA,IACvBC,EAAqBF,EAAOC,EAAA,IAC5BE,EAAYH,EAAOC,EAAA,IAInBG,EAHqBJ,EAAOC,EAAA,GAGZI,CAFKL,EAAOC,EAAA,KAIlCK,EAAOC,SAOLC,cAAeL,EAAUM,OAAO,OAAQ,SAAU,OAAQ,SAM1DC,cAAeP,EAAUQ,OAMzBC,kBAAmBT,EAAUM,OAAO,SAAU,cAAe,aAM7DI,SAAUV,EAAUW,KAMpBC,QAASZ,EAAUW,KAMnBE,YAAab,EAAUW,KAOvBG,qBAAsBf,EAMtBgB,WAAYf,EAAUgB,KAMtBC,eAAgBrB,EAMhBsB,qBAAsBlB,EAAUgB,KAChCG,MAAOlB,EAMPmB,OAAQpB,EAAUqB,OAMlBC,SAAUtB,EAAUqB,OAMpBE,iBAAkBvB,EAAUgB,KAM5BQ,WAAYxB,EAAUgB,KAMtBS,qBAAsBzB,EAAUgB,KAMhCU,iBAAkB1B,EAAUQ,OAM5BmB,SAAU3B,EAAUgB","file":"184.js"}