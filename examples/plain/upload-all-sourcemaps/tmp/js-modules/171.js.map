{"version":3,"sources":["/Users/jamielynch/repos/bugsnag-react-native/examples/plain/node_modules/react-native/Libraries/ART/ReactNativeART.js"],"sourcesContent":["/**\n * Copyright (c) 2015-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @format\n */\n\n'use strict';\n\nconst Color = require('art/core/color');\nconst Path = require('ARTSerializablePath');\nconst Transform = require('art/core/transform');\n\nconst React = require('React');\nconst PropTypes = require('prop-types');\nconst ReactNativeViewAttributes = require('ReactNativeViewAttributes');\n\nconst createReactNativeComponentClass = require('createReactNativeComponentClass');\nconst merge = require('merge');\nconst invariant = require('fbjs/lib/invariant');\n\n// Diff Helpers\n\nfunction arrayDiffer(a, b) {\n  if (a == null || b == null) {\n    return true;\n  }\n  if (a.length !== b.length) {\n    return true;\n  }\n  for (let i = 0; i < a.length; i++) {\n    if (a[i] !== b[i]) {\n      return true;\n    }\n  }\n  return false;\n}\n\nfunction fontAndLinesDiffer(a, b) {\n  if (a === b) {\n    return false;\n  }\n  if (a.font !== b.font) {\n    if (a.font === null) {\n      return true;\n    }\n    if (b.font === null) {\n      return true;\n    }\n\n    if (\n      a.font.fontFamily !== b.font.fontFamily ||\n      a.font.fontSize !== b.font.fontSize ||\n      a.font.fontWeight !== b.font.fontWeight ||\n      a.font.fontStyle !== b.font.fontStyle\n    ) {\n      return true;\n    }\n  }\n  return arrayDiffer(a.lines, b.lines);\n}\n\n// Native Attributes\n\nconst SurfaceViewAttributes = merge(ReactNativeViewAttributes.UIView, {\n  // This should contain pixel information such as width, height and\n  // resolution to know what kind of buffer needs to be allocated.\n  // Currently we rely on UIViews and style to figure that out.\n});\n\nconst NodeAttributes = {\n  transform: {diff: arrayDiffer},\n  opacity: true,\n};\n\nconst GroupAttributes = merge(NodeAttributes, {\n  clipping: {diff: arrayDiffer},\n});\n\nconst RenderableAttributes = merge(NodeAttributes, {\n  fill: {diff: arrayDiffer},\n  stroke: {diff: arrayDiffer},\n  strokeWidth: true,\n  strokeCap: true,\n  strokeJoin: true,\n  strokeDash: {diff: arrayDiffer},\n});\n\nconst ShapeAttributes = merge(RenderableAttributes, {\n  d: {diff: arrayDiffer},\n});\n\nconst TextAttributes = merge(RenderableAttributes, {\n  alignment: true,\n  frame: {diff: fontAndLinesDiffer},\n  path: {diff: arrayDiffer},\n});\n\n// Native Components\n\nconst NativeSurfaceView = createReactNativeComponentClass(\n  'ARTSurfaceView',\n  () => ({\n    validAttributes: SurfaceViewAttributes,\n    uiViewClassName: 'ARTSurfaceView',\n  }),\n);\n\nconst NativeGroup = createReactNativeComponentClass('ARTGroup', () => ({\n  validAttributes: GroupAttributes,\n  uiViewClassName: 'ARTGroup',\n}));\n\nconst NativeShape = createReactNativeComponentClass('ARTShape', () => ({\n  validAttributes: ShapeAttributes,\n  uiViewClassName: 'ARTShape',\n}));\n\nconst NativeText = createReactNativeComponentClass('ARTText', () => ({\n  validAttributes: TextAttributes,\n  uiViewClassName: 'ARTText',\n}));\n\n// Utilities\n\nfunction childrenAsString(children) {\n  if (!children) {\n    return '';\n  }\n  if (typeof children === 'string') {\n    return children;\n  }\n  if (children.length) {\n    return children.join('\\n');\n  }\n  return '';\n}\n\n// Surface - Root node of all ART\n\nclass Surface extends React.Component {\n  static childContextTypes = {\n    isInSurface: PropTypes.bool,\n  };\n\n  getChildContext() {\n    return {isInSurface: true};\n  }\n\n  render() {\n    const height = extractNumber(this.props.height, 0);\n    const width = extractNumber(this.props.width, 0);\n\n    return (\n      <NativeSurfaceView style={[this.props.style, {height, width}]}>\n        {this.props.children}\n      </NativeSurfaceView>\n    );\n  }\n}\n\n// Node Props\n\n// TODO: The desktop version of ART has title and cursor. We should have\n// accessibility support here too even though hovering doesn't work.\n\nfunction extractNumber(value, defaultValue) {\n  if (value == null) {\n    return defaultValue;\n  }\n  return +value;\n}\n\nconst pooledTransform = new Transform();\n\nfunction extractTransform(props) {\n  const scaleX =\n    props.scaleX != null ? props.scaleX : props.scale != null ? props.scale : 1;\n  const scaleY =\n    props.scaleY != null ? props.scaleY : props.scale != null ? props.scale : 1;\n\n  pooledTransform\n    .transformTo(1, 0, 0, 1, 0, 0)\n    .move(props.x || 0, props.y || 0)\n    .rotate(props.rotation || 0, props.originX, props.originY)\n    .scale(scaleX, scaleY, props.originX, props.originY);\n\n  if (props.transform != null) {\n    pooledTransform.transform(props.transform);\n  }\n\n  return [\n    pooledTransform.xx,\n    pooledTransform.yx,\n    pooledTransform.xy,\n    pooledTransform.yy,\n    pooledTransform.x,\n    pooledTransform.y,\n  ];\n}\n\nfunction extractOpacity(props) {\n  // TODO: visible === false should also have no hit detection\n  if (props.visible === false) {\n    return 0;\n  }\n  if (props.opacity == null) {\n    return 1;\n  }\n  return +props.opacity;\n}\n\n// Groups\n\n// Note: ART has a notion of width and height on Group but AFAIK it's a noop in\n// ReactART.\n\nclass Group extends React.Component {\n  static contextTypes = {\n    isInSurface: PropTypes.bool.isRequired,\n  };\n\n  render() {\n    const props = this.props;\n    invariant(\n      this.context.isInSurface,\n      'ART: <Group /> must be a child of a <Surface />',\n    );\n    return (\n      <NativeGroup\n        opacity={extractOpacity(props)}\n        transform={extractTransform(props)}>\n        {this.props.children}\n      </NativeGroup>\n    );\n  }\n}\n\nclass ClippingRectangle extends React.Component {\n  render() {\n    const props = this.props;\n    const x = extractNumber(props.x, 0);\n    const y = extractNumber(props.y, 0);\n    const w = extractNumber(props.width, 0);\n    const h = extractNumber(props.height, 0);\n    const clipping = [x, y, w, h];\n    // The current clipping API requires x and y to be ignored in the transform\n    const propsExcludingXAndY = merge(props);\n    delete propsExcludingXAndY.x;\n    delete propsExcludingXAndY.y;\n    return (\n      <NativeGroup\n        clipping={clipping}\n        opacity={extractOpacity(props)}\n        transform={extractTransform(propsExcludingXAndY)}>\n        {this.props.children}\n      </NativeGroup>\n    );\n  }\n}\n\n// Renderables\n\nconst SOLID_COLOR = 0;\nconst LINEAR_GRADIENT = 1;\nconst RADIAL_GRADIENT = 2;\nconst PATTERN = 3;\n\nfunction insertColorIntoArray(color, targetArray, atIndex) {\n  const c = new Color(color);\n  targetArray[atIndex + 0] = c.red / 255;\n  targetArray[atIndex + 1] = c.green / 255;\n  targetArray[atIndex + 2] = c.blue / 255;\n  targetArray[atIndex + 3] = c.alpha;\n}\n\nfunction insertColorsIntoArray(stops, targetArray, atIndex) {\n  let i = 0;\n  if ('length' in stops) {\n    while (i < stops.length) {\n      insertColorIntoArray(stops[i], targetArray, atIndex + i * 4);\n      i++;\n    }\n  } else {\n    for (const offset in stops) {\n      insertColorIntoArray(stops[offset], targetArray, atIndex + i * 4);\n      i++;\n    }\n  }\n  return atIndex + i * 4;\n}\n\nfunction insertOffsetsIntoArray(stops, targetArray, atIndex, multi, reverse) {\n  let offsetNumber;\n  let i = 0;\n  if ('length' in stops) {\n    while (i < stops.length) {\n      offsetNumber = (i / (stops.length - 1)) * multi;\n      targetArray[atIndex + i] = reverse ? 1 - offsetNumber : offsetNumber;\n      i++;\n    }\n  } else {\n    for (const offsetString in stops) {\n      offsetNumber = +offsetString * multi;\n      targetArray[atIndex + i] = reverse ? 1 - offsetNumber : offsetNumber;\n      i++;\n    }\n  }\n  return atIndex + i;\n}\n\nfunction insertColorStopsIntoArray(stops, targetArray, atIndex) {\n  const lastIndex = insertColorsIntoArray(stops, targetArray, atIndex);\n  insertOffsetsIntoArray(stops, targetArray, lastIndex, 1, false);\n}\n\nfunction insertDoubleColorStopsIntoArray(stops, targetArray, atIndex) {\n  let lastIndex = insertColorsIntoArray(stops, targetArray, atIndex);\n  lastIndex = insertColorsIntoArray(stops, targetArray, lastIndex);\n  lastIndex = insertOffsetsIntoArray(stops, targetArray, lastIndex, 0.5, false);\n  insertOffsetsIntoArray(stops, targetArray, lastIndex, 0.5, true);\n}\n\nfunction applyBoundingBoxToBrushData(brushData, props) {\n  const type = brushData[0];\n  const width = +props.width;\n  const height = +props.height;\n  if (type === LINEAR_GRADIENT) {\n    brushData[1] *= width;\n    brushData[2] *= height;\n    brushData[3] *= width;\n    brushData[4] *= height;\n  } else if (type === RADIAL_GRADIENT) {\n    brushData[1] *= width;\n    brushData[2] *= height;\n    brushData[3] *= width;\n    brushData[4] *= height;\n    brushData[5] *= width;\n    brushData[6] *= height;\n  } else if (type === PATTERN) {\n    // todo\n  }\n}\n\nfunction extractBrush(colorOrBrush, props) {\n  if (colorOrBrush == null) {\n    return null;\n  }\n  if (colorOrBrush._brush) {\n    if (colorOrBrush._bb) {\n      // The legacy API for Gradients allow for the bounding box to be used\n      // as a convenience for specifying gradient positions. This should be\n      // deprecated. It's not properly implemented in canvas mode. ReactART\n      // doesn't handle update to the bounding box correctly. That's why we\n      // mutate this so that if it's reused, we reuse the same resolved box.\n      applyBoundingBoxToBrushData(colorOrBrush._brush, props);\n      colorOrBrush._bb = false;\n    }\n    return colorOrBrush._brush;\n  }\n  const c = new Color(colorOrBrush);\n  return [SOLID_COLOR, c.red / 255, c.green / 255, c.blue / 255, c.alpha];\n}\n\nfunction extractColor(color) {\n  if (color == null) {\n    return null;\n  }\n  const c = new Color(color);\n  return [c.red / 255, c.green / 255, c.blue / 255, c.alpha];\n}\n\nfunction extractStrokeCap(strokeCap) {\n  switch (strokeCap) {\n    case 'butt':\n      return 0;\n    case 'square':\n      return 2;\n    default:\n      return 1; // round\n  }\n}\n\nfunction extractStrokeJoin(strokeJoin) {\n  switch (strokeJoin) {\n    case 'miter':\n      return 0;\n    case 'bevel':\n      return 2;\n    default:\n      return 1; // round\n  }\n}\n\n// Shape\n\n// Note: ART has a notion of width and height on Shape but AFAIK it's a noop in\n// ReactART.\n\nclass Shape extends React.Component {\n  render() {\n    const props = this.props;\n    const path = props.d || childrenAsString(props.children);\n    const d = (path instanceof Path ? path : new Path(path)).toJSON();\n    return (\n      <NativeShape\n        fill={extractBrush(props.fill, props)}\n        opacity={extractOpacity(props)}\n        stroke={extractColor(props.stroke)}\n        strokeCap={extractStrokeCap(props.strokeCap)}\n        strokeDash={props.strokeDash || null}\n        strokeJoin={extractStrokeJoin(props.strokeJoin)}\n        strokeWidth={extractNumber(props.strokeWidth, 1)}\n        transform={extractTransform(props)}\n        d={d}\n      />\n    );\n  }\n}\n\n// Text\n\nconst cachedFontObjectsFromString = {};\n\nconst fontFamilyPrefix = /^[\\s\"']*/;\nconst fontFamilySuffix = /[\\s\"']*$/;\n\nfunction extractSingleFontFamily(fontFamilyString) {\n  // ART on the web allows for multiple font-families to be specified.\n  // For compatibility, we extract the first font-family, hoping\n  // we'll get a match.\n  return fontFamilyString\n    .split(',')[0]\n    .replace(fontFamilyPrefix, '')\n    .replace(fontFamilySuffix, '');\n}\n\nfunction parseFontString(font) {\n  if (cachedFontObjectsFromString.hasOwnProperty(font)) {\n    return cachedFontObjectsFromString[font];\n  }\n  const regexp = /^\\s*((?:(?:normal|bold|italic)\\s+)*)(?:(\\d+(?:\\.\\d+)?)[ptexm\\%]*(?:\\s*\\/.*?)?\\s+)?\\s*\\\"?([^\\\"]*)/i;\n  const match = regexp.exec(font);\n  if (!match) {\n    return null;\n  }\n  const fontFamily = extractSingleFontFamily(match[3]);\n  const fontSize = +match[2] || 12;\n  const isBold = /bold/.exec(match[1]);\n  const isItalic = /italic/.exec(match[1]);\n  cachedFontObjectsFromString[font] = {\n    fontFamily: fontFamily,\n    fontSize: fontSize,\n    fontWeight: isBold ? 'bold' : 'normal',\n    fontStyle: isItalic ? 'italic' : 'normal',\n  };\n  return cachedFontObjectsFromString[font];\n}\n\nfunction extractFont(font) {\n  if (font == null) {\n    return null;\n  }\n  if (typeof font === 'string') {\n    return parseFontString(font);\n  }\n  const fontFamily = extractSingleFontFamily(font.fontFamily);\n  const fontSize = +font.fontSize || 12;\n  const fontWeight =\n    font.fontWeight != null ? font.fontWeight.toString() : '400';\n  return {\n    // Normalize\n    fontFamily: fontFamily,\n    fontSize: fontSize,\n    fontWeight: fontWeight,\n    fontStyle: font.fontStyle,\n  };\n}\n\nconst newLine = /\\n/g;\nfunction extractFontAndLines(font, text) {\n  return {font: extractFont(font), lines: text.split(newLine)};\n}\n\nfunction extractAlignment(alignment) {\n  switch (alignment) {\n    case 'right':\n      return 1;\n    case 'center':\n      return 2;\n    default:\n      return 0;\n  }\n}\n\nclass Text extends React.Component {\n  render() {\n    const props = this.props;\n    const path = props.path;\n    const textPath = path\n      ? (path instanceof Path ? path : new Path(path)).toJSON()\n      : null;\n    const textFrame = extractFontAndLines(\n      props.font,\n      childrenAsString(props.children),\n    );\n    return (\n      <NativeText\n        fill={extractBrush(props.fill, props)}\n        opacity={extractOpacity(props)}\n        stroke={extractColor(props.stroke)}\n        strokeCap={extractStrokeCap(props.strokeCap)}\n        strokeDash={props.strokeDash || null}\n        strokeJoin={extractStrokeJoin(props.strokeJoin)}\n        strokeWidth={extractNumber(props.strokeWidth, 1)}\n        transform={extractTransform(props)}\n        alignment={extractAlignment(props.alignment)}\n        frame={textFrame}\n        path={textPath}\n      />\n    );\n  }\n}\n\n// Declarative fill type objects - API design not finalized\n\nfunction LinearGradient(stops, x1, y1, x2, y2) {\n  const type = LINEAR_GRADIENT;\n\n  if (arguments.length < 5) {\n    const angle = ((x1 == null ? 270 : x1) * Math.PI) / 180;\n\n    let x = Math.cos(angle);\n    let y = -Math.sin(angle);\n    const l = (Math.abs(x) + Math.abs(y)) / 2;\n\n    x *= l;\n    y *= l;\n\n    x1 = 0.5 - x;\n    x2 = 0.5 + x;\n    y1 = 0.5 - y;\n    y2 = 0.5 + y;\n    this._bb = true;\n  } else {\n    this._bb = false;\n  }\n\n  const brushData = [type, +x1, +y1, +x2, +y2];\n  insertColorStopsIntoArray(stops, brushData, 5);\n  this._brush = brushData;\n}\n\nfunction RadialGradient(stops, fx, fy, rx, ry, cx, cy) {\n  if (ry == null) {\n    ry = rx;\n  }\n  if (cx == null) {\n    cx = fx;\n  }\n  if (cy == null) {\n    cy = fy;\n  }\n  if (fx == null) {\n    // As a convenience we allow the whole radial gradient to cover the\n    // bounding box. We should consider dropping this API.\n    fx = fy = rx = ry = cx = cy = 0.5;\n    this._bb = true;\n  } else {\n    this._bb = false;\n  }\n  // The ART API expects the radial gradient to be repeated at the edges.\n  // To simulate this we render the gradient twice as large and add double\n  // color stops. Ideally this API would become more restrictive so that this\n  // extra work isn't needed.\n  const brushData = [RADIAL_GRADIENT, +fx, +fy, +rx * 2, +ry * 2, +cx, +cy];\n  insertDoubleColorStopsIntoArray(stops, brushData, 7);\n  this._brush = brushData;\n}\n\nfunction Pattern(url, width, height, left, top) {\n  this._brush = [PATTERN, url, +left || 0, +top || 0, +width, +height];\n}\n\nconst ReactART = {\n  LinearGradient: LinearGradient,\n  RadialGradient: RadialGradient,\n  Pattern: Pattern,\n  Transform: Transform,\n  Path: Path,\n  Surface: Surface,\n  Group: Group,\n  ClippingRectangle: ClippingRectangle,\n  Shape: Shape,\n  Text: Text,\n};\n\nmodule.exports = ReactART;\n"],"names":["Color","require","d","Path","Transform","React","PropTypes","ReactNativeViewAttributes","createReactNativeComponentClass","merge","invariant","arrayDiffer","a","b","length","i","SurfaceViewAttributes","UIView","NodeAttributes","transform","diff","opacity","GroupAttributes","clipping","RenderableAttributes","fill","stroke","strokeWidth","strokeCap","strokeJoin","strokeDash","ShapeAttributes","TextAttributes","alignment","frame","font","fontFamily","fontSize","fontWeight","fontStyle","lines","path","NativeSurfaceView","validAttributes","uiViewClassName","NativeGroup","NativeShape","NativeText","childrenAsString","children","join","Surface","isInSurface","height","extractNumber","this","props","width","createElement","style","Component","value","defaultValue","childContextTypes","bool","pooledTransform","extractTransform","scaleX","scale","scaleY","transformTo","move","x","y","rotate","rotation","originX","originY","xx","yx","xy","yy","extractOpacity","visible","Group","context","contextTypes","isRequired","ClippingRectangle","propsExcludingXAndY","SOLID_COLOR","LINEAR_GRADIENT","RADIAL_GRADIENT","PATTERN","insertColorIntoArray","color","targetArray","atIndex","c","red","green","blue","alpha","insertColorsIntoArray","stops","offset","insertOffsetsIntoArray","multi","reverse","offsetNumber","offsetString","insertColorStopsIntoArray","insertDoubleColorStopsIntoArray","lastIndex","applyBoundingBoxToBrushData","brushData","type","extractBrush","colorOrBrush","_brush","_bb","extractColor","extractStrokeCap","extractStrokeJoin","Shape","toJSON","cachedFontObjectsFromString","fontFamilyPrefix","fontFamilySuffix","extractSingleFontFamily","fontFamilyString","split","replace","parseFontString","hasOwnProperty","match","exec","isBold","isItalic","extractFont","toString","newLine","extractAlignment","Text","text","textPath","textFrame","ReactART","LinearGradient","x1","y1","x2","y2","arguments","angle","Math","PI","cos","sin","l","abs","RadialGradient","fx","fy","rx","ry","cx","cy","Pattern","url","left","top","module","exports"],"mappings":"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","file":"171.js"}