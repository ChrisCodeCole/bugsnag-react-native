{"version":3,"sources":["/Users/jamielynch/repos/bugsnag-react-native/examples/plain/node_modules/react-native/Libraries/Utilities/PolyfillFunctions.js"],"sourcesContent":["/**\n * Copyright (c) 2013-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @flow\n * @format\n */\n\n'use strict';\n\nconst defineLazyObjectProperty = require('defineLazyObjectProperty');\n\n/**\n * Sets an object's property. If a property with the same name exists, this will\n * replace it but maintain its descriptor configuration. The property will be\n * replaced with a lazy getter.\n *\n * In DEV mode the original property value will be preserved as `original[PropertyName]`\n * so that, if necessary, it can be restored. For example, if you want to route\n * network requests through DevTools (to trace them):\n *\n *   global.XMLHttpRequest = global.originalXMLHttpRequest;\n *\n * @see https://github.com/facebook/react-native/issues/934\n */\nfunction polyfillObjectProperty<T>(\n  object: Object,\n  name: string,\n  getValue: () => T,\n): void {\n  const descriptor = Object.getOwnPropertyDescriptor(object, name);\n  if (__DEV__ && descriptor) {\n    const backupName = `original${name[0].toUpperCase()}${name.substr(1)}`;\n    Object.defineProperty(object, backupName, {\n      ...descriptor,\n      value: object[name],\n    });\n  }\n\n  const {enumerable, writable, configurable} = descriptor || {};\n  if (descriptor && !configurable) {\n    console.error('Failed to set polyfill. ' + name + ' is not configurable.');\n    return;\n  }\n\n  defineLazyObjectProperty(object, name, {\n    get: getValue,\n    enumerable: enumerable !== false,\n    writable: writable !== false,\n  });\n}\n\nfunction polyfillGlobal<T>(name: string, getValue: () => T): void {\n  polyfillObjectProperty(global, name, getValue);\n}\n\nmodule.exports = {polyfillObjectProperty, polyfillGlobal};\n"],"names":["defineLazyObjectProperty","require","d","polyfillObjectProperty","object","name","getValue","descriptor","Object","getOwnPropertyDescriptor","_ref","enumerable","writable","configurable","get","console","error","module","exports","polyfillGlobal","global"],"mappings":"4BAUA,yBAEMA,EAA2BC,EAAOC,EAAA,IAexC,SAASC,EACPC,EACAC,EACAC,GAEA,IAAMC,EAAaC,OAAOC,yBAAyBL,EAAQC,GADrDK,EAUuCH,MAAtCI,EAVDD,EAUCC,WAAYC,EAVbF,EAUaE,SAAUC,EAVvBH,EAUuBG,cACzBN,GAAeM,EAKnBb,EAAyBI,EAAQC,GAC/BS,IAAKR,EACLK,YAA2B,IAAfA,EACZC,UAAuB,IAAbA,IAPVG,QAAQC,MAAM,2BAA6BX,EAAO,yBAetDY,EAAOC,SAAWf,uBAAAA,EAAwBgB,eAJ1C,SAA2Bd,EAAcC,GACvCH,EAAuBiB,EAAQf,EAAMC","file":"96.js"}