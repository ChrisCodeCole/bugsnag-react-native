{"version":3,"sources":["/Users/jamielynch/repos/bugsnag-react-native/examples/plain/node_modules/react-native/Libraries/Animated/src/nodes/AnimatedStyle.js"],"sourcesContent":["/**\n * Copyright (c) 2015-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @flow\n * @format\n */\n'use strict';\n\nconst AnimatedNode = require('./AnimatedNode');\nconst AnimatedTransform = require('./AnimatedTransform');\nconst AnimatedWithChildren = require('./AnimatedWithChildren');\nconst NativeAnimatedHelper = require('../NativeAnimatedHelper');\n\nconst flattenStyle = require('flattenStyle');\n\nclass AnimatedStyle extends AnimatedWithChildren {\n  _style: Object;\n\n  constructor(style: any) {\n    super();\n    style = flattenStyle(style) || {};\n    if (style.transform) {\n      style = {\n        ...style,\n        transform: new AnimatedTransform(style.transform),\n      };\n    }\n    this._style = style;\n  }\n\n  // Recursively get values for nested styles (like iOS's shadowOffset)\n  _walkStyleAndGetValues(style) {\n    const updatedStyle = {};\n    for (const key in style) {\n      const value = style[key];\n      if (value instanceof AnimatedNode) {\n        if (!value.__isNative) {\n          // We cannot use value of natively driven nodes this way as the value we have access from\n          // JS may not be up to date.\n          updatedStyle[key] = value.__getValue();\n        }\n      } else if (value && !Array.isArray(value) && typeof value === 'object') {\n        // Support animating nested values (for example: shadowOffset.height)\n        updatedStyle[key] = this._walkStyleAndGetValues(value);\n      } else {\n        updatedStyle[key] = value;\n      }\n    }\n    return updatedStyle;\n  }\n\n  __getValue(): Object {\n    return this._walkStyleAndGetValues(this._style);\n  }\n\n  // Recursively get animated values for nested styles (like iOS's shadowOffset)\n  _walkStyleAndGetAnimatedValues(style) {\n    const updatedStyle = {};\n    for (const key in style) {\n      const value = style[key];\n      if (value instanceof AnimatedNode) {\n        updatedStyle[key] = value.__getAnimatedValue();\n      } else if (value && !Array.isArray(value) && typeof value === 'object') {\n        // Support animating nested values (for example: shadowOffset.height)\n        updatedStyle[key] = this._walkStyleAndGetAnimatedValues(value);\n      }\n    }\n    return updatedStyle;\n  }\n\n  __getAnimatedValue(): Object {\n    return this._walkStyleAndGetAnimatedValues(this._style);\n  }\n\n  __attach(): void {\n    for (const key in this._style) {\n      const value = this._style[key];\n      if (value instanceof AnimatedNode) {\n        value.__addChild(this);\n      }\n    }\n  }\n\n  __detach(): void {\n    for (const key in this._style) {\n      const value = this._style[key];\n      if (value instanceof AnimatedNode) {\n        value.__removeChild(this);\n      }\n    }\n    super.__detach();\n  }\n\n  __makeNative() {\n    for (const key in this._style) {\n      const value = this._style[key];\n      if (value instanceof AnimatedNode) {\n        value.__makeNative();\n      }\n    }\n    super.__makeNative();\n  }\n\n  __getNativeConfig(): Object {\n    const styleConfig = {};\n    for (const styleKey in this._style) {\n      if (this._style[styleKey] instanceof AnimatedNode) {\n        styleConfig[styleKey] = this._style[styleKey].__getNativeTag();\n      }\n      // Non-animated styles are set using `setNativeProps`, no need\n      // to pass those as a part of the node config\n    }\n    NativeAnimatedHelper.validateStyles(styleConfig);\n    return {\n      type: 'style',\n      style: styleConfig,\n    };\n  }\n}\n\nmodule.exports = AnimatedStyle;\n"],"names":["AnimatedNode","require","d","AnimatedTransform","AnimatedWithChildren","NativeAnimatedHelper","flattenStyle","AnimatedStyle","style","_this","_classCallCheck","this","_possibleConstructorReturn","_getPrototypeOf","call","transform","_objectSpread","_style","updatedStyle","key","value","__isNative","__getValue","Array","isArray","_walkStyleAndGetValues","__getAnimatedValue","_walkStyleAndGetAnimatedValues","__addChild","__removeChild","_get","prototype","__makeNative","styleConfig","styleKey","__getNativeTag","validateStyles","type","module","exports"],"mappings":"4BASA,uFAEMA,EAAeC,EAAOC,EAAA,IACtBC,EAAoBF,EAAOC,EAAA,IAC3BE,EAAuBH,EAAOC,EAAA,IAC9BG,EAAuBJ,EAAOC,EAAA,KAE9BI,EAAeL,EAAOC,EAAA,KAEtBK,eAGJ,SAAAA,EAAYC,GAAY,IAAAC,EAAA,OAAAC,EAAAC,KAAAJ,GACtBE,EAAAG,EAAAD,KAAAE,EAAAN,GAAAO,KAAAH,QACAH,EAAQF,EAAaE,QACXO,YACRP,EAAKQ,KACAR,GACHO,UAAW,IAAIZ,EAAkBK,EAAMO,cAG3CN,EAAKQ,OAAST,EATQC,aAHEL,qDAgBHI,GACrB,IAAMU,KACN,IAAK,IAAMC,KAAOX,EAAO,CACvB,IAAMY,EAAQZ,EAAMW,GAChBC,aAAiBpB,EACdoB,EAAMC,aAGTH,EAAaC,GAAOC,EAAME,cAEnBF,IAAUG,MAAMC,QAAQJ,IAA2B,iBAAVA,EAElDF,EAAaC,GAAOR,KAAKc,uBAAuBL,GAEhDF,EAAaC,GAAOC,EAGxB,OAAOF,uCAIP,OAAOP,KAAKc,uBAAuBd,KAAKM,+DAIXT,GAC7B,IAAMU,KACN,IAAK,IAAMC,KAAOX,EAAO,CACvB,IAAMY,EAAQZ,EAAMW,GAChBC,aAAiBpB,EACnBkB,EAAaC,GAAOC,EAAMM,qBACjBN,IAAUG,MAAMC,QAAQJ,IAA2B,iBAAVA,IAElDF,EAAaC,GAAOR,KAAKgB,+BAA+BP,IAG5D,OAAOF,+CAIP,OAAOP,KAAKgB,+BAA+BhB,KAAKM,2CAIhD,IAAK,IAAME,KAAOR,KAAKM,OAAQ,CAC7B,IAAMG,EAAQT,KAAKM,OAAOE,GACtBC,aAAiBpB,GACnBoB,EAAMQ,WAAWjB,0CAMrB,IAAK,IAAMQ,KAAOR,KAAKM,OAAQ,CAC7B,IAAMG,EAAQT,KAAKM,OAAOE,GACtBC,aAAiBpB,GACnBoB,EAAMS,cAAclB,MAGxBmB,EAAAjB,EAAAN,EAAAwB,WAAA,WAAApB,MAAAG,KAAAH,6CAIA,IAAK,IAAMQ,KAAOR,KAAKM,OAAQ,CAC7B,IAAMG,EAAQT,KAAKM,OAAOE,GACtBC,aAAiBpB,GACnBoB,EAAMY,eAGVF,EAAAjB,EAAAN,EAAAwB,WAAA,eAAApB,MAAAG,KAAAH,kDAIA,IAAMsB,KACN,IAAK,IAAMC,KAAYvB,KAAKM,OACtBN,KAAKM,OAAOiB,aAAqBlC,IACnCiC,EAAYC,GAAYvB,KAAKM,OAAOiB,GAAUC,kBAMlD,OADA9B,EAAqB+B,eAAeH,IAElCI,KAAM,QACN7B,MAAOyB,aAKbK,EAAOC,QAAUhC","file":"220.js"}