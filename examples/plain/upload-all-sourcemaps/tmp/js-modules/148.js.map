{"version":3,"sources":["/Users/jamielynch/repos/bugsnag-react-native/examples/plain/node_modules/react-native/Libraries/Utilities/logError.js"],"sourcesContent":["/**\n * Copyright (c) 2015-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @format\n * @flow strict\n */\n\n'use strict';\n\n/**\n * Small utility that can be used as an error handler. You cannot just pass\n * `console.error` as a failure callback - it's not properly bound.  If passes an\n * `Error` object, it will print the message and stack.\n */\nconst logError = function(...args: $ReadOnlyArray<mixed>) {\n  if (args.length === 1 && args[0] instanceof Error) {\n    const err = args[0];\n    console.error('Error: \"' + err.message + '\".  Stack:\\n' + err.stack);\n  } else {\n    console.error.apply(console, args);\n  }\n};\n\nmodule.exports = logError;\n"],"names":["module","exports","_len","arguments","length","args","Array","_key","Error","err","console","error","message","stack","apply"],"mappings":"4BAUA,aAgBAA,EAAOC,QATU,WAAyC,IAAA,IAAAC,EAAAC,UAAAC,OAA7BC,EAA6B,IAAAC,MAAAJ,GAAAK,EAAA,EAAAA,EAAAL,EAAAK,IAA7BF,EAA6BE,GAAAJ,UAAAI,GACxD,GAAoB,IAAhBF,EAAKD,QAAgBC,EAAK,aAAcG,MAAO,CACjD,IAAMC,EAAMJ,EAAK,GACjBK,QAAQC,MAAM,WAAaF,EAAIG,QAAU,eAAiBH,EAAII,YAE9DH,QAAQC,MAAMG,MAAMJ,QAASL","file":"148.js"}