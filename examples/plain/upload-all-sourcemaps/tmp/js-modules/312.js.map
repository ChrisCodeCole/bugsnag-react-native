{"version":3,"sources":["/Users/jamielynch/repos/bugsnag-react-native/examples/plain/node_modules/react-native/Libraries/BugReporting/BugReporting.js"],"sourcesContent":["/**\n * Copyright (c) 2013-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @format\n * @flow\n */\n\n'use strict';\n\nconst RCTDeviceEventEmitter = require('RCTDeviceEventEmitter');\nconst Map = require('Map');\nconst infoLog = require('infoLog');\n\nimport type EmitterSubscription from 'EmitterSubscription';\n\ntype ExtraData = {[key: string]: string};\ntype SourceCallback = () => string;\ntype DebugData = {extras: ExtraData, files: ExtraData};\n\nfunction defaultExtras() {\n  BugReporting.addFileSource('react_hierarchy.txt', () =>\n    require('dumpReactTree')(),\n  );\n}\n\n/**\n * A simple class for collecting bug report data. Components can add sources that will be queried when a bug report\n * is created via `collectExtraData`. For example, a list component might add a source that provides the list of rows\n * that are currently visible on screen. Components should also remember to call `remove()` on the object that is\n * returned by `addSource` when they are unmounted.\n */\nclass BugReporting {\n  static _extraSources: Map<string, SourceCallback> = new Map();\n  static _fileSources: Map<string, SourceCallback> = new Map();\n  static _subscription: ?EmitterSubscription = null;\n  static _redboxSubscription: ?EmitterSubscription = null;\n\n  static _maybeInit() {\n    if (!BugReporting._subscription) {\n      BugReporting._subscription = RCTDeviceEventEmitter.addListener(\n        'collectBugExtraData',\n        BugReporting.collectExtraData,\n        null,\n      );\n      defaultExtras();\n    }\n\n    if (!BugReporting._redboxSubscription) {\n      BugReporting._redboxSubscription = RCTDeviceEventEmitter.addListener(\n        'collectRedBoxExtraData',\n        BugReporting.collectExtraData,\n        null,\n      );\n    }\n  }\n\n  /**\n   * Maps a string key to a simple callback that should return a string payload to be attached\n   * to a bug report. Source callbacks are called when `collectExtraData` is called.\n   *\n   * Returns an object to remove the source when the component unmounts.\n   *\n   * Conflicts trample with a warning.\n   */\n  static addSource(\n    key: string,\n    callback: SourceCallback,\n  ): {remove: () => void} {\n    return this._addSource(key, callback, BugReporting._extraSources);\n  }\n\n  /**\n   * Maps a string key to a simple callback that should return a string payload to be attached\n   * to a bug report. Source callbacks are called when `collectExtraData` is called.\n   *\n   * Returns an object to remove the source when the component unmounts.\n   *\n   * Conflicts trample with a warning.\n   */\n  static addFileSource(\n    key: string,\n    callback: SourceCallback,\n  ): {remove: () => void} {\n    return this._addSource(key, callback, BugReporting._fileSources);\n  }\n\n  static _addSource(\n    key: string,\n    callback: SourceCallback,\n    source: Map<string, SourceCallback>,\n  ): {remove: () => void} {\n    BugReporting._maybeInit();\n    if (source.has(key)) {\n      console.warn(\n        `BugReporting.add* called multiple times for same key '${key}'`,\n      );\n    }\n    source.set(key, callback);\n    return {\n      remove: () => {\n        source.delete(key);\n      },\n    };\n  }\n\n  /**\n   * This can be called from a native bug reporting flow, or from JS code.\n   *\n   * If available, this will call `NativeModules.BugReporting.setExtraData(extraData)`\n   * after collecting `extraData`.\n   */\n  static collectExtraData(): DebugData {\n    const extraData: ExtraData = {};\n    for (const [key, callback] of BugReporting._extraSources) {\n      extraData[key] = callback();\n    }\n    const fileData: ExtraData = {};\n    for (const [key, callback] of BugReporting._fileSources) {\n      fileData[key] = callback();\n    }\n    infoLog('BugReporting extraData:', extraData);\n    const BugReportingNativeModule = require('NativeModules').BugReporting;\n    BugReportingNativeModule &&\n      BugReportingNativeModule.setExtraData &&\n      BugReportingNativeModule.setExtraData(extraData, fileData);\n\n    const RedBoxNativeModule = require('NativeModules').RedBox;\n    RedBoxNativeModule &&\n      RedBoxNativeModule.setExtraData &&\n      RedBoxNativeModule.setExtraData(extraData, 'From BugReporting.js');\n\n    return {extras: extraData, files: fileData};\n  }\n}\n\nmodule.exports = BugReporting;\n"],"names":["RCTDeviceEventEmitter","require","d","Map","infoLog","defaultExtras","BugReporting","addFileSource","_subscription","addListener","collectExtraData","_redboxSubscription","key","callback","this","_addSource","_extraSources","_fileSources","source","_maybeInit","has","console","warn","set","remove","delete","extraData","_iterator","_isArray","Array","isArray","_i","Symbol","iterator","_ref3","length","next","done","value","_ref2","_slicedToArray","fileData","_iterator2","_isArray2","_i2","_ref6","_ref5","BugReportingNativeModule","setExtraData","RedBoxNativeModule","RedBox","extras","files","module","exports"],"mappings":"4BAUA,+CAEMA,EAAwBC,EAAOC,EAAA,IAC/BC,EAAMF,EAAOC,EAAA,IACbE,EAAUH,EAAOC,EAAA,IAQvB,SAASG,IACPC,EAAaC,cAAc,sBAAuB,WAAA,OAChDN,EAAOC,EAAA,GAAPD,SAUEK,yFAOGA,EAAaE,gBAChBF,EAAaE,cAAgBR,EAAsBS,YACjD,sBACAH,EAAaI,iBACb,MAEFL,KAGGC,EAAaK,sBAChBL,EAAaK,oBAAsBX,EAAsBS,YACvD,yBACAH,EAAaI,iBACb,yCAcJE,EACAC,GAEA,OAAOC,KAAKC,WAAWH,EAAKC,EAAUP,EAAaU,qDAYnDJ,EACAC,GAEA,OAAOC,KAAKC,WAAWH,EAAKC,EAAUP,EAAaW,iDAInDL,EACAC,EACAK,GASA,OAPAZ,EAAaa,aACTD,EAAOE,IAAIR,IACbS,QAAQC,KAAR,yDAC2DV,EAD3D,KAIFM,EAAOK,IAAIX,EAAKC,IAEdW,OAAQ,WACNN,EAAOO,OAAOb,gDAYlB,IAAMc,KACNC,EAA8BrB,EAAaU,cAA3CY,EAAAC,MAAAC,QAAAH,GAAAI,EAAA,EAAA,IAAAJ,EAAAC,EAAAD,EAAAA,EAAA,mBAAAK,OAAAA,OAAAC,SAAA,kBAA0D,CAAA,IAAAC,EAAA,GAAAN,EAAA,CAAA,GAAAG,GAAAJ,EAAAQ,OAAA,MAAAD,EAAAP,EAAAI,SAAA,CAAA,IAAAA,EAAAJ,EAAAS,QAAAC,KAAA,MAAAH,EAAAH,EAAAO,MAAA,IAAAC,EAAAC,EAAAN,EAAA,GAA9CtB,EAA8C2B,EAAA,GAAzC1B,EAAyC0B,EAAA,GACxDb,EAAUd,GAAOC,IAEnB,IAAM4B,KACNC,EAA8BpC,EAAaW,aAA3C0B,EAAAd,MAAAC,QAAAY,GAAAE,EAAA,EAAA,IAAAF,EAAAC,EAAAD,EAAAA,EAAA,mBAAAV,OAAAA,OAAAC,SAAA,kBAAyD,CAAA,IAAAY,EAAA,GAAAF,EAAA,CAAA,GAAAC,GAAAF,EAAAP,OAAA,MAAAU,EAAAH,EAAAE,SAAA,CAAA,IAAAA,EAAAF,EAAAN,QAAAC,KAAA,MAAAQ,EAAAD,EAAAN,MAAA,IAAAQ,EAAAN,EAAAK,EAAA,GAA7CjC,EAA6CkC,EAAA,GAAxCjC,EAAwCiC,EAAA,GACvDL,EAAS7B,GAAOC,IAElBT,EAAQ,0BAA2BsB,GACnC,IAAMqB,EAA2B9C,EAAOC,EAAA,IAAkBI,aAC1DyC,GACEA,EAAyBC,cACzBD,EAAyBC,aAAatB,EAAWe,GAEnD,IAAMQ,EAAqBhD,EAAOC,EAAA,IAAkBgD,OAKpD,OAJAD,GACEA,EAAmBD,cACnBC,EAAmBD,aAAatB,EAAW,yBAErCyB,OAAQzB,EAAW0B,MAAOX,aApGhCnC,EACGU,cAA6C,IAAIb,EADpDG,EAEGW,aAA4C,IAAId,EAFnDG,EAGGE,cAAsC,KAHzCF,EAIGK,oBAA4C,KAoGrD0C,EAAOC,QAAUhD","file":"312.js"}