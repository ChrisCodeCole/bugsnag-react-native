{"version":3,"sources":["/Users/jamielynch/repos/bugsnag-react-native/examples/plain/node_modules/react-native/Libraries/ReactNative/AppRegistry.js"],"sourcesContent":["/**\n * Copyright (c) 2015-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @flow\n * @format\n */\n'use strict';\n\nconst BatchedBridge = require('BatchedBridge');\nconst BugReporting = require('BugReporting');\nconst NativeModules = require('NativeModules');\nconst ReactNative = require('ReactNative');\nconst SceneTracker = require('SceneTracker');\n\nconst infoLog = require('infoLog');\nconst invariant = require('fbjs/lib/invariant');\nconst renderApplication = require('renderApplication');\n\ntype Task = (taskData: any) => Promise<void>;\ntype TaskProvider = () => Task;\nexport type ComponentProvider = () => React$ComponentType<any>;\nexport type ComponentProviderInstrumentationHook = (\n  component: ComponentProvider,\n) => React$ComponentType<any>;\nexport type AppConfig = {\n  appKey: string,\n  component?: ComponentProvider,\n  run?: Function,\n  section?: boolean,\n};\nexport type Runnable = {\n  component?: ComponentProvider,\n  run: Function,\n};\nexport type Runnables = {\n  [appKey: string]: Runnable,\n};\nexport type Registry = {\n  sections: Array<string>,\n  runnables: Runnables,\n};\nexport type WrapperComponentProvider = any => React$ComponentType<*>;\n\nconst runnables: Runnables = {};\nlet runCount = 1;\nconst sections: Runnables = {};\nconst tasks: Map<string, TaskProvider> = new Map();\nlet componentProviderInstrumentationHook: ComponentProviderInstrumentationHook = (\n  component: ComponentProvider,\n) => component();\n\nlet wrapperComponentProvider: ?WrapperComponentProvider;\n\n/**\n * `AppRegistry` is the JavaScript entry point to running all React Native apps.\n *\n * See http://facebook.github.io/react-native/docs/appregistry.html\n */\nconst AppRegistry = {\n  setWrapperComponentProvider(provider: WrapperComponentProvider) {\n    wrapperComponentProvider = provider;\n  },\n\n  registerConfig(config: Array<AppConfig>): void {\n    config.forEach(appConfig => {\n      if (appConfig.run) {\n        AppRegistry.registerRunnable(appConfig.appKey, appConfig.run);\n      } else {\n        invariant(\n          appConfig.component != null,\n          'AppRegistry.registerConfig(...): Every config is expected to set ' +\n            'either `run` or `component`, but `%s` has neither.',\n          appConfig.appKey,\n        );\n        AppRegistry.registerComponent(\n          appConfig.appKey,\n          appConfig.component,\n          appConfig.section,\n        );\n      }\n    });\n  },\n\n  /**\n   * Registers an app's root component.\n   *\n   * See http://facebook.github.io/react-native/docs/appregistry.html#registercomponent\n   */\n  registerComponent(\n    appKey: string,\n    componentProvider: ComponentProvider,\n    section?: boolean,\n  ): string {\n    runnables[appKey] = {\n      componentProvider,\n      run: appParameters => {\n        renderApplication(\n          componentProviderInstrumentationHook(componentProvider),\n          appParameters.initialProps,\n          appParameters.rootTag,\n          wrapperComponentProvider && wrapperComponentProvider(appParameters),\n          appParameters.fabric,\n        );\n      },\n    };\n    if (section) {\n      sections[appKey] = runnables[appKey];\n    }\n    return appKey;\n  },\n\n  registerRunnable(appKey: string, run: Function): string {\n    runnables[appKey] = {run};\n    return appKey;\n  },\n\n  registerSection(appKey: string, component: ComponentProvider): void {\n    AppRegistry.registerComponent(appKey, component, true);\n  },\n\n  getAppKeys(): Array<string> {\n    return Object.keys(runnables);\n  },\n\n  getSectionKeys(): Array<string> {\n    return Object.keys(sections);\n  },\n\n  getSections(): Runnables {\n    return {\n      ...sections,\n    };\n  },\n\n  getRunnable(appKey: string): ?Runnable {\n    return runnables[appKey];\n  },\n\n  getRegistry(): Registry {\n    return {\n      sections: AppRegistry.getSectionKeys(),\n      runnables: {...runnables},\n    };\n  },\n\n  setComponentProviderInstrumentationHook(\n    hook: ComponentProviderInstrumentationHook,\n  ) {\n    componentProviderInstrumentationHook = hook;\n  },\n\n  /**\n   * Loads the JavaScript bundle and runs the app.\n   *\n   * See http://facebook.github.io/react-native/docs/appregistry.html#runapplication\n   */\n  runApplication(appKey: string, appParameters: any): void {\n    const msg =\n      'Running application \"' +\n      appKey +\n      '\" with appParams: ' +\n      JSON.stringify(appParameters) +\n      '. ' +\n      '__DEV__ === ' +\n      String(__DEV__) +\n      ', development-level warning are ' +\n      (__DEV__ ? 'ON' : 'OFF') +\n      ', performance optimizations are ' +\n      (__DEV__ ? 'OFF' : 'ON');\n    infoLog(msg);\n    BugReporting.addSource(\n      'AppRegistry.runApplication' + runCount++,\n      () => msg,\n    );\n    invariant(\n      runnables[appKey] && runnables[appKey].run,\n      'Application ' +\n        appKey +\n        ' has not been registered.\\n\\n' +\n        \"Hint: This error often happens when you're running the packager \" +\n        '(local dev server) from a wrong folder. For example you have ' +\n        'multiple apps and the packager is still running for the app you ' +\n        'were working on before.\\nIf this is the case, simply kill the old ' +\n        'packager instance (e.g. close the packager terminal window) ' +\n        'and start the packager in the correct app folder (e.g. cd into app ' +\n        \"folder and run 'npm start').\\n\\n\" +\n        'This error can also happen due to a require() error during ' +\n        'initialization or failure to call AppRegistry.registerComponent.\\n\\n',\n    );\n\n    SceneTracker.setActiveScene({name: appKey});\n    runnables[appKey].run(appParameters);\n  },\n\n  /**\n   * Stops an application when a view should be destroyed.\n   *\n   * See http://facebook.github.io/react-native/docs/appregistry.html#unmountapplicationcomponentatroottag\n   */\n  unmountApplicationComponentAtRootTag(rootTag: number): void {\n    ReactNative.unmountComponentAtNodeAndRemoveContainer(rootTag);\n  },\n\n  /**\n   * Register a headless task. A headless task is a bit of code that runs without a UI.\n   *\n   * See http://facebook.github.io/react-native/docs/appregistry.html#registerheadlesstask\n   */\n  registerHeadlessTask(taskKey: string, task: TaskProvider): void {\n    if (tasks.has(taskKey)) {\n      console.warn(\n        `registerHeadlessTask called multiple times for same key '${taskKey}'`,\n      );\n    }\n    tasks.set(taskKey, task);\n  },\n\n  /**\n   * Only called from native code. Starts a headless task.\n   *\n   * See http://facebook.github.io/react-native/docs/appregistry.html#startheadlesstask\n   */\n  startHeadlessTask(taskId: number, taskKey: string, data: any): void {\n    const taskProvider = tasks.get(taskKey);\n    if (!taskProvider) {\n      throw new Error(`No task registered for key ${taskKey}`);\n    }\n    taskProvider()(data)\n      .then(() =>\n        NativeModules.HeadlessJsTaskSupport.notifyTaskFinished(taskId),\n      )\n      .catch(reason => {\n        console.error(reason);\n        NativeModules.HeadlessJsTaskSupport.notifyTaskFinished(taskId);\n      });\n  },\n};\n\nBatchedBridge.registerCallableModule('AppRegistry', AppRegistry);\n\nmodule.exports = AppRegistry;\n"],"names":["wrapperComponentProvider","BatchedBridge","require","d","BugReporting","NativeModules","ReactNative","SceneTracker","infoLog","invariant","renderApplication","runnables","runCount","sections","tasks","Map","componentProviderInstrumentationHook","component","AppRegistry","setWrapperComponentProvider","provider","registerConfig","config","forEach","appConfig","run","registerRunnable","appKey","registerComponent","section","componentProvider","appParameters","initialProps","rootTag","fabric","registerSection","getAppKeys","Object","keys","getSectionKeys","getSections","_objectSpread","getRunnable","getRegistry","setComponentProviderInstrumentationHook","hook","runApplication","msg","JSON","stringify","String","addSource","setActiveScene","name","unmountApplicationComponentAtRootTag","unmountComponentAtNodeAndRemoveContainer","registerHeadlessTask","taskKey","task","has","console","warn","set","startHeadlessTask","taskId","data","taskProvider","get","Error","then","HeadlessJsTaskSupport","notifyTaskFinished","catch","reason","error","registerCallableModule","module","exports"],"mappings":"4BASA,iBA6CIA,YA3CEC,EAAgBC,EAAOC,EAAA,IACvBC,EAAeF,EAAOC,EAAA,IACtBE,EAAgBH,EAAOC,EAAA,IACvBG,EAAcJ,EAAOC,EAAA,IACrBI,EAAeL,EAAOC,EAAA,IAEtBK,EAAUN,EAAOC,EAAA,IACjBM,EAAYP,EAAOC,EAAA,IACnBO,EAAoBR,EAAOC,EAAA,IA2B3BQ,KACFC,EAAW,EACTC,KACAC,EAAmC,IAAIC,IACzCC,EAA6E,SAC/EC,GAD+E,OAE5EA,KASCC,GACJC,4BADkB,SACUC,GAC1BpB,EAA2BoB,GAG7BC,eALkB,SAKHC,GACbA,EAAOC,QAAQ,SAAAC,GACTA,EAAUC,IACZP,EAAYQ,iBAAiBF,EAAUG,OAAQH,EAAUC,MAEzDhB,EACyB,MAAvBe,EAAUP,UADH,sHAIPO,EAAUG,QAEZT,EAAYU,kBACVJ,EAAUG,OACVH,EAAUP,UACVO,EAAUK,aAWlBD,kBA9BkB,SA+BhBD,EACAG,EACAD,GAiBA,OAfAlB,EAAUgB,IACRG,kBAAAA,EACAL,IAAK,SAAAM,GACHrB,EACEM,EAAqCc,GACrCC,EAAcC,aACdD,EAAcE,QACdjC,GAA4BA,EAAyB+B,GACrDA,EAAcG,UAIhBL,IACFhB,EAASc,GAAUhB,EAAUgB,IAExBA,GAGTD,iBArDkB,SAqDDC,EAAgBF,GAE/B,OADAd,EAAUgB,IAAWF,IAAAA,GACdE,GAGTQ,gBA1DkB,SA0DFR,EAAgBV,GAC9BC,EAAYU,kBAAkBD,EAAQV,GAAW,IAGnDmB,WA9DkB,WA+DhB,OAAOC,OAAOC,KAAK3B,IAGrB4B,eAlEkB,WAmEhB,OAAOF,OAAOC,KAAKzB,IAGrB2B,YAtEkB,WAuEhB,OAAAC,KACK5B,IAIP6B,YA5EkB,SA4ENf,GACV,OAAOhB,EAAUgB,IAGnBgB,YAhFkB,WAiFhB,OACE9B,SAAUK,EAAYqB,iBACtB5B,UAAS8B,KAAM9B,KAInBiC,wCAvFkB,SAwFhBC,GAEA7B,EAAuC6B,GAQzCC,eAlGkB,SAkGHnB,EAAgBI,GAC7B,IAAMgB,EACJ,wBACApB,EACA,qBACAqB,KAAKC,UAAUlB,GACf,iBAEAmB,QAAM,GACN,wEAIF1C,EAAQuC,GACR3C,EAAa+C,UACX,6BAA+BvC,IAC/B,WAAA,OAAMmC,IAERtC,EACEE,EAAUgB,IAAWhB,EAAUgB,GAAQF,IACvC,eACEE,EACA,8jBAYJpB,EAAa6C,gBAAgBC,KAAM1B,IACnChB,EAAUgB,GAAQF,IAAIM,IAQxBuB,qCA7IkB,SA6ImBrB,GACnC3B,EAAYiD,yCAAyCtB,IAQvDuB,qBAtJkB,SAsJGC,EAAiBC,GAChC5C,EAAM6C,IAAIF,IACZG,QAAQC,KAAR,4DAC8DJ,EAD9D,KAIF3C,EAAMgD,IAAIL,EAASC,IAQrBK,kBApKkB,SAoKAC,EAAgBP,EAAiBQ,GACjD,IAAMC,EAAepD,EAAMqD,IAAIV,GAC/B,IAAKS,EACH,MAAM,IAAIE,MAAJ,8BAAwCX,GAEhDS,GAAAA,CAAeD,GACZI,KAAK,WAAA,OACJhE,EAAciE,sBAAsBC,mBAAmBP,KAExDQ,MAAM,SAAAC,GACLb,QAAQc,MAAMD,GACdpE,EAAciE,sBAAsBC,mBAAmBP,OAK/D/D,EAAc0E,uBAAuB,cAAezD,GAEpD0D,EAAOC,QAAU3D","file":"312.js"}