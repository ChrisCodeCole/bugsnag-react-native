{"version":3,"sources":["/Users/jamielynch/repos/bugsnag-react-native/examples/plain/node_modules/react-native/Libraries/Animated/src/AnimatedImplementation.js"],"sourcesContent":["/**\n * Copyright (c) 2015-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @flow\n * @format\n * @preventMunge\n */\n'use strict';\n\nconst {AnimatedEvent, attachNativeEvent} = require('./AnimatedEvent');\nconst AnimatedAddition = require('./nodes/AnimatedAddition');\nconst AnimatedDiffClamp = require('./nodes/AnimatedDiffClamp');\nconst AnimatedDivision = require('./nodes/AnimatedDivision');\nconst AnimatedInterpolation = require('./nodes/AnimatedInterpolation');\nconst AnimatedModulo = require('./nodes/AnimatedModulo');\nconst AnimatedMultiplication = require('./nodes/AnimatedMultiplication');\nconst AnimatedNode = require('./nodes/AnimatedNode');\nconst AnimatedProps = require('./nodes/AnimatedProps');\nconst AnimatedSubtraction = require('./nodes/AnimatedSubtraction');\nconst AnimatedTracking = require('./nodes/AnimatedTracking');\nconst AnimatedValue = require('./nodes/AnimatedValue');\nconst AnimatedValueXY = require('./nodes/AnimatedValueXY');\nconst DecayAnimation = require('./animations/DecayAnimation');\nconst SpringAnimation = require('./animations/SpringAnimation');\nconst TimingAnimation = require('./animations/TimingAnimation');\n\nconst createAnimatedComponent = require('./createAnimatedComponent');\n\nimport type {\n  AnimationConfig,\n  EndCallback,\n  EndResult,\n} from './animations/Animation';\nimport type {TimingAnimationConfig} from './animations/TimingAnimation';\nimport type {DecayAnimationConfig} from './animations/DecayAnimation';\nimport type {SpringAnimationConfig} from './animations/SpringAnimation';\nimport type {Mapping, EventConfig} from './AnimatedEvent';\n\nexport type CompositeAnimation = {\n  start: (callback?: ?EndCallback) => void,\n  stop: () => void,\n  reset: () => void,\n  _startNativeLoop: (iterations?: number) => void,\n  _isUsingNativeDriver: () => boolean,\n};\n\nconst add = function(\n  a: AnimatedNode | number,\n  b: AnimatedNode | number,\n): AnimatedAddition {\n  return new AnimatedAddition(a, b);\n};\n\nconst subtract = function(\n  a: AnimatedNode | number,\n  b: AnimatedNode | number,\n): AnimatedSubtraction {\n  return new AnimatedSubtraction(a, b);\n};\n\nconst divide = function(\n  a: AnimatedNode | number,\n  b: AnimatedNode | number,\n): AnimatedDivision {\n  return new AnimatedDivision(a, b);\n};\n\nconst multiply = function(\n  a: AnimatedNode | number,\n  b: AnimatedNode | number,\n): AnimatedMultiplication {\n  return new AnimatedMultiplication(a, b);\n};\n\nconst modulo = function(a: AnimatedNode, modulus: number): AnimatedModulo {\n  return new AnimatedModulo(a, modulus);\n};\n\nconst diffClamp = function(\n  a: AnimatedNode,\n  min: number,\n  max: number,\n): AnimatedDiffClamp {\n  return new AnimatedDiffClamp(a, min, max);\n};\n\nconst _combineCallbacks = function(\n  callback: ?EndCallback,\n  config: AnimationConfig,\n) {\n  if (callback && config.onComplete) {\n    return (...args) => {\n      config.onComplete && config.onComplete(...args);\n      callback && callback(...args);\n    };\n  } else {\n    return callback || config.onComplete;\n  }\n};\n\nconst maybeVectorAnim = function(\n  value: AnimatedValue | AnimatedValueXY,\n  config: Object,\n  anim: (value: AnimatedValue, config: Object) => CompositeAnimation,\n): ?CompositeAnimation {\n  if (value instanceof AnimatedValueXY) {\n    const configX = {...config};\n    const configY = {...config};\n    for (const key in config) {\n      const {x, y} = config[key];\n      if (x !== undefined && y !== undefined) {\n        configX[key] = x;\n        configY[key] = y;\n      }\n    }\n    const aX = anim((value: AnimatedValueXY).x, configX);\n    const aY = anim((value: AnimatedValueXY).y, configY);\n    // We use `stopTogether: false` here because otherwise tracking will break\n    // because the second animation will get stopped before it can update.\n    return parallel([aX, aY], {stopTogether: false});\n  }\n  return null;\n};\n\nconst spring = function(\n  value: AnimatedValue | AnimatedValueXY,\n  config: SpringAnimationConfig,\n): CompositeAnimation {\n  const start = function(\n    animatedValue: AnimatedValue | AnimatedValueXY,\n    configuration: SpringAnimationConfig,\n    callback?: ?EndCallback,\n  ): void {\n    callback = _combineCallbacks(callback, configuration);\n    const singleValue: any = animatedValue;\n    const singleConfig: any = configuration;\n    singleValue.stopTracking();\n    if (configuration.toValue instanceof AnimatedNode) {\n      singleValue.track(\n        new AnimatedTracking(\n          singleValue,\n          configuration.toValue,\n          SpringAnimation,\n          singleConfig,\n          callback,\n        ),\n      );\n    } else {\n      singleValue.animate(new SpringAnimation(singleConfig), callback);\n    }\n  };\n  return (\n    maybeVectorAnim(value, config, spring) || {\n      start: function(callback?: ?EndCallback): void {\n        start(value, config, callback);\n      },\n\n      stop: function(): void {\n        value.stopAnimation();\n      },\n\n      reset: function(): void {\n        value.resetAnimation();\n      },\n\n      _startNativeLoop: function(iterations?: number): void {\n        const singleConfig = {...config, iterations};\n        start(value, singleConfig);\n      },\n\n      _isUsingNativeDriver: function(): boolean {\n        return config.useNativeDriver || false;\n      },\n    }\n  );\n};\n\nconst timing = function(\n  value: AnimatedValue | AnimatedValueXY,\n  config: TimingAnimationConfig,\n): CompositeAnimation {\n  const start = function(\n    animatedValue: AnimatedValue | AnimatedValueXY,\n    configuration: TimingAnimationConfig,\n    callback?: ?EndCallback,\n  ): void {\n    callback = _combineCallbacks(callback, configuration);\n    const singleValue: any = animatedValue;\n    const singleConfig: any = configuration;\n    singleValue.stopTracking();\n    if (configuration.toValue instanceof AnimatedNode) {\n      singleValue.track(\n        new AnimatedTracking(\n          singleValue,\n          configuration.toValue,\n          TimingAnimation,\n          singleConfig,\n          callback,\n        ),\n      );\n    } else {\n      singleValue.animate(new TimingAnimation(singleConfig), callback);\n    }\n  };\n\n  return (\n    maybeVectorAnim(value, config, timing) || {\n      start: function(callback?: ?EndCallback): void {\n        start(value, config, callback);\n      },\n\n      stop: function(): void {\n        value.stopAnimation();\n      },\n\n      reset: function(): void {\n        value.resetAnimation();\n      },\n\n      _startNativeLoop: function(iterations?: number): void {\n        const singleConfig = {...config, iterations};\n        start(value, singleConfig);\n      },\n\n      _isUsingNativeDriver: function(): boolean {\n        return config.useNativeDriver || false;\n      },\n    }\n  );\n};\n\nconst decay = function(\n  value: AnimatedValue | AnimatedValueXY,\n  config: DecayAnimationConfig,\n): CompositeAnimation {\n  const start = function(\n    animatedValue: AnimatedValue | AnimatedValueXY,\n    configuration: DecayAnimationConfig,\n    callback?: ?EndCallback,\n  ): void {\n    callback = _combineCallbacks(callback, configuration);\n    const singleValue: any = animatedValue;\n    const singleConfig: any = configuration;\n    singleValue.stopTracking();\n    singleValue.animate(new DecayAnimation(singleConfig), callback);\n  };\n\n  return (\n    maybeVectorAnim(value, config, decay) || {\n      start: function(callback?: ?EndCallback): void {\n        start(value, config, callback);\n      },\n\n      stop: function(): void {\n        value.stopAnimation();\n      },\n\n      reset: function(): void {\n        value.resetAnimation();\n      },\n\n      _startNativeLoop: function(iterations?: number): void {\n        const singleConfig = {...config, iterations};\n        start(value, singleConfig);\n      },\n\n      _isUsingNativeDriver: function(): boolean {\n        return config.useNativeDriver || false;\n      },\n    }\n  );\n};\n\nconst sequence = function(\n  animations: Array<CompositeAnimation>,\n): CompositeAnimation {\n  let current = 0;\n  return {\n    start: function(callback?: ?EndCallback) {\n      const onComplete = function(result) {\n        if (!result.finished) {\n          callback && callback(result);\n          return;\n        }\n\n        current++;\n\n        if (current === animations.length) {\n          callback && callback(result);\n          return;\n        }\n\n        animations[current].start(onComplete);\n      };\n\n      if (animations.length === 0) {\n        callback && callback({finished: true});\n      } else {\n        animations[current].start(onComplete);\n      }\n    },\n\n    stop: function() {\n      if (current < animations.length) {\n        animations[current].stop();\n      }\n    },\n\n    reset: function() {\n      animations.forEach((animation, idx) => {\n        if (idx <= current) {\n          animation.reset();\n        }\n      });\n      current = 0;\n    },\n\n    _startNativeLoop: function() {\n      throw new Error(\n        'Loops run using the native driver cannot contain Animated.sequence animations',\n      );\n    },\n\n    _isUsingNativeDriver: function(): boolean {\n      return false;\n    },\n  };\n};\n\ntype ParallelConfig = {\n  stopTogether?: boolean, // If one is stopped, stop all.  default: true\n};\nconst parallel = function(\n  animations: Array<CompositeAnimation>,\n  config?: ?ParallelConfig,\n): CompositeAnimation {\n  let doneCount = 0;\n  // Make sure we only call stop() at most once for each animation\n  const hasEnded = {};\n  const stopTogether = !(config && config.stopTogether === false);\n\n  const result = {\n    start: function(callback?: ?EndCallback) {\n      if (doneCount === animations.length) {\n        callback && callback({finished: true});\n        return;\n      }\n\n      animations.forEach((animation, idx) => {\n        const cb = function(endResult) {\n          hasEnded[idx] = true;\n          doneCount++;\n          if (doneCount === animations.length) {\n            doneCount = 0;\n            callback && callback(endResult);\n            return;\n          }\n\n          if (!endResult.finished && stopTogether) {\n            result.stop();\n          }\n        };\n\n        if (!animation) {\n          cb({finished: true});\n        } else {\n          animation.start(cb);\n        }\n      });\n    },\n\n    stop: function(): void {\n      animations.forEach((animation, idx) => {\n        !hasEnded[idx] && animation.stop();\n        hasEnded[idx] = true;\n      });\n    },\n\n    reset: function(): void {\n      animations.forEach((animation, idx) => {\n        animation.reset();\n        hasEnded[idx] = false;\n        doneCount = 0;\n      });\n    },\n\n    _startNativeLoop: function() {\n      throw new Error(\n        'Loops run using the native driver cannot contain Animated.parallel animations',\n      );\n    },\n\n    _isUsingNativeDriver: function(): boolean {\n      return false;\n    },\n  };\n\n  return result;\n};\n\nconst delay = function(time: number): CompositeAnimation {\n  // Would be nice to make a specialized implementation\n  return timing(new AnimatedValue(0), {toValue: 0, delay: time, duration: 0});\n};\n\nconst stagger = function(\n  time: number,\n  animations: Array<CompositeAnimation>,\n): CompositeAnimation {\n  return parallel(\n    animations.map((animation, i) => {\n      return sequence([delay(time * i), animation]);\n    }),\n  );\n};\n\ntype LoopAnimationConfig = {iterations: number};\n\nconst loop = function(\n  animation: CompositeAnimation,\n  {iterations = -1}: LoopAnimationConfig = {},\n): CompositeAnimation {\n  let isFinished = false;\n  let iterationsSoFar = 0;\n  return {\n    start: function(callback?: ?EndCallback) {\n      const restart = function(result: EndResult = {finished: true}): void {\n        if (\n          isFinished ||\n          iterationsSoFar === iterations ||\n          result.finished === false\n        ) {\n          callback && callback(result);\n        } else {\n          iterationsSoFar++;\n          animation.reset();\n          animation.start(restart);\n        }\n      };\n      if (!animation || iterations === 0) {\n        callback && callback({finished: true});\n      } else {\n        if (animation._isUsingNativeDriver()) {\n          animation._startNativeLoop(iterations);\n        } else {\n          restart(); // Start looping recursively on the js thread\n        }\n      }\n    },\n\n    stop: function(): void {\n      isFinished = true;\n      animation.stop();\n    },\n\n    reset: function(): void {\n      iterationsSoFar = 0;\n      isFinished = false;\n      animation.reset();\n    },\n\n    _startNativeLoop: function() {\n      throw new Error(\n        'Loops run using the native driver cannot contain Animated.loop animations',\n      );\n    },\n\n    _isUsingNativeDriver: function(): boolean {\n      return animation._isUsingNativeDriver();\n    },\n  };\n};\n\nfunction forkEvent(\n  event: ?AnimatedEvent | ?Function,\n  listener: Function,\n): AnimatedEvent | Function {\n  if (!event) {\n    return listener;\n  } else if (event instanceof AnimatedEvent) {\n    event.__addListener(listener);\n    return event;\n  } else {\n    return (...args) => {\n      typeof event === 'function' && event(...args);\n      listener(...args);\n    };\n  }\n}\n\nfunction unforkEvent(\n  event: ?AnimatedEvent | ?Function,\n  listener: Function,\n): void {\n  if (event && event instanceof AnimatedEvent) {\n    event.__removeListener(listener);\n  }\n}\n\nconst event = function(argMapping: Array<?Mapping>, config?: EventConfig): any {\n  const animatedEvent = new AnimatedEvent(argMapping, config);\n  if (animatedEvent.__isNative) {\n    return animatedEvent;\n  } else {\n    return animatedEvent.__getHandler();\n  }\n};\n\n/**\n * The `Animated` library is designed to make animations fluid, powerful, and\n * easy to build and maintain. `Animated` focuses on declarative relationships\n * between inputs and outputs, with configurable transforms in between, and\n * simple `start`/`stop` methods to control time-based animation execution.\n *\n * See http://facebook.github.io/react-native/docs/animated.html\n */\nmodule.exports = {\n  /**\n   * Standard value class for driving animations.  Typically initialized with\n   * `new Animated.Value(0);`\n   *\n   * See http://facebook.github.io/react-native/docs/animated.html#value\n   */\n  Value: AnimatedValue,\n  /**\n   * 2D value class for driving 2D animations, such as pan gestures.\n   *\n   * See https://facebook.github.io/react-native/docs/animatedvaluexy.html\n   */\n  ValueXY: AnimatedValueXY,\n  /**\n   * Exported to use the Interpolation type in flow.\n   *\n   * See http://facebook.github.io/react-native/docs/animated.html#interpolation\n   */\n  Interpolation: AnimatedInterpolation,\n  /**\n   * Exported for ease of type checking. All animated values derive from this\n   * class.\n   *\n   * See http://facebook.github.io/react-native/docs/animated.html#node\n   */\n  Node: AnimatedNode,\n\n  /**\n   * Animates a value from an initial velocity to zero based on a decay\n   * coefficient.\n   *\n   * See http://facebook.github.io/react-native/docs/animated.html#decay\n   */\n  decay,\n  /**\n   * Animates a value along a timed easing curve. The Easing module has tons of\n   * predefined curves, or you can use your own function.\n   *\n   * See http://facebook.github.io/react-native/docs/animated.html#timing\n   */\n  timing,\n  /**\n   * Animates a value according to an analytical spring model based on\n   * damped harmonic oscillation.\n   *\n   * See http://facebook.github.io/react-native/docs/animated.html#spring\n   */\n  spring,\n\n  /**\n   * Creates a new Animated value composed from two Animated values added\n   * together.\n   *\n   * See http://facebook.github.io/react-native/docs/animated.html#add\n   */\n  add,\n\n  /**\n   * Creates a new Animated value composed by subtracting the second Animated\n   * value from the first Animated value.\n   *\n   * See http://facebook.github.io/react-native/docs/animated.html#subtract\n   */\n  subtract,\n\n  /**\n   * Creates a new Animated value composed by dividing the first Animated value\n   * by the second Animated value.\n   *\n   * See http://facebook.github.io/react-native/docs/animated.html#divide\n   */\n  divide,\n\n  /**\n   * Creates a new Animated value composed from two Animated values multiplied\n   * together.\n   *\n   * See http://facebook.github.io/react-native/docs/animated.html#multiply\n   */\n  multiply,\n\n  /**\n   * Creates a new Animated value that is the (non-negative) modulo of the\n   * provided Animated value.\n   *\n   * See http://facebook.github.io/react-native/docs/animated.html#modulo\n   */\n  modulo,\n\n  /**\n   * Create a new Animated value that is limited between 2 values. It uses the\n   * difference between the last value so even if the value is far from the\n   * bounds it will start changing when the value starts getting closer again.\n   *\n   * See http://facebook.github.io/react-native/docs/animated.html#diffclamp\n   */\n  diffClamp,\n\n  /**\n   * Starts an animation after the given delay.\n   *\n   * See http://facebook.github.io/react-native/docs/animated.html#delay\n   */\n  delay,\n  /**\n   * Starts an array of animations in order, waiting for each to complete\n   * before starting the next. If the current running animation is stopped, no\n   * following animations will be started.\n   *\n   * See http://facebook.github.io/react-native/docs/animated.html#sequence\n   */\n  sequence,\n  /**\n   * Starts an array of animations all at the same time. By default, if one\n   * of the animations is stopped, they will all be stopped. You can override\n   * this with the `stopTogether` flag.\n   *\n   * See http://facebook.github.io/react-native/docs/animated.html#parallel\n   */\n  parallel,\n  /**\n   * Array of animations may run in parallel (overlap), but are started in\n   * sequence with successive delays.  Nice for doing trailing effects.\n   *\n   * See http://facebook.github.io/react-native/docs/animated.html#stagger\n   */\n  stagger,\n  /**\n   * Loops a given animation continuously, so that each time it reaches the\n   * end, it resets and begins again from the start.\n   *\n   * See http://facebook.github.io/react-native/docs/animated.html#loop\n   */\n  loop,\n\n  /**\n   * Takes an array of mappings and extracts values from each arg accordingly,\n   * then calls `setValue` on the mapped outputs.\n   *\n   * See http://facebook.github.io/react-native/docs/animated.html#event\n   */\n  event,\n\n  /**\n   * Make any React component Animatable.  Used to create `Animated.View`, etc.\n   *\n   * See http://facebook.github.io/react-native/docs/animated.html#createanimatedcomponent\n   */\n  createAnimatedComponent,\n\n  /**\n   * Imperative API to attach an animated value to an event on a view. Prefer\n   * using `Animated.event` with `useNativeDrive: true` if possible.\n   *\n   * See http://facebook.github.io/react-native/docs/animated.html#attachnativeevent\n   */\n  attachNativeEvent,\n\n  /**\n   * Advanced imperative API for snooping on animated events that are passed in\n   * through props. Use values directly where possible.\n   *\n   * See http://facebook.github.io/react-native/docs/animated.html#forkevent\n   */\n  forkEvent,\n  unforkEvent,\n\n  __PropsOnlyForTests: AnimatedProps,\n};\n"],"names":["require","d","AnimatedEvent","attachNativeEvent","AnimatedAddition","AnimatedDiffClamp","AnimatedDivision","AnimatedInterpolation","AnimatedModulo","AnimatedMultiplication","AnimatedNode","AnimatedProps","AnimatedSubtraction","AnimatedTracking","AnimatedValue","AnimatedValueXY","DecayAnimation","SpringAnimation","TimingAnimation","createAnimatedComponent","_combineCallbacks","callback","config","onComplete","apply","arguments","undefined","maybeVectorAnim","value","anim","configX","_objectSpread","configY","key","_config$key","x","y","aX","aY","parallel","stopTogether","timing","start","animatedValue","configuration","singleValue","singleConfig","stopTracking","toValue","track","animate","stop","stopAnimation","reset","resetAnimation","_startNativeLoop","iterations","_isUsingNativeDriver","useNativeDriver","sequence","animations","current","length","finished","result","forEach","animation","idx","Error","doneCount","hasEnded","cb","endResult","delay","time","duration","module","exports","Value","ValueXY","Interpolation","Node","decay","spring","add","a","b","subtract","divide","multiply","modulo","modulus","diffClamp","min","max","stagger","map","i","loop","_ref$iterations","isFinished","iterationsSoFar","restart","event","argMapping","animatedEvent","__isNative","__getHandler","forkEvent","listener","__addListener","unforkEvent","__removeListener","__PropsOnlyForTests"],"mappings":"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","file":"205.js"}