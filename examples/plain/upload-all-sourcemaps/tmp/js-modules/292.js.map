{"version":3,"sources":["/Users/jamielynch/repos/bugsnag-react-native/examples/plain/node_modules/react-native/Libraries/Interaction/TouchHistoryMath.js"],"sourcesContent":["/**\n * Copyright (c) 2016-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @format\n */\n\nconst TouchHistoryMath = {\n  /**\n   * This code is optimized and not intended to look beautiful. This allows\n   * computing of touch centroids that have moved after `touchesChangedAfter`\n   * timeStamp. You can compute the current centroid involving all touches\n   * moves after `touchesChangedAfter`, or you can compute the previous\n   * centroid of all touches that were moved after `touchesChangedAfter`.\n   *\n   * @param {TouchHistoryMath} touchHistory Standard Responder touch track\n   * data.\n   * @param {number} touchesChangedAfter timeStamp after which moved touches\n   * are considered \"actively moving\" - not just \"active\".\n   * @param {boolean} isXAxis Consider `x` dimension vs. `y` dimension.\n   * @param {boolean} ofCurrent Compute current centroid for actively moving\n   * touches vs. previous centroid of now actively moving touches.\n   * @return {number} value of centroid in specified dimension.\n   */\n  centroidDimension: function(\n    touchHistory,\n    touchesChangedAfter,\n    isXAxis,\n    ofCurrent,\n  ) {\n    const touchBank = touchHistory.touchBank;\n    let total = 0;\n    let count = 0;\n\n    const oneTouchData =\n      touchHistory.numberActiveTouches === 1\n        ? touchHistory.touchBank[touchHistory.indexOfSingleActiveTouch]\n        : null;\n\n    if (oneTouchData !== null) {\n      if (\n        oneTouchData.touchActive &&\n        oneTouchData.currentTimeStamp > touchesChangedAfter\n      ) {\n        total +=\n          ofCurrent && isXAxis\n            ? oneTouchData.currentPageX\n            : ofCurrent && !isXAxis\n              ? oneTouchData.currentPageY\n              : !ofCurrent && isXAxis\n                ? oneTouchData.previousPageX\n                : oneTouchData.previousPageY;\n        count = 1;\n      }\n    } else {\n      for (let i = 0; i < touchBank.length; i++) {\n        const touchTrack = touchBank[i];\n        if (\n          touchTrack !== null &&\n          touchTrack !== undefined &&\n          touchTrack.touchActive &&\n          touchTrack.currentTimeStamp >= touchesChangedAfter\n        ) {\n          let toAdd; // Yuck, program temporarily in invalid state.\n          if (ofCurrent && isXAxis) {\n            toAdd = touchTrack.currentPageX;\n          } else if (ofCurrent && !isXAxis) {\n            toAdd = touchTrack.currentPageY;\n          } else if (!ofCurrent && isXAxis) {\n            toAdd = touchTrack.previousPageX;\n          } else {\n            toAdd = touchTrack.previousPageY;\n          }\n          total += toAdd;\n          count++;\n        }\n      }\n    }\n    return count > 0 ? total / count : TouchHistoryMath.noCentroid;\n  },\n\n  currentCentroidXOfTouchesChangedAfter: function(\n    touchHistory,\n    touchesChangedAfter,\n  ) {\n    return TouchHistoryMath.centroidDimension(\n      touchHistory,\n      touchesChangedAfter,\n      true, // isXAxis\n      true, // ofCurrent\n    );\n  },\n\n  currentCentroidYOfTouchesChangedAfter: function(\n    touchHistory,\n    touchesChangedAfter,\n  ) {\n    return TouchHistoryMath.centroidDimension(\n      touchHistory,\n      touchesChangedAfter,\n      false, // isXAxis\n      true, // ofCurrent\n    );\n  },\n\n  previousCentroidXOfTouchesChangedAfter: function(\n    touchHistory,\n    touchesChangedAfter,\n  ) {\n    return TouchHistoryMath.centroidDimension(\n      touchHistory,\n      touchesChangedAfter,\n      true, // isXAxis\n      false, // ofCurrent\n    );\n  },\n\n  previousCentroidYOfTouchesChangedAfter: function(\n    touchHistory,\n    touchesChangedAfter,\n  ) {\n    return TouchHistoryMath.centroidDimension(\n      touchHistory,\n      touchesChangedAfter,\n      false, // isXAxis\n      false, // ofCurrent\n    );\n  },\n\n  currentCentroidX: function(touchHistory) {\n    return TouchHistoryMath.centroidDimension(\n      touchHistory,\n      0, // touchesChangedAfter\n      true, // isXAxis\n      true, // ofCurrent\n    );\n  },\n\n  currentCentroidY: function(touchHistory) {\n    return TouchHistoryMath.centroidDimension(\n      touchHistory,\n      0, // touchesChangedAfter\n      false, // isXAxis\n      true, // ofCurrent\n    );\n  },\n\n  noCentroid: -1,\n};\n\nmodule.exports = TouchHistoryMath;\n"],"names":["TouchHistoryMath","centroidDimension","touchHistory","touchesChangedAfter","isXAxis","ofCurrent","touchBank","total","count","oneTouchData","numberActiveTouches","indexOfSingleActiveTouch","touchActive","currentTimeStamp","currentPageX","currentPageY","previousPageX","previousPageY","i","length","touchTrack","undefined","noCentroid","currentCentroidXOfTouchesChangedAfter","currentCentroidYOfTouchesChangedAfter","previousCentroidXOfTouchesChangedAfter","previousCentroidYOfTouchesChangedAfter","currentCentroidX","currentCentroidY","module","exports"],"mappings":"4BASA,IAAMA,GAiBJC,kBAAmB,SACjBC,EACAC,EACAC,EACAC,GAEA,IAAMC,EAAYJ,EAAaI,UAC3BC,EAAQ,EACRC,EAAQ,EAENC,EACiC,IAArCP,EAAaQ,oBACTR,EAAaI,UAAUJ,EAAaS,0BACpC,KAEN,GAAqB,OAAjBF,EAEAA,EAAaG,aACbH,EAAaI,iBAAmBV,IAEhCI,GACEF,GAAaD,EACTK,EAAaK,aACbT,IAAcD,EACZK,EAAaM,cACZV,GAAaD,EACZK,EAAaO,cACbP,EAAaQ,cACvBT,EAAQ,QAGV,IAAK,IAAIU,EAAI,EAAGA,EAAIZ,EAAUa,OAAQD,IAAK,CACzC,IAAME,EAAad,EAAUY,GAC7B,GACiB,OAAfE,QACeC,IAAfD,GACAA,EAAWR,aACXQ,EAAWP,kBAAoBV,EAC/B,CAWAI,GATIF,GAAaD,EACPgB,EAAWN,aACVT,IAAcD,EACfgB,EAAWL,cACTV,GAAaD,EACfgB,EAAWJ,cAEXI,EAAWH,cAGrBT,KAIN,OAAOA,EAAQ,EAAID,EAAQC,EAAQR,EAAiBsB,YAGtDC,sCAAuC,SACrCrB,EACAC,GAEA,OAAOH,EAAiBC,kBACtBC,EACAC,GACA,GACA,IAIJqB,sCAAuC,SACrCtB,EACAC,GAEA,OAAOH,EAAiBC,kBACtBC,EACAC,GACA,GACA,IAIJsB,uCAAwC,SACtCvB,EACAC,GAEA,OAAOH,EAAiBC,kBACtBC,EACAC,GACA,GACA,IAIJuB,uCAAwC,SACtCxB,EACAC,GAEA,OAAOH,EAAiBC,kBACtBC,EACAC,GACA,GACA,IAIJwB,iBAAkB,SAASzB,GACzB,OAAOF,EAAiBC,kBACtBC,EACA,GACA,GACA,IAIJ0B,iBAAkB,SAAS1B,GACzB,OAAOF,EAAiBC,kBACtBC,EACA,GACA,GACA,IAIJoB,YAAU,GAGZO,EAAOC,QAAU9B","file":"292.js"}