{"version":3,"sources":["/Users/jamielynch/repos/bugsnag-react-native/examples/plain/node_modules/react-native/Libraries/Components/Touchable/TouchableWithoutFeedback.js"],"sourcesContent":["/**\n * Copyright (c) 2015-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @format\n * @flow\n */\n\n'use strict';\n\nconst EdgeInsetsPropType = require('EdgeInsetsPropType');\nconst React = require('React');\nconst PropTypes = require('prop-types');\nconst TimerMixin = require('react-timer-mixin');\nconst Touchable = require('Touchable');\nconst View = require('View');\n\nconst createReactClass = require('create-react-class');\nconst ensurePositiveDelayProps = require('ensurePositiveDelayProps');\nconst warning = require('fbjs/lib/warning');\n\nconst {\n  AccessibilityComponentTypes,\n  AccessibilityRoles,\n  AccessibilityStates,\n  AccessibilityTraits,\n} = require('ViewAccessibility');\n\nimport type {PressEvent} from 'CoreEventTypes';\nimport type {EdgeInsetsProp} from 'EdgeInsetsPropType';\nimport type {\n  AccessibilityComponentType,\n  AccessibilityRole,\n  AccessibilityStates as AccessibilityStatesFlow,\n  AccessibilityTraits as AccessibilityTraitsFlow,\n} from 'ViewAccessibility';\n\nconst PRESS_RETENTION_OFFSET = {top: 20, left: 20, right: 20, bottom: 30};\n\nexport type Props = $ReadOnly<{|\n  accessible?: ?boolean,\n  accessibilityComponentType?: ?AccessibilityComponentType,\n  accessibilityLabel?:\n    | null\n    | React$PropType$Primitive<any>\n    | string\n    | Array<any>\n    | any,\n  accessibilityHint?: string,\n  accessibilityRole?: ?AccessibilityRole,\n  accessibilityStates?: ?AccessibilityStatesFlow,\n  accessibilityTraits?: ?AccessibilityTraitsFlow,\n  children?: ?React.Node,\n  delayLongPress?: ?number,\n  delayPressIn?: ?number,\n  delayPressOut?: ?number,\n  disabled?: ?boolean,\n  hitSlop?: ?EdgeInsetsProp,\n  nativeID?: ?string,\n  onLayout?: ?Function,\n  onLongPress?: ?Function,\n  onPress?: ?Function,\n  onPressIn?: ?Function,\n  onPressOut?: ?Function,\n  pressRetentionOffset?: ?EdgeInsetsProp,\n  rejectResponderTermination?: ?boolean,\n  testID?: ?string,\n|}>;\n\n/**\n * Do not use unless you have a very good reason. All elements that\n * respond to press should have a visual feedback when touched.\n *\n * TouchableWithoutFeedback supports only one child.\n * If you wish to have several child components, wrap them in a View.\n */\nconst TouchableWithoutFeedback = ((createReactClass({\n  displayName: 'TouchableWithoutFeedback',\n  mixins: [TimerMixin, Touchable.Mixin],\n\n  propTypes: {\n    accessible: PropTypes.bool,\n    accessibilityLabel: PropTypes.node,\n    accessibilityHint: PropTypes.string,\n    accessibilityComponentType: PropTypes.oneOf(AccessibilityComponentTypes),\n    accessibilityRole: PropTypes.oneOf(AccessibilityRoles),\n    accessibilityStates: PropTypes.arrayOf(\n      PropTypes.oneOf(AccessibilityStates),\n    ),\n    accessibilityTraits: PropTypes.oneOfType([\n      PropTypes.oneOf(AccessibilityTraits),\n      PropTypes.arrayOf(PropTypes.oneOf(AccessibilityTraits)),\n    ]),\n    /**\n     * When `accessible` is true (which is the default) this may be called when\n     * the OS-specific concept of \"focus\" occurs. Some platforms may not have\n     * the concept of focus.\n     */\n    onFocus: PropTypes.func,\n    /**\n     * When `accessible` is true (which is the default) this may be called when\n     * the OS-specific concept of \"blur\" occurs, meaning the element lost focus.\n     * Some platforms may not have the concept of blur.\n     */\n    onBlur: PropTypes.func,\n    /**\n     * If true, disable all interactions for this component.\n     */\n    disabled: PropTypes.bool,\n    /**\n     * Called when the touch is released, but not if cancelled (e.g. by a scroll\n     * that steals the responder lock).\n     */\n    onPress: PropTypes.func,\n    /**\n     * Called as soon as the touchable element is pressed and invoked even before onPress.\n     * This can be useful when making network requests.\n     */\n    onPressIn: PropTypes.func,\n    /**\n     * Called as soon as the touch is released even before onPress.\n     */\n    onPressOut: PropTypes.func,\n    /**\n     * Invoked on mount and layout changes with\n     *\n     *   `{nativeEvent: {layout: {x, y, width, height}}}`\n     */\n    onLayout: PropTypes.func,\n\n    onLongPress: PropTypes.func,\n\n    nativeID: PropTypes.string,\n    testID: PropTypes.string,\n\n    /**\n     * Delay in ms, from the start of the touch, before onPressIn is called.\n     */\n    delayPressIn: PropTypes.number,\n    /**\n     * Delay in ms, from the release of the touch, before onPressOut is called.\n     */\n    delayPressOut: PropTypes.number,\n    /**\n     * Delay in ms, from onPressIn, before onLongPress is called.\n     */\n    delayLongPress: PropTypes.number,\n    /**\n     * When the scroll view is disabled, this defines how far your touch may\n     * move off of the button, before deactivating the button. Once deactivated,\n     * try moving it back and you'll see that the button is once again\n     * reactivated! Move it back and forth several times while the scroll view\n     * is disabled. Ensure you pass in a constant to reduce memory allocations.\n     */\n    pressRetentionOffset: EdgeInsetsPropType,\n    /**\n     * This defines how far your touch can start away from the button. This is\n     * added to `pressRetentionOffset` when moving off of the button.\n     * ** NOTE **\n     * The touch area never extends past the parent view bounds and the Z-index\n     * of sibling views always takes precedence if a touch hits two overlapping\n     * views.\n     */\n    hitSlop: EdgeInsetsPropType,\n  },\n\n  getInitialState: function() {\n    return this.touchableGetInitialState();\n  },\n\n  componentDidMount: function() {\n    ensurePositiveDelayProps(this.props);\n  },\n\n  UNSAFE_componentWillReceiveProps: function(nextProps: Object) {\n    ensurePositiveDelayProps(nextProps);\n  },\n\n  /**\n   * `Touchable.Mixin` self callbacks. The mixin will invoke these if they are\n   * defined on your component.\n   */\n  touchableHandlePress: function(e: PressEvent) {\n    this.props.onPress && this.props.onPress(e);\n  },\n\n  touchableHandleActivePressIn: function(e: PressEvent) {\n    this.props.onPressIn && this.props.onPressIn(e);\n  },\n\n  touchableHandleActivePressOut: function(e: PressEvent) {\n    this.props.onPressOut && this.props.onPressOut(e);\n  },\n\n  touchableHandleLongPress: function(e: PressEvent) {\n    this.props.onLongPress && this.props.onLongPress(e);\n  },\n\n  touchableGetPressRectOffset: function(): typeof PRESS_RETENTION_OFFSET {\n    // $FlowFixMe Invalid prop usage\n    return this.props.pressRetentionOffset || PRESS_RETENTION_OFFSET;\n  },\n\n  touchableGetHitSlop: function(): ?Object {\n    return this.props.hitSlop;\n  },\n\n  touchableGetHighlightDelayMS: function(): number {\n    return this.props.delayPressIn || 0;\n  },\n\n  touchableGetLongPressDelayMS: function(): number {\n    return this.props.delayLongPress === 0\n      ? 0\n      : this.props.delayLongPress || 500;\n  },\n\n  touchableGetPressOutDelayMS: function(): number {\n    return this.props.delayPressOut || 0;\n  },\n\n  render: function(): React.Element<any> {\n    // Note(avik): remove dynamic typecast once Flow has been upgraded\n    // $FlowFixMe(>=0.41.0)\n    const child = React.Children.only(this.props.children);\n    let children = child.props.children;\n    if (Touchable.TOUCH_TARGET_DEBUG && child.type === View) {\n      children = React.Children.toArray(children);\n      children.push(\n        Touchable.renderDebugView({color: 'red', hitSlop: this.props.hitSlop}),\n      );\n    }\n    return (React: any).cloneElement(child, {\n      accessible: this.props.accessible !== false,\n      accessibilityLabel: this.props.accessibilityLabel,\n      accessibilityHint: this.props.accessibilityHint,\n      accessibilityComponentType: this.props.accessibilityComponentType,\n      accessibilityRole: this.props.accessibilityRole,\n      accessibilityStates: this.props.accessibilityStates,\n      accessibilityTraits: this.props.accessibilityTraits,\n      nativeID: this.props.nativeID,\n      testID: this.props.testID,\n      onLayout: this.props.onLayout,\n      hitSlop: this.props.hitSlop,\n      onStartShouldSetResponder: this.touchableHandleStartShouldSetResponder,\n      onResponderTerminationRequest: this\n        .touchableHandleResponderTerminationRequest,\n      onResponderGrant: this.touchableHandleResponderGrant,\n      onResponderMove: this.touchableHandleResponderMove,\n      onResponderRelease: this.touchableHandleResponderRelease,\n      onResponderTerminate: this.touchableHandleResponderTerminate,\n      children,\n    });\n  },\n}): any): React.ComponentType<Props>);\n\nmodule.exports = TouchableWithoutFeedback;\n"],"names":["EdgeInsetsPropType","require","d","React","PropTypes","TimerMixin","Touchable","View","createReactClass","ensurePositiveDelayProps","AccessibilityComponentTypes","AccessibilityRoles","AccessibilityStates","AccessibilityTraits","PRESS_RETENTION_OFFSET","top","left","right","bottom","TouchableWithoutFeedback","displayName","mixins","Mixin","propTypes","accessible","bool","accessibilityLabel","node","accessibilityHint","string","accessibilityComponentType","oneOf","accessibilityRole","accessibilityStates","arrayOf","accessibilityTraits","oneOfType","onFocus","func","onBlur","disabled","onPress","onPressIn","onPressOut","onLayout","onLongPress","nativeID","testID","delayPressIn","number","delayPressOut","delayLongPress","pressRetentionOffset","hitSlop","getInitialState","this","touchableGetInitialState","componentDidMount","props","UNSAFE_componentWillReceiveProps","nextProps","touchableHandlePress","e","touchableHandleActivePressIn","touchableHandleActivePressOut","touchableHandleLongPress","touchableGetPressRectOffset","touchableGetHitSlop","touchableGetHighlightDelayMS","touchableGetLongPressDelayMS","touchableGetPressOutDelayMS","render","child","Children","only","children","TOUCH_TARGET_DEBUG","type","toArray","push","renderDebugView","color","cloneElement","onStartShouldSetResponder","touchableHandleStartShouldSetResponder","onResponderTerminationRequest","touchableHandleResponderTerminationRequest","onResponderGrant","touchableHandleResponderGrant","onResponderMove","touchableHandleResponderMove","onResponderRelease","touchableHandleResponderRelease","onResponderTerminate","touchableHandleResponderTerminate","module","exports"],"mappings":"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","file":"196.js"}