{"version":3,"sources":["/Users/jamielynch/repos/bugsnag-react-native/examples/plain/node_modules/react-native/Libraries/Animated/src/createAnimatedComponent.js"],"sourcesContent":["/**\n * Copyright (c) 2015-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @flow\n * @format\n */\n'use strict';\n\nconst {AnimatedEvent} = require('./AnimatedEvent');\nconst AnimatedProps = require('./nodes/AnimatedProps');\nconst React = require('React');\nconst ViewStylePropTypes = require('ViewStylePropTypes');\n\nconst invariant = require('fbjs/lib/invariant');\n\nfunction createAnimatedComponent(Component: any): any {\n  invariant(\n    typeof Component !== 'function' ||\n      (Component.prototype && Component.prototype.isReactComponent),\n    '`createAnimatedComponent` does not support stateless functional components; ' +\n      'use a class component instead.',\n  );\n\n  class AnimatedComponent extends React.Component<Object> {\n    _component: any;\n    _invokeAnimatedPropsCallbackOnMount: boolean = false;\n    _prevComponent: any;\n    _propsAnimated: AnimatedProps;\n    _eventDetachers: Array<Function> = [];\n    _setComponentRef: Function;\n\n    static __skipSetNativeProps_FOR_TESTS_ONLY = false;\n\n    constructor(props: Object) {\n      super(props);\n      this._setComponentRef = this._setComponentRef.bind(this);\n    }\n\n    componentWillUnmount() {\n      this._propsAnimated && this._propsAnimated.__detach();\n      this._detachNativeEvents();\n    }\n\n    setNativeProps(props) {\n      this._component.setNativeProps(props);\n    }\n\n    UNSAFE_componentWillMount() {\n      this._attachProps(this.props);\n    }\n\n    componentDidMount() {\n      if (this._invokeAnimatedPropsCallbackOnMount) {\n        this._invokeAnimatedPropsCallbackOnMount = false;\n        this._animatedPropsCallback();\n      }\n\n      this._propsAnimated.setNativeView(this._component);\n      this._attachNativeEvents();\n    }\n\n    _attachNativeEvents() {\n      // Make sure to get the scrollable node for components that implement\n      // `ScrollResponder.Mixin`.\n      const scrollableNode = this._component.getScrollableNode\n        ? this._component.getScrollableNode()\n        : this._component;\n\n      for (const key in this.props) {\n        const prop = this.props[key];\n        if (prop instanceof AnimatedEvent && prop.__isNative) {\n          prop.__attach(scrollableNode, key);\n          this._eventDetachers.push(() => prop.__detach(scrollableNode, key));\n        }\n      }\n    }\n\n    _detachNativeEvents() {\n      this._eventDetachers.forEach(remove => remove());\n      this._eventDetachers = [];\n    }\n\n    // The system is best designed when setNativeProps is implemented. It is\n    // able to avoid re-rendering and directly set the attributes that changed.\n    // However, setNativeProps can only be implemented on leaf native\n    // components. If you want to animate a composite component, you need to\n    // re-render it. In this case, we have a fallback that uses forceUpdate.\n    _animatedPropsCallback = () => {\n      if (this._component == null) {\n        // AnimatedProps is created in will-mount because it's used in render.\n        // But this callback may be invoked before mount in async mode,\n        // In which case we should defer the setNativeProps() call.\n        // React may throw away uncommitted work in async mode,\n        // So a deferred call won't always be invoked.\n        this._invokeAnimatedPropsCallbackOnMount = true;\n      } else if (\n        AnimatedComponent.__skipSetNativeProps_FOR_TESTS_ONLY ||\n        typeof this._component.setNativeProps !== 'function'\n      ) {\n        this.forceUpdate();\n      } else if (!this._propsAnimated.__isNative) {\n        this._component.setNativeProps(\n          this._propsAnimated.__getAnimatedValue(),\n        );\n      } else {\n        throw new Error(\n          'Attempting to run JS driven animation on animated ' +\n            'node that has been moved to \"native\" earlier by starting an ' +\n            'animation with `useNativeDriver: true`',\n        );\n      }\n    };\n\n    _attachProps(nextProps) {\n      const oldPropsAnimated = this._propsAnimated;\n\n      this._propsAnimated = new AnimatedProps(\n        nextProps,\n        this._animatedPropsCallback,\n      );\n\n      // When you call detach, it removes the element from the parent list\n      // of children. If it goes to 0, then the parent also detaches itself\n      // and so on.\n      // An optimization is to attach the new elements and THEN detach the old\n      // ones instead of detaching and THEN attaching.\n      // This way the intermediate state isn't to go to 0 and trigger\n      // this expensive recursive detaching to then re-attach everything on\n      // the very next operation.\n      oldPropsAnimated && oldPropsAnimated.__detach();\n    }\n\n    UNSAFE_componentWillReceiveProps(newProps) {\n      this._attachProps(newProps);\n    }\n\n    componentDidUpdate(prevProps) {\n      if (this._component !== this._prevComponent) {\n        this._propsAnimated.setNativeView(this._component);\n      }\n      if (this._component !== this._prevComponent || prevProps !== this.props) {\n        this._detachNativeEvents();\n        this._attachNativeEvents();\n      }\n    }\n\n    render() {\n      const props = this._propsAnimated.__getValue();\n      return (\n        <Component\n          {...props}\n          ref={this._setComponentRef}\n          // The native driver updates views directly through the UI thread so we\n          // have to make sure the view doesn't get optimized away because it cannot\n          // go through the NativeViewHierarchyManager since it operates on the shadow\n          // thread.\n          collapsable={\n            this._propsAnimated.__isNative ? false : props.collapsable\n          }\n        />\n      );\n    }\n\n    _setComponentRef(c) {\n      this._prevComponent = this._component;\n      this._component = c;\n    }\n\n    // A third party library can use getNode()\n    // to get the node reference of the decorated component\n    getNode() {\n      return this._component;\n    }\n  }\n\n  const propTypes = Component.propTypes;\n\n  AnimatedComponent.propTypes = {\n    style: function(props, propName, componentName) {\n      if (!propTypes) {\n        return;\n      }\n\n      for (const key in ViewStylePropTypes) {\n        if (!propTypes[key] && props[key] !== undefined) {\n          console.warn(\n            'You are setting the style `{ ' +\n              key +\n              ': ... }` as a prop. You ' +\n              'should nest it in a style object. ' +\n              'E.g. `{ style: { ' +\n              key +\n              ': ... } }`',\n          );\n        }\n      }\n    },\n  };\n\n  return AnimatedComponent;\n}\n\nmodule.exports = createAnimatedComponent;\n"],"names":["AnimatedEvent","require","d","AnimatedProps","React","ViewStylePropTypes","invariant","module","exports","Component","prototype","isReactComponent","AnimatedComponent","_React$Component","props","_this","_classCallCheck","this","_possibleConstructorReturn","_getPrototypeOf","call","_invokeAnimatedPropsCallbackOnMount","_eventDetachers","_animatedPropsCallback","_component","__skipSetNativeProps_FOR_TESTS_ONLY","setNativeProps","forceUpdate","_propsAnimated","__isNative","Error","__getAnimatedValue","_setComponentRef","bind","_assertThisInitialized","_inherits","_createClass","key","value","__detach","_detachNativeEvents","_attachProps","setNativeView","_attachNativeEvents","_this2","scrollableNode","getScrollableNode","_loop","prop","__attach","push","forEach","remove","nextProps","oldPropsAnimated","newProps","prevProps","_prevComponent","__getValue","createElement","_extends","ref","collapsable","c","propTypes","style","propName","componentName","undefined","console","warn"],"mappings":"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","file":"232.js"}