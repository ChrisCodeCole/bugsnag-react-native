{"version":3,"sources":["/Users/jamielynch/repos/bugsnag-react-native/examples/plain/node_modules/react-native/Libraries/Components/TextInput/TextInputState.js"],"sourcesContent":["/**\n * Copyright (c) 2015-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n *\n * This class is responsible for coordinating the \"focused\"\n * state for TextInputs. All calls relating to the keyboard\n * should be funneled through here\n *\n * @format\n * @flow strict-local\n */\n\n'use strict';\n\nconst Platform = require('Platform');\nconst UIManager = require('UIManager');\n\nlet currentlyFocusedID: ?number = null;\nconst inputs = new Set();\n\n/**\n * Returns the ID of the currently focused text field, if one exists\n * If no text field is focused it returns null\n */\nfunction currentlyFocusedField(): ?number {\n  return currentlyFocusedID;\n}\n\n/**\n * @param {number} TextInputID id of the text field to focus\n * Focuses the specified text field\n * noop if the text field was already focused\n */\nfunction focusTextInput(textFieldID: ?number) {\n  if (currentlyFocusedID !== textFieldID && textFieldID !== null) {\n    currentlyFocusedID = textFieldID;\n    if (Platform.OS === 'ios') {\n      UIManager.focus(textFieldID);\n    } else if (Platform.OS === 'android') {\n      UIManager.dispatchViewManagerCommand(\n        textFieldID,\n        UIManager.AndroidTextInput.Commands.focusTextInput,\n        null,\n      );\n    }\n  }\n}\n\n/**\n * @param {number} textFieldID id of the text field to unfocus\n * Unfocuses the specified text field\n * noop if it wasn't focused\n */\nfunction blurTextInput(textFieldID: ?number) {\n  if (currentlyFocusedID === textFieldID && textFieldID !== null) {\n    currentlyFocusedID = null;\n    if (Platform.OS === 'ios') {\n      UIManager.blur(textFieldID);\n    } else if (Platform.OS === 'android') {\n      UIManager.dispatchViewManagerCommand(\n        textFieldID,\n        UIManager.AndroidTextInput.Commands.blurTextInput,\n        null,\n      );\n    }\n  }\n}\n\nfunction registerInput(textFieldID: number) {\n  inputs.add(textFieldID);\n}\n\nfunction unregisterInput(textFieldID: number) {\n  inputs.delete(textFieldID);\n}\n\nfunction isTextInput(textFieldID: number) {\n  return inputs.has(textFieldID);\n}\n\nmodule.exports = {\n  currentlyFocusedField,\n  focusTextInput,\n  blurTextInput,\n  registerInput,\n  unregisterInput,\n  isTextInput,\n};\n"],"names":["require","d","UIManager","currentlyFocusedID","inputs","Set","module","exports","currentlyFocusedField","focusTextInput","textFieldID","dispatchViewManagerCommand","AndroidTextInput","Commands","blurTextInput","registerInput","add","unregisterInput","delete","isTextInput","has"],"mappings":"4BAeA,aAEiBA,EAAOC,EAAA,IAAxB,IACMC,EAAYF,EAAOC,EAAA,IAErBE,EAA8B,KAC5BC,EAAS,IAAIC,IA8DnBC,EAAOC,SACLC,sBAzDF,WACE,OAAOL,GAyDPM,eAjDF,SAAwBC,GAClBP,IAAuBO,GAA+B,OAAhBA,IACxCP,EAAqBO,EAInBR,EAAUS,2BACRD,EACAR,EAAUU,iBAAiBC,SAASJ,eACpC,QAyCNK,cA9BF,SAAuBJ,GACjBP,IAAuBO,GAA+B,OAAhBA,IACxCP,EAAqB,KAInBD,EAAUS,2BACRD,EACAR,EAAUU,iBAAiBC,SAASC,cACpC,QAsBNC,cAhBF,SAAuBL,GACrBN,EAAOY,IAAIN,IAgBXO,gBAbF,SAAyBP,GACvBN,EAAOc,OAAOR,IAadS,YAVF,SAAqBT,GACnB,OAAON,EAAOgB,IAAIV","file":"159.js"}