{"version":3,"sources":["/Users/jamielynch/repos/bugsnag-react-native/examples/plain/node_modules/react-native/Libraries/EventEmitter/NativeEventEmitter.js"],"sourcesContent":["/**\n * Copyright (c) 2015-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @format\n * @flow\n */\n\n'use strict';\n\nconst EventEmitter = require('EventEmitter');\nconst Platform = require('Platform');\nconst RCTDeviceEventEmitter = require('RCTDeviceEventEmitter');\n\nconst invariant = require('fbjs/lib/invariant');\n\nimport type EmitterSubscription from 'EmitterSubscription';\n\ntype NativeModule = {\n  +addListener: (eventType: string) => void,\n  +removeListeners: (count: number) => void,\n};\n\n/**\n * Abstract base class for implementing event-emitting modules. This implements\n * a subset of the standard EventEmitter node module API.\n */\nclass NativeEventEmitter extends EventEmitter {\n  _nativeModule: ?NativeModule;\n\n  constructor(nativeModule: ?NativeModule) {\n    super(RCTDeviceEventEmitter.sharedSubscriber);\n    if (Platform.OS === 'ios') {\n      invariant(nativeModule, 'Native module cannot be null.');\n      this._nativeModule = nativeModule;\n    }\n  }\n\n  addListener(\n    eventType: string,\n    listener: Function,\n    context: ?Object,\n  ): EmitterSubscription {\n    if (this._nativeModule != null) {\n      this._nativeModule.addListener(eventType);\n    }\n    return super.addListener(eventType, listener, context);\n  }\n\n  removeAllListeners(eventType: string) {\n    invariant(eventType, 'eventType argument is required.');\n    const count = this.listeners(eventType).length;\n    if (this._nativeModule != null) {\n      this._nativeModule.removeListeners(count);\n    }\n    super.removeAllListeners(eventType);\n  }\n\n  removeSubscription(subscription: EmitterSubscription) {\n    if (this._nativeModule != null) {\n      this._nativeModule.removeListeners(1);\n    }\n    super.removeSubscription(subscription);\n  }\n}\n\nmodule.exports = NativeEventEmitter;\n"],"names":["EventEmitter","require","d","RCTDeviceEventEmitter","invariant","NativeEventEmitter","nativeModule","_classCallCheck","this","_possibleConstructorReturn","_getPrototypeOf","call","sharedSubscriber","eventType","listener","context","_nativeModule","addListener","_get","prototype","count","listeners","length","removeListeners","subscription","module","exports"],"mappings":"4BAUA,6EAEMA,EAAeC,EAAOC,EAAA,IAEtBC,GADWF,EAAOC,EAAA,IACMD,EAAOC,EAAA,KAE/BE,EAAYH,EAAOC,EAAA,IAanBG,eAGJ,SAAAA,EAAYC,GAA6B,OAAAC,EAAAC,KAAAH,GACvCI,EAAAD,KAAAE,EAAAL,GAAAM,KAAAH,KAAML,EAAsBS,8BAJCZ,0CAY7Ba,EACAC,EACAC,GAKA,OAH0B,MAAtBP,KAAKQ,eACPR,KAAKQ,cAAcC,YAAYJ,GAEjCK,EAAAR,EAAAL,EAAAc,WAAA,cAAAX,MAAAG,KAAAH,KAAyBK,EAAWC,EAAUC,8CAG7BF,GACjBT,EAAUS,EAAW,mCACrB,IAAMO,EAAQZ,KAAKa,UAAUR,GAAWS,OACd,MAAtBd,KAAKQ,eACPR,KAAKQ,cAAcO,gBAAgBH,GAErCF,EAAAR,EAAAL,EAAAc,WAAA,qBAAAX,MAAAG,KAAAH,KAAyBK,8CAGRW,GACS,MAAtBhB,KAAKQ,eACPR,KAAKQ,cAAcO,gBAAgB,GAErCL,EAAAR,EAAAL,EAAAc,WAAA,qBAAAX,MAAAG,KAAAH,KAAyBgB,aAI7BC,EAAOC,QAAUrB","file":"126.js"}