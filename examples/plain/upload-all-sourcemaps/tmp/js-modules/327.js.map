{"version":3,"sources":["/Users/jamielynch/repos/bugsnag-react-native/examples/plain/node_modules/react-native/Libraries/Components/DatePickerAndroid/DatePickerAndroid.android.js"],"sourcesContent":["/**\n * Copyright (c) 2015-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @format\n * @flow\n */\n\n'use strict';\n\nconst DatePickerModule = require('NativeModules').DatePickerAndroid;\n\n/**\n * Convert a Date to a timestamp.\n */\nfunction _toMillis(options: Object, key: string) {\n  const dateVal = options[key];\n  // Is it a Date object?\n  if (typeof dateVal === 'object' && typeof dateVal.getMonth === 'function') {\n    options[key] = dateVal.getTime();\n  }\n}\n\n/**\n * Opens the standard Android date picker dialog.\n *\n * ### Example\n *\n * ```\n * try {\n *   const {action, year, month, day} = await DatePickerAndroid.open({\n *     // Use `new Date()` for current date.\n *     // May 25 2020. Month 0 is January.\n *     date: new Date(2020, 4, 25)\n *   });\n *   if (action !== DatePickerAndroid.dismissedAction) {\n *     // Selected year, month (0-11), day\n *   }\n * } catch ({code, message}) {\n *   console.warn('Cannot open date picker', message);\n * }\n * ```\n */\nclass DatePickerAndroid {\n  /**\n   * Opens the standard Android date picker dialog.\n   *\n   * The available keys for the `options` object are:\n   *\n   *   - `date` (`Date` object or timestamp in milliseconds) - date to show by default\n   *   - `minDate` (`Date` or timestamp in milliseconds) - minimum date that can be selected\n   *   - `maxDate` (`Date` object or timestamp in milliseconds) - maximum date that can be selected\n   *   - `mode` (`enum('calendar', 'spinner', 'default')`) - To set the date-picker mode to calendar/spinner/default\n   *     - 'calendar': Show a date picker in calendar mode.\n   *     - 'spinner': Show a date picker in spinner mode.\n   *     - 'default': Show a default native date picker(spinner/calendar) based on android versions.\n   *\n   * Returns a Promise which will be invoked an object containing `action`, `year`, `month` (0-11),\n   * `day` if the user picked a date. If the user dismissed the dialog, the Promise will\n   * still be resolved with action being `DatePickerAndroid.dismissedAction` and all the other keys\n   * being undefined. **Always** check whether the `action` before reading the values.\n   *\n   * Note the native date picker dialog has some UI glitches on Android 4 and lower\n   * when using the `minDate` and `maxDate` options.\n   */\n  static async open(options: Object): Promise<Object> {\n    const optionsMs = options;\n    if (optionsMs) {\n      _toMillis(options, 'date');\n      _toMillis(options, 'minDate');\n      _toMillis(options, 'maxDate');\n    }\n    return DatePickerModule.open(options);\n  }\n\n  /**\n   * A date has been selected.\n   */\n  static get dateSetAction() {\n    return 'dateSetAction';\n  }\n  /**\n   * The dialog has been dismissed.\n   */\n  static get dismissedAction() {\n    return 'dismissedAction';\n  }\n}\n\nmodule.exports = DatePickerAndroid;\n"],"names":["DatePickerModule","require","d","DatePickerAndroid","_toMillis","options","key","dateVal","getMonth","getTime","open","module","exports"],"mappings":"4BAUA,+CAEMA,EAAmBC,EAAOC,EAAA,IAAkBC,kBAKlD,SAASC,EAAUC,EAAiBC,GAClC,IAAMC,EAAUF,EAAQC,GAED,iBAAZC,GAAoD,mBAArBA,EAAQC,WAChDH,EAAQC,GAAOC,EAAQE,eAwBrBN,iFAsBcE,yEACEA,IAEhBD,EAAUC,EAAS,QACnBD,EAAUC,EAAS,WACnBD,EAAUC,EAAS,8BAEdL,EAAiBU,KAAKL,wFAO7B,MAAO,wDAMP,MAAO,4BAIXM,EAAOC,QAAUT","file":"327.js"}