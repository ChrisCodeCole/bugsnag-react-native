{"version":3,"sources":["/Users/jamielynch/repos/bugsnag-react-native/examples/plain/node_modules/react-native/Libraries/StyleSheet/processColor.js"],"sourcesContent":["/**\n * Copyright (c) 2015-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @format\n * @flow strict-local\n */\n\n'use strict';\n\nconst Platform = require('Platform');\n\nconst normalizeColor = require('normalizeColor');\n\n/* eslint no-bitwise: 0 */\nfunction processColor(color?: ?(string | number)): ?number {\n  if (color === undefined || color === null) {\n    return color;\n  }\n\n  let int32Color = normalizeColor(color);\n  if (int32Color === null || int32Color === undefined) {\n    return undefined;\n  }\n\n  // Converts 0xrrggbbaa into 0xaarrggbb\n  int32Color = ((int32Color << 24) | (int32Color >>> 8)) >>> 0;\n\n  if (Platform.OS === 'android') {\n    // Android use 32 bit *signed* integer to represent the color\n    // We utilize the fact that bitwise operations in JS also operates on\n    // signed 32 bit integers, so that we can use those to convert from\n    // *unsigned* to *signed* 32bit int that way.\n    int32Color = int32Color | 0x0;\n  }\n  return int32Color;\n}\n\nmodule.exports = processColor;\n"],"names":["require","d","normalizeColor","module","exports","color","undefined","int32Color"],"mappings":"4BAUA,aAEiBA,EAAOC,EAAA,IAAxB,IAEMC,EAAiBF,EAAOC,EAAA,IA0B9BE,EAAOC,QAvBP,SAAsBC,GACpB,QAAcC,IAAVD,GAAiC,OAAVA,EACzB,OAAOA,EAGT,IAAIE,EAAaL,EAAeG,GAChC,OAAmB,OAAfE,QAAsCD,IAAfC,GAK3BA,GAAeA,GAAc,GAAOA,IAAe,KAAQ,EAOzDA,GAA0B,QAZ5B","file":"83.js"}