{"version":3,"sources":["/Users/jamielynch/repos/bugsnag-react-native/examples/plain/node_modules/react-native/Libraries/Utilities/defineLazyObjectProperty.js"],"sourcesContent":["/**\n * Copyright (c) 2013-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @format\n * @flow\n */\n\n'use strict';\n\n/**\n * Defines a lazily evaluated property on the supplied `object`.\n */\nfunction defineLazyObjectProperty<T>(\n  object: Object,\n  name: string,\n  descriptor: {\n    get: () => T,\n    enumerable?: boolean,\n    writable?: boolean,\n  },\n): void {\n  const {get} = descriptor;\n  const enumerable = descriptor.enumerable !== false;\n  const writable = descriptor.writable !== false;\n\n  let value;\n  let valueSet = false;\n  function getValue(): T {\n    // WORKAROUND: A weird infinite loop occurs where calling `getValue` calls\n    // `setValue` which calls `Object.defineProperty` which somehow triggers\n    // `getValue` again. Adding `valueSet` breaks this loop.\n    if (!valueSet) {\n      // Calling `get()` here can trigger an infinite loop if it fails to\n      // remove the getter on the property, which can happen when executing\n      // JS in a V8 context.  `valueSet = true` will break this loop, and\n      // sets the value of the property to undefined, until the code in `get()`\n      // finishes, at which point the property is set to the correct value.\n      valueSet = true;\n      setValue(get());\n    }\n    return value;\n  }\n  function setValue(newValue: T): void {\n    value = newValue;\n    valueSet = true;\n    Object.defineProperty(object, name, {\n      value: newValue,\n      configurable: true,\n      enumerable,\n      writable,\n    });\n  }\n\n  Object.defineProperty(object, name, {\n    get: getValue,\n    set: setValue,\n    configurable: true,\n    enumerable,\n  });\n}\n\nmodule.exports = defineLazyObjectProperty;\n"],"names":["module","exports","object","name","descriptor","value","get","enumerable","writable","valueSet","setValue","newValue","Object","defineProperty","configurable","set"],"mappings":"4BAUA,aAsDAA,EAAOC,QAjDP,SACEC,EACAC,EACAC,GAKM,IAKFC,EAJGC,EAAOF,EAAPE,IACDC,GAAuC,IAA1BH,EAAWG,WACxBC,GAAmC,IAAxBJ,EAAWI,SAGxBC,GAAW,EAgBf,SAASC,EAASC,GAChBN,EAAQM,EACRF,GAAW,EACXG,OAAOC,eAAeX,EAAQC,GAC5BE,MAAOM,EACPG,cAAc,EACdP,WAAAA,EACAC,SAAAA,IAIJI,OAAOC,eAAeX,EAAQC,GAC5BG,IA3BF,WAaE,OATKG,IAMHA,GAAW,EACXC,EAASJ,MAEJD,GAePU,IAAKL,EACLI,cAAc,EACdP,WAAAA","file":"48.js"}