{"version":3,"sources":["/Users/jamielynch/repos/bugsnag-react-native/examples/plain/node_modules/react-native/Libraries/Components/ProgressBarAndroid/ProgressBarAndroid.android.js"],"sourcesContent":["/**\n * Copyright (c) 2015-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @flow\n * @format\n */\n\n'use strict';\n\nconst React = require('React');\n\nconst requireNativeComponent = require('requireNativeComponent');\n\nimport type {NativeComponent} from 'ReactNative';\nimport type {ViewProps} from 'ViewPropTypes';\n\nconst AndroidProgressBar = requireNativeComponent('AndroidProgressBar');\n\ntype Props = $ReadOnly<{|\n  ...ViewProps,\n\n  /**\n   * Style of the ProgressBar and whether it shows indeterminate progress (e.g. spinner).\n   *\n   * `indeterminate` can only be false if `styleAttr` is Horizontal, and requires a\n   * `progress` value.\n   */\n  ...\n    | {|\n        styleAttr: 'Horizontal',\n        indeterminate: false,\n        progress: number,\n      |}\n    | {|\n        typeAttr:\n          | 'Horizontal'\n          | 'Normal'\n          | 'Small'\n          | 'Large'\n          | 'Inverse'\n          | 'SmallInverse'\n          | 'LargeInverse',\n        indeterminate: true,\n      |},\n  /**\n   * Whether to show the ProgressBar (true, the default) or hide it (false).\n   */\n  animating?: ?boolean,\n  /**\n   * Color of the progress bar.\n   */\n  color?: ?string,\n  /**\n   * Used to locate this view in end-to-end tests.\n   */\n  testID?: ?string,\n|}>;\n\n/**\n * React component that wraps the Android-only `ProgressBar`. This component is\n * used to indicate that the app is loading or there is activity in the app.\n *\n * Example:\n *\n * ```\n * render: function() {\n *   var progressBar =\n *     <View style={styles.container}>\n *       <ProgressBar styleAttr=\"Inverse\" />\n *     </View>;\n\n *   return (\n *     <MyLoadingComponent\n *       componentView={componentView}\n *       loadingView={progressBar}\n *       style={styles.loadingComponent}\n *     />\n *   );\n * },\n * ```\n */\nconst ProgressBarAndroid = (\n  props: Props,\n  forwardedRef: ?React.Ref<'AndroidProgressBar'>,\n) => {\n  return <AndroidProgressBar {...props} ref={forwardedRef} />;\n};\n\n// $FlowFixMe - TODO T29156721 `React.forwardRef` is not defined in Flow, yet.\nconst ProgressBarAndroidToExport = React.forwardRef(ProgressBarAndroid);\n\nProgressBarAndroidToExport.defaultProps = {\n  styleAttr: 'Normal',\n  indeterminate: true,\n  animating: true,\n};\n\nmodule.exports = (ProgressBarAndroidToExport: Class<NativeComponent<Props>>);\n"],"names":["React","require","d","AndroidProgressBar","requireNativeComponent","ProgressBarAndroidToExport","forwardRef","props","forwardedRef","createElement","_extends","ref","defaultProps","styleAttr","indeterminate","animating","module","exports"],"mappings":"4BAUA,2BAEMA,EAAQC,EAAOC,EAAA,IAOfC,EALyBF,EAAOC,EAAA,GAKXE,CAAuB,sBAyE5CC,EAA6BL,EAAMM,WARd,SACzBC,EACAC,GAEA,OAAOR,EAAAS,cAACN,EAADO,KAAwBH,GAAOI,IAAKH,OAM7CH,EAA2BO,cACzBC,UAAW,SACXC,eAAe,EACfC,WAAW,GAGbC,EAAOC,QAAWZ","file":"170.js"}