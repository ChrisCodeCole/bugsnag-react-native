{"version":3,"sources":["/Users/jamielynch/repos/bugsnag-react-native/examples/plain/node_modules/react-native/Libraries/Share/Share.js"],"sourcesContent":["/**\n * Copyright (c) 2016-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @format\n * @flow\n */\n\n'use strict';\n\nconst Platform = require('Platform');\n\nconst invariant = require('fbjs/lib/invariant');\nconst processColor = require('processColor');\n\nconst {ActionSheetManager, ShareModule} = require('NativeModules');\n\ntype Content =\n  | {title?: string, message: string}\n  | {title?: string, url: string};\ntype Options = {\n  dialogTitle?: string,\n  excludedActivityTypes?: Array<string>,\n  tintColor?: string,\n  subject?: string,\n};\n\nclass Share {\n  /**\n   * Open a dialog to share text content.\n   *\n   * In iOS, Returns a Promise which will be invoked an object containing `action`, `activityType`.\n   * If the user dismissed the dialog, the Promise will still be resolved with action being `Share.dismissedAction`\n   * and all the other keys being undefined.\n   *\n   * In Android, Returns a Promise which always be resolved with action being `Share.sharedAction`.\n   *\n   * ### Content\n   *\n   *  - `message` - a message to share\n   *  - `title` - title of the message\n   *\n   * #### iOS\n   *\n   *  - `url` - an URL to share\n   *\n   * At least one of URL and message is required.\n   *\n   * ### Options\n   *\n   * #### iOS\n   *\n   *  - `subject` - a subject to share via email\n   *  - `excludedActivityTypes`\n   *  - `tintColor`\n   *\n   * #### Android\n   *\n   *  - `dialogTitle`\n   *\n   */\n  static share(content: Content, options: Options = {}): Promise<Object> {\n    invariant(\n      typeof content === 'object' && content !== null,\n      'Content to share must be a valid object',\n    );\n    invariant(\n      typeof content.url === 'string' || typeof content.message === 'string',\n      'At least one of URL and message is required',\n    );\n    invariant(\n      typeof options === 'object' && options !== null,\n      'Options must be a valid object',\n    );\n\n    if (Platform.OS === 'android') {\n      invariant(\n        !content.title || typeof content.title === 'string',\n        'Invalid title: title should be a string.',\n      );\n      return ShareModule.share(content, options.dialogTitle);\n    } else if (Platform.OS === 'ios') {\n      return new Promise((resolve, reject) => {\n        ActionSheetManager.showShareActionSheetWithOptions(\n          {...content, ...options, tintColor: processColor(options.tintColor)},\n          error => reject(error),\n          (success, activityType) => {\n            if (success) {\n              resolve({\n                action: 'sharedAction',\n                activityType: activityType,\n              });\n            } else {\n              resolve({\n                action: 'dismissedAction',\n              });\n            }\n          },\n        );\n      });\n    } else {\n      return Promise.reject(new Error('Unsupported platform'));\n    }\n  }\n\n  /**\n   * The content was successfully shared.\n   */\n  static get sharedAction(): string {\n    return 'sharedAction';\n  }\n\n  /**\n   * The dialog has been dismissed.\n   * @platform ios\n   */\n  static get dismissedAction(): string {\n    return 'dismissedAction';\n  }\n}\n\nmodule.exports = Share;\n"],"names":["invariant","require","d","ShareModule","ActionSheetManager","Share","content","options","arguments","length","undefined","url","message","title","share","dialogTitle","module","exports"],"mappings":"4BAUA,6CAIMA,GAFWC,EAAOC,EAAA,IAEND,EAAOC,EAAA,QACJD,EAAOC,EAAA,IAEcD,EAAOC,EAAA,KAAtBC,KAApBC,qBAAoBD,aAYrBE,kFAkCSC,GAA0D,IAAxCC,EAAwCC,UAAAC,OAAA,QAAAC,IAAAF,UAAA,GAAAA,UAAA,MAmBnE,OAlBFR,EACqB,iBAAZM,GAAoC,OAAZA,EAC/B,2CAEFN,EACyB,iBAAhBM,EAAQK,KAA+C,iBAApBL,EAAQM,QAClD,+CAEFZ,EACqB,iBAAZO,GAAoC,OAAZA,EAC/B,kCAIAP,GACGM,EAAQO,OAAkC,iBAAlBP,EAAQO,MACjC,4CAEKV,EAAYW,MAAMR,EAASC,EAAQQ,kDA6B5C,MAAO,uDAQP,MAAO,4BAIXC,EAAOC,QAAUZ","file":"332.js"}