{"version":3,"sources":["/Users/jamielynch/repos/bugsnag-react-native/examples/plain/node_modules/react-native/Libraries/Experimental/SwipeableRow/SwipeableRow.js"],"sourcesContent":["/**\n * Copyright (c) 2015-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @format\n * @flow\n */\n\n'use strict';\n\nconst Animated = require('Animated');\nconst I18nManager = require('I18nManager');\nconst PanResponder = require('PanResponder');\nconst React = require('React');\nconst PropTypes = require('prop-types');\nconst StyleSheet = require('StyleSheet');\n/* $FlowFixMe(>=0.54.0 site=react_native_oss) This comment suppresses an error\n * found when Flow v0.54 was deployed. To see the error delete this comment and\n * run Flow. */\nconst TimerMixin = require('react-timer-mixin');\nconst View = require('View');\n\nconst createReactClass = require('create-react-class');\nconst emptyFunction = require('fbjs/lib/emptyFunction');\n\nconst IS_RTL = I18nManager.isRTL;\n\n// NOTE: Eventually convert these consts to an input object of configurations\n\n// Position of the left of the swipable item when closed\nconst CLOSED_LEFT_POSITION = 0;\n// Minimum swipe distance before we recognize it as such\nconst HORIZONTAL_SWIPE_DISTANCE_THRESHOLD = 10;\n// Minimum swipe speed before we fully animate the user's action (open/close)\nconst HORIZONTAL_FULL_SWIPE_SPEED_THRESHOLD = 0.3;\n// Factor to divide by to get slow speed; i.e. 4 means 1/4 of full speed\nconst SLOW_SPEED_SWIPE_FACTOR = 4;\n// Time, in milliseconds, of how long the animated swipe should be\nconst SWIPE_DURATION = 300;\n\n/**\n * On SwipeableListView mount, the 1st item will bounce to show users it's\n * possible to swipe\n */\nconst ON_MOUNT_BOUNCE_DELAY = 700;\nconst ON_MOUNT_BOUNCE_DURATION = 400;\n\n// Distance left of closed position to bounce back when right-swiping from closed\nconst RIGHT_SWIPE_BOUNCE_BACK_DISTANCE = 30;\nconst RIGHT_SWIPE_BOUNCE_BACK_DURATION = 300;\n/**\n * Max distance of right swipe to allow (right swipes do functionally nothing).\n * Must be multiplied by SLOW_SPEED_SWIPE_FACTOR because gestureState.dx tracks\n * how far the finger swipes, and not the actual animation distance.\n */\nconst RIGHT_SWIPE_THRESHOLD = 30 * SLOW_SPEED_SWIPE_FACTOR;\n\ntype Props = $ReadOnly<{|\n  children?: ?React.Node,\n  isOpen?: ?boolean,\n  maxSwipeDistance?: ?number,\n  onClose?: ?Function,\n  onOpen?: ?Function,\n  onSwipeEnd?: ?Function,\n  onSwipeStart?: ?Function,\n  preventSwipeRight?: ?boolean,\n  shouldBounceOnMount?: ?boolean,\n  slideoutView?: ?React.Node,\n  swipeThreshold?: ?number,\n|}>;\n\n/**\n * Creates a swipable row that allows taps on the main item and a custom View\n * on the item hidden behind the row. Typically this should be used in\n * conjunction with SwipeableListView for additional functionality, but can be\n * used in a normal ListView. See the renderRow for SwipeableListView to see how\n * to use this component separately.\n */\nconst SwipeableRow = createReactClass({\n  displayName: 'SwipeableRow',\n  _panResponder: {},\n  _previousLeft: CLOSED_LEFT_POSITION,\n\n  mixins: [TimerMixin],\n\n  propTypes: {\n    children: PropTypes.any,\n    isOpen: PropTypes.bool,\n    preventSwipeRight: PropTypes.bool,\n    maxSwipeDistance: PropTypes.number.isRequired,\n    onOpen: PropTypes.func.isRequired,\n    onClose: PropTypes.func.isRequired,\n    onSwipeEnd: PropTypes.func.isRequired,\n    onSwipeStart: PropTypes.func.isRequired,\n    // Should bounce the row on mount\n    shouldBounceOnMount: PropTypes.bool,\n    /**\n     * A ReactElement that is unveiled when the user swipes\n     */\n    slideoutView: PropTypes.node.isRequired,\n    /**\n     * The minimum swipe distance required before fully animating the swipe. If\n     * the user swipes less than this distance, the item will return to its\n     * previous (open/close) position.\n     */\n    swipeThreshold: PropTypes.number.isRequired,\n  },\n\n  getInitialState(): Object {\n    return {\n      currentLeft: new Animated.Value(this._previousLeft),\n      /**\n       * In order to render component A beneath component B, A must be rendered\n       * before B. However, this will cause \"flickering\", aka we see A briefly\n       * then B. To counter this, _isSwipeableViewRendered flag is used to set\n       * component A to be transparent until component B is loaded.\n       */\n      isSwipeableViewRendered: false,\n      rowHeight: (null: ?number),\n    };\n  },\n\n  getDefaultProps(): Object {\n    return {\n      isOpen: false,\n      preventSwipeRight: false,\n      maxSwipeDistance: 0,\n      onOpen: emptyFunction,\n      onClose: emptyFunction,\n      onSwipeEnd: emptyFunction,\n      onSwipeStart: emptyFunction,\n      swipeThreshold: 30,\n    };\n  },\n\n  UNSAFE_componentWillMount(): void {\n    this._panResponder = PanResponder.create({\n      onMoveShouldSetPanResponderCapture: this\n        ._handleMoveShouldSetPanResponderCapture,\n      onPanResponderGrant: this._handlePanResponderGrant,\n      onPanResponderMove: this._handlePanResponderMove,\n      onPanResponderRelease: this._handlePanResponderEnd,\n      onPanResponderTerminationRequest: this._onPanResponderTerminationRequest,\n      onPanResponderTerminate: this._handlePanResponderEnd,\n      onShouldBlockNativeResponder: (event, gestureState) => false,\n    });\n  },\n\n  componentDidMount(): void {\n    if (this.props.shouldBounceOnMount) {\n      /**\n       * Do the on mount bounce after a delay because if we animate when other\n       * components are loading, the animation will be laggy\n       */\n      this.setTimeout(() => {\n        this._animateBounceBack(ON_MOUNT_BOUNCE_DURATION);\n      }, ON_MOUNT_BOUNCE_DELAY);\n    }\n  },\n\n  UNSAFE_componentWillReceiveProps(nextProps: Object): void {\n    /**\n     * We do not need an \"animateOpen(noCallback)\" because this animation is\n     * handled internally by this component.\n     */\n    if (this.props.isOpen && !nextProps.isOpen) {\n      this._animateToClosedPosition();\n    }\n  },\n\n  render(): React.Element<any> {\n    // The view hidden behind the main view\n    let slideOutView;\n    if (this.state.isSwipeableViewRendered && this.state.rowHeight) {\n      slideOutView = (\n        <View\n          style={[styles.slideOutContainer, {height: this.state.rowHeight}]}>\n          {this.props.slideoutView}\n        </View>\n      );\n    }\n\n    // The swipeable item\n    const swipeableView = (\n      <Animated.View\n        onLayout={this._onSwipeableViewLayout}\n        style={{transform: [{translateX: this.state.currentLeft}]}}>\n        {this.props.children}\n      </Animated.View>\n    );\n\n    return (\n      <View {...this._panResponder.panHandlers}>\n        {slideOutView}\n        {swipeableView}\n      </View>\n    );\n  },\n\n  close(): void {\n    this.props.onClose();\n    this._animateToClosedPosition();\n  },\n\n  _onSwipeableViewLayout(event: Object): void {\n    this.setState({\n      isSwipeableViewRendered: true,\n      rowHeight: event.nativeEvent.layout.height,\n    });\n  },\n\n  _handleMoveShouldSetPanResponderCapture(\n    event: Object,\n    gestureState: Object,\n  ): boolean {\n    // Decides whether a swipe is responded to by this component or its child\n    return gestureState.dy < 10 && this._isValidSwipe(gestureState);\n  },\n\n  _handlePanResponderGrant(event: Object, gestureState: Object): void {},\n\n  _handlePanResponderMove(event: Object, gestureState: Object): void {\n    if (this._isSwipingExcessivelyRightFromClosedPosition(gestureState)) {\n      return;\n    }\n\n    this.props.onSwipeStart();\n\n    if (this._isSwipingRightFromClosed(gestureState)) {\n      this._swipeSlowSpeed(gestureState);\n    } else {\n      this._swipeFullSpeed(gestureState);\n    }\n  },\n\n  _isSwipingRightFromClosed(gestureState: Object): boolean {\n    const gestureStateDx = IS_RTL ? -gestureState.dx : gestureState.dx;\n    return this._previousLeft === CLOSED_LEFT_POSITION && gestureStateDx > 0;\n  },\n\n  _swipeFullSpeed(gestureState: Object): void {\n    this.state.currentLeft.setValue(this._previousLeft + gestureState.dx);\n  },\n\n  _swipeSlowSpeed(gestureState: Object): void {\n    this.state.currentLeft.setValue(\n      this._previousLeft + gestureState.dx / SLOW_SPEED_SWIPE_FACTOR,\n    );\n  },\n\n  _isSwipingExcessivelyRightFromClosedPosition(gestureState: Object): boolean {\n    /**\n     * We want to allow a BIT of right swipe, to allow users to know that\n     * swiping is available, but swiping right does not do anything\n     * functionally.\n     */\n    const gestureStateDx = IS_RTL ? -gestureState.dx : gestureState.dx;\n    return (\n      this._isSwipingRightFromClosed(gestureState) &&\n      gestureStateDx > RIGHT_SWIPE_THRESHOLD\n    );\n  },\n\n  _onPanResponderTerminationRequest(\n    event: Object,\n    gestureState: Object,\n  ): boolean {\n    return false;\n  },\n\n  _animateTo(\n    toValue: number,\n    duration: number = SWIPE_DURATION,\n    callback: Function = emptyFunction,\n  ): void {\n    Animated.timing(this.state.currentLeft, {\n      duration,\n      toValue,\n      useNativeDriver: true,\n    }).start(() => {\n      this._previousLeft = toValue;\n      callback();\n    });\n  },\n\n  _animateToOpenPosition(): void {\n    const maxSwipeDistance = IS_RTL\n      ? -this.props.maxSwipeDistance\n      : this.props.maxSwipeDistance;\n    this._animateTo(-maxSwipeDistance);\n  },\n\n  _animateToOpenPositionWith(speed: number, distMoved: number): void {\n    /**\n     * Ensure the speed is at least the set speed threshold to prevent a slow\n     * swiping animation\n     */\n    speed =\n      speed > HORIZONTAL_FULL_SWIPE_SPEED_THRESHOLD\n        ? speed\n        : HORIZONTAL_FULL_SWIPE_SPEED_THRESHOLD;\n    /**\n     * Calculate the duration the row should take to swipe the remaining distance\n     * at the same speed the user swiped (or the speed threshold)\n     */\n    const duration = Math.abs(\n      (this.props.maxSwipeDistance - Math.abs(distMoved)) / speed,\n    );\n    const maxSwipeDistance = IS_RTL\n      ? -this.props.maxSwipeDistance\n      : this.props.maxSwipeDistance;\n    this._animateTo(-maxSwipeDistance, duration);\n  },\n\n  _animateToClosedPosition(duration: number = SWIPE_DURATION): void {\n    this._animateTo(CLOSED_LEFT_POSITION, duration);\n  },\n\n  _animateToClosedPositionDuringBounce(): void {\n    this._animateToClosedPosition(RIGHT_SWIPE_BOUNCE_BACK_DURATION);\n  },\n\n  _animateBounceBack(duration: number): void {\n    /**\n     * When swiping right, we want to bounce back past closed position on release\n     * so users know they should swipe right to get content.\n     */\n    const swipeBounceBackDistance = IS_RTL\n      ? -RIGHT_SWIPE_BOUNCE_BACK_DISTANCE\n      : RIGHT_SWIPE_BOUNCE_BACK_DISTANCE;\n    this._animateTo(\n      -swipeBounceBackDistance,\n      duration,\n      this._animateToClosedPositionDuringBounce,\n    );\n  },\n\n  // Ignore swipes due to user's finger moving slightly when tapping\n  _isValidSwipe(gestureState: Object): boolean {\n    if (\n      this.props.preventSwipeRight &&\n      this._previousLeft === CLOSED_LEFT_POSITION &&\n      gestureState.dx > 0\n    ) {\n      return false;\n    }\n\n    return Math.abs(gestureState.dx) > HORIZONTAL_SWIPE_DISTANCE_THRESHOLD;\n  },\n\n  _shouldAnimateRemainder(gestureState: Object): boolean {\n    /**\n     * If user has swiped past a certain distance, animate the rest of the way\n     * if they let go\n     */\n    return (\n      Math.abs(gestureState.dx) > this.props.swipeThreshold ||\n      gestureState.vx > HORIZONTAL_FULL_SWIPE_SPEED_THRESHOLD\n    );\n  },\n\n  _handlePanResponderEnd(event: Object, gestureState: Object): void {\n    const horizontalDistance = IS_RTL ? -gestureState.dx : gestureState.dx;\n    if (this._isSwipingRightFromClosed(gestureState)) {\n      this.props.onOpen();\n      this._animateBounceBack(RIGHT_SWIPE_BOUNCE_BACK_DURATION);\n    } else if (this._shouldAnimateRemainder(gestureState)) {\n      if (horizontalDistance < 0) {\n        // Swiped left\n        this.props.onOpen();\n        this._animateToOpenPositionWith(gestureState.vx, horizontalDistance);\n      } else {\n        // Swiped right\n        this.props.onClose();\n        this._animateToClosedPosition();\n      }\n    } else {\n      if (this._previousLeft === CLOSED_LEFT_POSITION) {\n        this._animateToClosedPosition();\n      } else {\n        this._animateToOpenPosition();\n      }\n    }\n\n    this.props.onSwipeEnd();\n  },\n});\n\n// TODO: Delete this when `SwipeableRow` uses class syntax.\nclass TypedSwipeableRow extends React.Component<Props> {\n  close() {}\n}\n\nconst styles = StyleSheet.create({\n  slideOutContainer: {\n    bottom: 0,\n    left: 0,\n    position: 'absolute',\n    right: 0,\n    top: 0,\n  },\n});\n\nmodule.exports = ((SwipeableRow: any): Class<TypedSwipeableRow>);\n"],"names":["Animated","require","d","I18nManager","PanResponder","React","PropTypes","StyleSheet","TimerMixin","View","createReactClass","emptyFunction","IS_RTL","isRTL","SwipeableRow","displayName","_panResponder","_previousLeft","mixins","propTypes","children","any","isOpen","bool","preventSwipeRight","maxSwipeDistance","number","isRequired","onOpen","func","onClose","onSwipeEnd","onSwipeStart","shouldBounceOnMount","slideoutView","node","swipeThreshold","getInitialState","currentLeft","Value","this","isSwipeableViewRendered","rowHeight","getDefaultProps","UNSAFE_componentWillMount","create","onMoveShouldSetPanResponderCapture","_handleMoveShouldSetPanResponderCapture","onPanResponderGrant","_handlePanResponderGrant","onPanResponderMove","_handlePanResponderMove","onPanResponderRelease","_handlePanResponderEnd","onPanResponderTerminationRequest","_onPanResponderTerminationRequest","onPanResponderTerminate","onShouldBlockNativeResponder","event","gestureState","componentDidMount","_this","props","setTimeout","_animateBounceBack","UNSAFE_componentWillReceiveProps","nextProps","_animateToClosedPosition","render","slideOutView","state","createElement","style","styles","slideOutContainer","height","swipeableView","onLayout","_onSwipeableViewLayout","transform","translateX","panHandlers","close","setState","nativeEvent","layout","dy","_isValidSwipe","_isSwipingExcessivelyRightFromClosedPosition","_isSwipingRightFromClosed","_swipeSlowSpeed","_swipeFullSpeed","gestureStateDx","dx","setValue","_animateTo","toValue","_this2","duration","arguments","length","undefined","callback","timing","useNativeDriver","start","_animateToOpenPosition","_animateToOpenPositionWith","speed","distMoved","Math","abs","_animateToClosedPositionDuringBounce","swipeBounceBackDistance","_shouldAnimateRemainder","vx","horizontalDistance","Component","bottom","left","position","right","top","module","exports"],"mappings":"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","file":"290.js"}