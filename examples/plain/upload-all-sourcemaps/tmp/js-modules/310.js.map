{"version":3,"sources":["/Users/jamielynch/repos/bugsnag-react-native/examples/plain/node_modules/react-native/Libraries/ActionSheetIOS/ActionSheetIOS.js"],"sourcesContent":["/**\n * Copyright (c) 2015-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @flow\n * @format\n */\n'use strict';\n\nconst RCTActionSheetManager = require('NativeModules').ActionSheetManager;\n\nconst invariant = require('fbjs/lib/invariant');\nconst processColor = require('processColor');\n\n/**\n * Display action sheets and share sheets on iOS.\n *\n * See http://facebook.github.io/react-native/docs/actionsheetios.html\n */\nconst ActionSheetIOS = {\n  /**\n   * Display an iOS action sheet.\n   *\n   * The `options` object must contain one or more of:\n   *\n   * - `options` (array of strings) - a list of button titles (required)\n   * - `cancelButtonIndex` (int) - index of cancel button in `options`\n   * - `destructiveButtonIndex` (int) - index of destructive button in `options`\n   * - `title` (string) - a title to show above the action sheet\n   * - `message` (string) - a message to show below the title\n   *\n   * The 'callback' function takes one parameter, the zero-based index\n   * of the selected item.\n   *\n   * See http://facebook.github.io/react-native/docs/actionsheetios.html#showactionsheetwithoptions\n   */\n  showActionSheetWithOptions(\n    options: {|\n      +title?: ?string,\n      +message?: ?string,\n      +options: Array<string>,\n      +destructiveButtonIndex?: ?number,\n      +cancelButtonIndex?: ?number,\n      +anchor?: ?number,\n      +tintColor?: number | string,\n    |},\n    callback: (buttonIndex: number) => void,\n  ) {\n    invariant(\n      typeof options === 'object' && options !== null,\n      'Options must be a valid object',\n    );\n    invariant(typeof callback === 'function', 'Must provide a valid callback');\n\n    RCTActionSheetManager.showActionSheetWithOptions(\n      {...options, tintColor: processColor(options.tintColor)},\n      callback,\n    );\n  },\n\n  /**\n   * Display the iOS share sheet. The `options` object should contain\n   * one or both of `message` and `url` and can additionally have\n   * a `subject` or `excludedActivityTypes`:\n   *\n   * - `url` (string) - a URL to share\n   * - `message` (string) - a message to share\n   * - `subject` (string) - a subject for the message\n   * - `excludedActivityTypes` (array) - the activities to exclude from\n   *   the ActionSheet\n   * - `tintColor` (color) - tint color of the buttons\n   *\n   * The 'failureCallback' function takes one parameter, an error object.\n   * The only property defined on this object is an optional `stack` property\n   * of type `string`.\n   *\n   * The 'successCallback' function takes two parameters:\n   *\n   * - a boolean value signifying success or failure\n   * - a string that, in the case of success, indicates the method of sharing\n   *\n   * See http://facebook.github.io/react-native/docs/actionsheetios.html#showshareactionsheetwithoptions\n   */\n  showShareActionSheetWithOptions(\n    options: Object,\n    failureCallback: Function,\n    successCallback: Function,\n  ) {\n    invariant(\n      typeof options === 'object' && options !== null,\n      'Options must be a valid object',\n    );\n    invariant(\n      typeof failureCallback === 'function',\n      'Must provide a valid failureCallback',\n    );\n    invariant(\n      typeof successCallback === 'function',\n      'Must provide a valid successCallback',\n    );\n    RCTActionSheetManager.showShareActionSheetWithOptions(\n      {...options, tintColor: processColor(options.tintColor)},\n      failureCallback,\n      successCallback,\n    );\n  },\n};\n\nmodule.exports = ActionSheetIOS;\n"],"names":["RCTActionSheetManager","require","d","ActionSheetManager","invariant","processColor","ActionSheetIOS","showActionSheetWithOptions","options","callback","_objectSpread","tintColor","showShareActionSheetWithOptions","failureCallback","successCallback","module","exports"],"mappings":"4BASA,2BAEMA,EAAwBC,EAAOC,EAAA,IAAkBC,mBAEjDC,EAAYH,EAAOC,EAAA,IACnBG,EAAeJ,EAAOC,EAAA,IAOtBI,GAiBJC,2BAjBqB,SAkBnBC,EASAC,GAEAL,EACqB,iBAAZI,GAAoC,OAAZA,EAC/B,kCAEFJ,EAA8B,mBAAbK,EAAyB,iCAE1CT,EAAsBO,2BAAtBG,KACMF,GAASG,UAAWN,EAAaG,EAAQG,aAC7CF,IA2BJG,gCAhEqB,SAiEnBJ,EACAK,EACAC,GAEAV,EACqB,iBAAZI,GAAoC,OAAZA,EAC/B,kCAEFJ,EAC6B,mBAApBS,EACP,wCAEFT,EAC6B,mBAApBU,EACP,wCAEFd,EAAsBY,gCAAtBF,KACMF,GAASG,UAAWN,EAAaG,EAAQG,aAC7CE,EACAC,KAKNC,EAAOC,QAAUV","file":"310.js"}