{"version":3,"sources":["/Users/jamielynch/repos/bugsnag-react-native/examples/plain/node_modules/react-native/Libraries/Alert/Alert.js"],"sourcesContent":["/**\n * Copyright (c) 2015-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @format\n * @flow\n */\n\n'use strict';\n\nconst AlertIOS = require('AlertIOS');\nconst NativeModules = require('NativeModules');\nconst Platform = require('Platform');\n\nimport type {AlertType, AlertButtonStyle} from 'AlertIOS';\n\nexport type Buttons = Array<{\n  text?: string,\n  onPress?: ?Function,\n  style?: AlertButtonStyle,\n}>;\n\ntype Options = {\n  cancelable?: ?boolean,\n  onDismiss?: ?Function,\n};\n\n/**\n * Launches an alert dialog with the specified title and message.\n *\n * See http://facebook.github.io/react-native/docs/alert.html\n */\nclass Alert {\n  /**\n   * Launches an alert dialog with the specified title and message.\n   *\n   * See http://facebook.github.io/react-native/docs/alert.html#alert\n   */\n  static alert(\n    title: ?string,\n    message?: ?string,\n    buttons?: Buttons,\n    options?: Options,\n    type?: AlertType,\n  ): void {\n    if (Platform.OS === 'ios') {\n      if (typeof type !== 'undefined') {\n        console.warn(\n          'Alert.alert() with a 5th \"type\" parameter is deprecated and will be removed. Use AlertIOS.prompt() instead.',\n        );\n        AlertIOS.alert(title, message, buttons, type);\n        return;\n      }\n      AlertIOS.alert(title, message, buttons);\n    } else if (Platform.OS === 'android') {\n      AlertAndroid.alert(title, message, buttons, options);\n    }\n  }\n}\n\n/**\n * Wrapper around the Android native module.\n */\nclass AlertAndroid {\n  static alert(\n    title: ?string,\n    message?: ?string,\n    buttons?: Buttons,\n    options?: Options,\n  ): void {\n    let config = {\n      title: title || '',\n      message: message || '',\n    };\n\n    if (options) {\n      config = {...config, cancelable: options.cancelable};\n    }\n    // At most three buttons (neutral, negative, positive). Ignore rest.\n    // The text 'OK' should be probably localized. iOS Alert does that in native.\n    const validButtons: Buttons = buttons\n      ? buttons.slice(0, 3)\n      : [{text: 'OK'}];\n    const buttonPositive = validButtons.pop();\n    const buttonNegative = validButtons.pop();\n    const buttonNeutral = validButtons.pop();\n    if (buttonNeutral) {\n      config = {...config, buttonNeutral: buttonNeutral.text || ''};\n    }\n    if (buttonNegative) {\n      config = {...config, buttonNegative: buttonNegative.text || ''};\n    }\n    if (buttonPositive) {\n      config = {...config, buttonPositive: buttonPositive.text || ''};\n    }\n    NativeModules.DialogManagerAndroid.showAlert(\n      config,\n      errorMessage => console.warn(errorMessage),\n      (action, buttonKey) => {\n        if (action === NativeModules.DialogManagerAndroid.buttonClicked) {\n          if (buttonKey === NativeModules.DialogManagerAndroid.buttonNeutral) {\n            buttonNeutral.onPress && buttonNeutral.onPress();\n          } else if (\n            buttonKey === NativeModules.DialogManagerAndroid.buttonNegative\n          ) {\n            buttonNegative.onPress && buttonNegative.onPress();\n          } else if (\n            buttonKey === NativeModules.DialogManagerAndroid.buttonPositive\n          ) {\n            buttonPositive.onPress && buttonPositive.onPress();\n          }\n        } else if (action === NativeModules.DialogManagerAndroid.dismissed) {\n          options && options.onDismiss && options.onDismiss();\n        }\n      },\n    );\n  }\n}\n\nmodule.exports = Alert;\n"],"names":["NativeModules","require","d","Alert","title","message","buttons","options","type","AlertAndroid","alert","config","_objectSpread","cancelable","validButtons","slice","text","buttonPositive","pop","buttonNegative","buttonNeutral","DialogManagerAndroid","showAlert","errorMessage","console","warn","action","buttonKey","buttonClicked","onPress","dismissed","onDismiss","module","exports"],"mappings":"4BAUA,+CAGMA,GADWC,EAAOC,EAAA,IACFD,EAAOC,EAAA,KAqBvBC,GApBWF,EAAOC,EAAA,oFA2BpBE,EACAC,EACAC,EACAC,EACAC,GAYEC,EAAaC,MAAMN,EAAOC,EAASC,EAASC,cAQ5CE,kFAEFL,EACAC,EACAC,EACAC,GAEA,IAAII,GACFP,MAAOA,GAAS,GAChBC,QAASA,GAAW,IAGlBE,IACFI,EAAMC,KAAOD,GAAQE,WAAYN,EAAQM,cAI3C,IAAMC,EAAwBR,EAC1BA,EAAQS,MAAM,EAAG,KACfC,KAAM,OACNC,EAAiBH,EAAaI,MAC9BC,EAAiBL,EAAaI,MAC9BE,EAAgBN,EAAaI,MAC/BE,IACFT,EAAMC,KAAOD,GAAQS,cAAeA,EAAcJ,MAAQ,MAExDG,IACFR,EAAMC,KAAOD,GAAQQ,eAAgBA,EAAeH,MAAQ,MAE1DC,IACFN,EAAMC,KAAOD,GAAQM,eAAgBA,EAAeD,MAAQ,MAE9DhB,EAAcqB,qBAAqBC,UACjCX,EACA,SAAAY,GAAY,OAAIC,QAAQC,KAAKF,IAC7B,SAACG,EAAQC,GACHD,IAAW1B,EAAcqB,qBAAqBO,cAC5CD,IAAc3B,EAAcqB,qBAAqBD,cACnDA,EAAcS,SAAWT,EAAcS,UAEvCF,IAAc3B,EAAcqB,qBAAqBF,eAEjDA,EAAeU,SAAWV,EAAeU,UAEzCF,IAAc3B,EAAcqB,qBAAqBJ,gBAEjDA,EAAeY,SAAWZ,EAAeY,UAElCH,IAAW1B,EAAcqB,qBAAqBS,WACvDvB,GAAWA,EAAQwB,WAAaxB,EAAQwB,wBAOlDC,EAAOC,QAAU9B","file":"142.js"}