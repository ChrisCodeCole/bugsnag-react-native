{"version":3,"sources":["/Users/jamielynch/repos/bugsnag-react-native/examples/plain/node_modules/react-native/Libraries/CameraRoll/CameraRoll.js"],"sourcesContent":["/**\n * Copyright (c) 2015-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @flow\n * @format\n */\n'use strict';\n\nconst PropTypes = require('prop-types');\nconst {checkPropTypes} = PropTypes;\nconst RCTCameraRollManager = require('NativeModules').CameraRollManager;\n\nconst createStrictShapeTypeChecker = require('createStrictShapeTypeChecker');\nconst invariant = require('fbjs/lib/invariant');\n\nconst GROUP_TYPES_OPTIONS = {\n  Album: 'Album',\n  All: 'All',\n  Event: 'Event',\n  Faces: 'Faces',\n  Library: 'Library',\n  PhotoStream: 'PhotoStream',\n  SavedPhotos: 'SavedPhotos', // default\n};\n\nconst ASSET_TYPE_OPTIONS = {\n  All: 'All',\n  Videos: 'Videos',\n  Photos: 'Photos',\n};\n\ntype GetPhotosParams = {\n  first: number,\n  after?: string,\n  groupTypes?: $Keys<typeof GROUP_TYPES_OPTIONS>,\n  groupName?: string,\n  assetType?: $Keys<typeof ASSET_TYPE_OPTIONS>,\n  mimeTypes?: Array<string>,\n};\n\n/**\n * Shape of the param arg for the `getPhotos` function.\n */\nconst getPhotosParamChecker = createStrictShapeTypeChecker({\n  /**\n   * The number of photos wanted in reverse order of the photo application\n   * (i.e. most recent first for SavedPhotos).\n   */\n  first: PropTypes.number.isRequired,\n\n  /**\n   * A cursor that matches `page_info { end_cursor }` returned from a previous\n   * call to `getPhotos`\n   */\n  after: PropTypes.string,\n\n  /**\n   * Specifies which group types to filter the results to.\n   */\n  groupTypes: PropTypes.oneOf(Object.keys(GROUP_TYPES_OPTIONS)),\n\n  /**\n   * Specifies filter on group names, like 'Recent Photos' or custom album\n   * titles.\n   */\n  groupName: PropTypes.string,\n\n  /**\n   * Specifies filter on asset type\n   */\n  assetType: PropTypes.oneOf(Object.keys(ASSET_TYPE_OPTIONS)),\n\n  /**\n   * Filter by mimetype (e.g. image/jpeg).\n   */\n  mimeTypes: PropTypes.arrayOf(PropTypes.string),\n});\n\ntype GetPhotosReturn = Promise<{\n  edges: Array<{\n    node: {\n      type: string,\n      group_name: string,\n      image: {\n        uri: string,\n        height: number,\n        width: number,\n        isStored?: boolean,\n        playableDuration: number,\n      },\n      timestamp: number,\n      location?: {\n        latitude?: number,\n        longitude?: number,\n        altitude?: number,\n        heading?: number,\n        speed?: number,\n      },\n    },\n  }>,\n  page_info: {\n    has_next_page: boolean,\n    start_cursor?: string,\n    end_cursor?: string,\n  },\n}>;\n\n/**\n * Shape of the return value of the `getPhotos` function.\n */\nconst getPhotosReturnChecker = createStrictShapeTypeChecker({\n  edges: PropTypes.arrayOf(\n    /* $FlowFixMe(>=0.66.0 site=react_native_fb) This comment suppresses an\n     * error found when Flow v0.66 was deployed. To see the error delete this\n     * comment and run Flow. */\n    createStrictShapeTypeChecker({\n      node: createStrictShapeTypeChecker({\n        type: PropTypes.string.isRequired,\n        group_name: PropTypes.string.isRequired,\n        image: createStrictShapeTypeChecker({\n          uri: PropTypes.string.isRequired,\n          height: PropTypes.number.isRequired,\n          width: PropTypes.number.isRequired,\n          isStored: PropTypes.bool,\n          playableDuration: PropTypes.number.isRequired,\n        }).isRequired,\n        timestamp: PropTypes.number.isRequired,\n        location: createStrictShapeTypeChecker({\n          latitude: PropTypes.number,\n          longitude: PropTypes.number,\n          altitude: PropTypes.number,\n          heading: PropTypes.number,\n          speed: PropTypes.number,\n        }),\n      }).isRequired,\n    }),\n  ).isRequired,\n  page_info: createStrictShapeTypeChecker({\n    has_next_page: PropTypes.bool.isRequired,\n    start_cursor: PropTypes.string,\n    end_cursor: PropTypes.string,\n  }).isRequired,\n});\n\n/**\n * `CameraRoll` provides access to the local camera roll or photo library.\n *\n * See https://facebook.github.io/react-native/docs/cameraroll.html\n */\nclass CameraRoll {\n  static GroupTypesOptions: Object = GROUP_TYPES_OPTIONS;\n  static AssetTypeOptions: Object = ASSET_TYPE_OPTIONS;\n\n  /**\n   * `CameraRoll.saveImageWithTag()` is deprecated. Use `CameraRoll.saveToCameraRoll()` instead.\n   */\n  static saveImageWithTag(tag: string): Promise<string> {\n    console.warn(\n      '`CameraRoll.saveImageWithTag()` is deprecated. Use `CameraRoll.saveToCameraRoll()` instead.',\n    );\n    return this.saveToCameraRoll(tag, 'photo');\n  }\n\n  static deletePhotos(photos: Array<string>) {\n    return RCTCameraRollManager.deletePhotos(photos);\n  }\n\n  /**\n   * Saves the photo or video to the camera roll or photo library.\n   *\n   * See https://facebook.github.io/react-native/docs/cameraroll.html#savetocameraroll\n   */\n  static saveToCameraRoll(\n    tag: string,\n    type?: 'photo' | 'video',\n  ): Promise<string> {\n    invariant(\n      typeof tag === 'string',\n      'CameraRoll.saveToCameraRoll must be a valid string.',\n    );\n\n    invariant(\n      type === 'photo' || type === 'video' || type === undefined,\n      `The second argument to saveToCameraRoll must be 'photo' or 'video'. You passed ${type ||\n        'unknown'}`,\n    );\n\n    let mediaType = 'photo';\n    if (type) {\n      mediaType = type;\n    } else if (['mov', 'mp4'].indexOf(tag.split('.').slice(-1)[0]) >= 0) {\n      mediaType = 'video';\n    }\n\n    return RCTCameraRollManager.saveToCameraRoll(tag, mediaType);\n  }\n\n  /**\n   * Returns a Promise with photo identifier objects from the local camera\n   * roll of the device matching shape defined by `getPhotosReturnChecker`.\n   *\n   * See https://facebook.github.io/react-native/docs/cameraroll.html#getphotos\n   */\n  static getPhotos(params: GetPhotosParams): GetPhotosReturn {\n    if (__DEV__) {\n      checkPropTypes(\n        {params: getPhotosParamChecker},\n        {params},\n        'params',\n        'CameraRoll.getPhotos',\n      );\n    }\n    if (arguments.length > 1) {\n      console.warn(\n        'CameraRoll.getPhotos(tag, success, error) is deprecated.  Use the returned Promise instead',\n      );\n      let successCallback = arguments[1];\n      if (__DEV__) {\n        const callback = arguments[1];\n        successCallback = response => {\n          checkPropTypes(\n            {response: getPhotosReturnChecker},\n            {response},\n            'response',\n            'CameraRoll.getPhotos callback',\n          );\n          callback(response);\n        };\n      }\n      const errorCallback = arguments[2] || (() => {});\n      RCTCameraRollManager.getPhotos(params).then(\n        successCallback,\n        errorCallback,\n      );\n    }\n    // TODO: Add the __DEV__ check back in to verify the Promise result\n    return RCTCameraRollManager.getPhotos(params);\n  }\n}\n\nmodule.exports = CameraRoll;\n"],"names":["PropTypes","require","d","RCTCameraRollManager","checkPropTypes","CameraRollManager","createStrictShapeTypeChecker","invariant","GROUP_TYPES_OPTIONS","Album","All","Event","Faces","Library","PhotoStream","SavedPhotos","ASSET_TYPE_OPTIONS","Videos","Photos","CameraRoll","first","number","isRequired","after","string","groupTypes","oneOf","Object","keys","groupName","assetType","mimeTypes","arrayOf","edges","node","type","group_name","image","uri","height","width","isStored","bool","playableDuration","timestamp","location","latitude","longitude","altitude","heading","speed","page_info","has_next_page","start_cursor","end_cursor","tag","console","warn","this","saveToCameraRoll","photos","deletePhotos","undefined","mediaType","indexOf","split","slice","params","arguments","length","successCallback","errorCallback","getPhotos","then","GroupTypesOptions","AssetTypeOptions","module","exports"],"mappings":"4BASA,qCAEMA,EAAYC,EAAOC,EAAA,IAEnBC,GADmBH,EAAlBI,eACsBH,EAAOC,EAAA,IAAkBG,mBAEhDC,EAA+BL,EAAOC,EAAA,IACtCK,EAAYN,EAAOC,EAAA,IAEnBM,GACJC,MAAO,QACPC,IAAK,MACLC,MAAO,QACPC,MAAO,QACPC,QAAS,UACTC,YAAa,cACbC,YAAa,eAGTC,GACJN,IAAK,MACLO,OAAQ,SACRC,OAAQ,UAyHJC,GA1GwBb,GAK5Bc,MAAOpB,EAAUqB,OAAOC,WAMxBC,MAAOvB,EAAUwB,OAKjBC,WAAYzB,EAAU0B,MAAMC,OAAOC,KAAKpB,IAMxCqB,UAAW7B,EAAUwB,OAKrBM,UAAW9B,EAAU0B,MAAMC,OAAOC,KAAKZ,IAKvCe,UAAW/B,EAAUgC,QAAQhC,EAAUwB,UAmCVlB,GAC7B2B,MAAOjC,EAAUgC,QAIf1B,GACE4B,KAAM5B,GACJ6B,KAAMnC,EAAUwB,OAAOF,WACvBc,WAAYpC,EAAUwB,OAAOF,WAC7Be,MAAO/B,GACLgC,IAAKtC,EAAUwB,OAAOF,WACtBiB,OAAQvC,EAAUqB,OAAOC,WACzBkB,MAAOxC,EAAUqB,OAAOC,WACxBmB,SAAUzC,EAAU0C,KACpBC,iBAAkB3C,EAAUqB,OAAOC,aAClCA,WACHsB,UAAW5C,EAAUqB,OAAOC,WAC5BuB,SAAUvC,GACRwC,SAAU9C,EAAUqB,OACpB0B,UAAW/C,EAAUqB,OACrB2B,SAAUhD,EAAUqB,OACpB4B,QAASjD,EAAUqB,OACnB6B,MAAOlD,EAAUqB,WAElBC,cAELA,WACF6B,UAAW7C,GACT8C,cAAepD,EAAU0C,KAAKpB,WAC9B+B,aAAcrD,EAAUwB,OACxB8B,WAAYtD,EAAUwB,SACrBF,wGAeqBiC,GAItB,OAHAC,QAAQC,KACN,+FAEKC,KAAKC,iBAAiBJ,EAAK,8CAGhBK,GAClB,OAAOzD,EAAqB0D,aAAaD,4CASzCL,EACApB,GAEA5B,EACiB,iBAARgD,EACP,uDAGFhD,EACW,UAAT4B,GAA6B,UAATA,QAA6B2B,IAAT3B,EADjC,mFAE2EA,GAChF,YAGJ,IAAI4B,EAAY,QAOhB,OANI5B,EACF4B,EAAY5B,GACF,MAAO,OAAO6B,QAAQT,EAAIU,MAAM,KAAKC,OAAf,GAAyB,KAAO,IAChEH,EAAY,SAGP5D,EAAqBwD,iBAAiBJ,EAAKQ,qCASnCI,GASf,GAAIC,UAAUC,OAAS,EAAG,CACxBb,QAAQC,KACN,8FAEF,IAAIa,EAAkBF,UAAU,GAa1BG,EAAgBH,UAAU,IAAO,aACvCjE,EAAqBqE,UAAUL,GAAQM,KACrCH,EACAC,GAIJ,OAAOpE,EAAqBqE,UAAUL,cAvFpChD,EACGuD,kBAA4BlE,EAD/BW,EAEGwD,iBAA2B3D,EAyFpC4D,EAAOC,QAAU1D","file":"325.js"}