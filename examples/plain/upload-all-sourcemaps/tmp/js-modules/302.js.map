{"version":3,"sources":["/Users/jamielynch/repos/bugsnag-react-native/examples/plain/node_modules/react-native/node_modules/fbjs/lib/keyOf.js"],"sourcesContent":["\"use strict\";\n\n/**\n * Copyright (c) 2013-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n */\n\n/**\n * Allows extraction of a minified key. Let's the build system minify keys\n * without losing the ability to dynamically use key strings as values\n * themselves. Pass in an object with a single key/val pair and it will return\n * you the string key of that single record. Suppose you want to grab the\n * value for a key 'className' inside of an object. Key/val minification may\n * have aliased that key to be 'xa12'. keyOf({className: null}) will return\n * 'xa12' in that case. Resolve keys you want to use once at startup time, then\n * reuse those resolutions.\n */\nvar keyOf = function keyOf(oneKeyObj) {\n  var key;\n\n  for (key in oneKeyObj) {\n    if (!oneKeyObj.hasOwnProperty(key)) {\n      continue;\n    }\n\n    return key;\n  }\n\n  return null;\n};\n\nmodule.exports = keyOf;"],"names":["module","exports","oneKeyObj","key","hasOwnProperty"],"mappings":"4BAAA,aAkCAA,EAAOC,QAdK,SAAeC,GACzB,IAAIC,EAEJ,IAAKA,KAAOD,EACV,GAAKA,EAAUE,eAAeD,GAI9B,OAAOA,EAGT,OAAO","file":"302.js"}