{"version":3,"sources":["/Users/jamielynch/repos/bugsnag-react-native/examples/plain/node_modules/react-native/Libraries/vendor/core/Set.js"],"sourcesContent":["/**\n * Copyright (c) 2015-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @format\n * @preventMunge\n * @typechecks\n */\n\n/* eslint-disable no-extend-native */\n\n'use strict';\n\nconst Map = require('Map');\n\nconst _shouldPolyfillES6Collection = require('_shouldPolyfillES6Collection');\nconst toIterator = require('toIterator');\n\nmodule.exports = (function(global) {\n  // Since our implementation is spec-compliant for the most part we can safely\n  // delegate to a built-in version if exists and is implemented correctly.\n  // Firefox had gotten a few implementation details wrong across different\n  // versions so we guard against that.\n  // These checks are adapted from es6-shim https://fburl.com/34437854\n  if (!_shouldPolyfillES6Collection('Set')) {\n    return global.Set;\n  }\n\n  /**\n   * == ES6 Set Collection ==\n   *\n   * This module is meant to implement a Set collection as described in chapter\n   * 23.2 of the ES6 specification.\n   *\n   * Set objects are collections of unique values. Where values can be any\n   * JavaScript value.\n   * https://people.mozilla.org/~jorendorff/es6-draft.html#sec-map-objects\n   *\n   * There only two -- rather small -- diviations from the spec:\n   *\n   * 1. The use of frozen objects as keys. @see Map module for more on this.\n   *\n   * 2. The `size` property on a map object is a regular property and not a\n   *    computed property on the prototype as described by the spec.\n   *    The reason being is that we simply want to support ES3 environments\n   *    which doesn't implement computed properties.\n   *\n   * == Usage ==\n   *\n   * var set = new set(iterable);\n   *\n   * set.set(value);\n   * set.has(value); // true\n   * set.delete(value); // true\n   *\n   * var iterator = set.keys();\n   * iterator.next(); // {value: value, done: false}\n   *\n   * var iterator = set.values();\n   * iterator.next(); // {value: value, done: false}\n   *\n   * var iterator = set.entries();\n   * iterator.next(); // {value: [value, value], done: false}\n   *\n   * set.forEach(function(value, value){ this === thisArg }, thisArg);\n   *\n   * set.clear(); // resets set.\n   */\n\n  class Set {\n    /**\n     * 23.2.1.1\n     *\n     * Takes an optional `iterable` (which is basically any object that\n     * implements a Symbol.iterator (@@iterator) method). That is a collection\n     * of values used to instantiate the set.\n     *\n     * @param {*} iterable\n     */\n    constructor(iterable) {\n      if (\n        this == null ||\n        (typeof this !== 'object' && typeof this !== 'function')\n      ) {\n        throw new TypeError('Wrong set object type.');\n      }\n\n      initSet(this);\n\n      if (iterable != null) {\n        const it = toIterator(iterable);\n        let next;\n        while (!(next = it.next()).done) {\n          this.add(next.value);\n        }\n      }\n    }\n\n    /**\n     * 23.2.3.1\n     *\n     * If it doesn't already exist in the collection a `value` is added.\n     *\n     * @param {*} value\n     * @return {set}\n     */\n    add(value) {\n      this._map.set(value, value);\n      this.size = this._map.size;\n      return this;\n    }\n\n    /**\n     * 23.2.3.2\n     *\n     * Clears the set.\n     */\n    clear() {\n      initSet(this);\n    }\n\n    /**\n     * 23.2.3.4\n     *\n     * Deletes a `value` from the collection if it exists.\n     * Returns true if the value was found and deleted and false otherwise.\n     *\n     * @param {*} value\n     * @return {boolean}\n     */\n    delete(value) {\n      const ret = this._map.delete(value);\n      this.size = this._map.size;\n      return ret;\n    }\n\n    /**\n     * 23.2.3.5\n     *\n     * Returns an iterator over a collection of [value, value] tuples.\n     */\n    entries() {\n      return this._map.entries();\n    }\n\n    /**\n     * 23.2.3.6\n     *\n     * Iterate over the collection calling `callback` with (value, value, set).\n     *\n     * @param {function} callback\n     */\n    forEach(callback) {\n      const thisArg = arguments[1];\n      const it = this._map.keys();\n      let next;\n      while (!(next = it.next()).done) {\n        callback.call(thisArg, next.value, next.value, this);\n      }\n    }\n\n    /**\n     * 23.2.3.7\n     *\n     * Iterate over the collection calling `callback` with (value, value, set).\n     *\n     * @param {*} value\n     * @return {boolean}\n     */\n    has(value) {\n      return this._map.has(value);\n    }\n\n    /**\n     * 23.2.3.7\n     *\n     * Returns an iterator over the colleciton of values.\n     */\n    values() {\n      return this._map.values();\n    }\n  }\n\n  // 23.2.3.11\n  Set.prototype[toIterator.ITERATOR_SYMBOL] = Set.prototype.values;\n\n  // 23.2.3.7\n  Set.prototype.keys = Set.prototype.values;\n\n  function initSet(set) {\n    set._map = new Map();\n    set.size = set._map.size;\n  }\n\n  return Set;\n})(Function('return this')()); // eslint-disable-line no-new-func\n"],"names":["Map","require","d","_shouldPolyfillES6Collection","toIterator","module","exports","global","Set","iterable","_classCallCheck","this","TypeError","initSet","next","it","done","add","value","_createClass","key","_map","set","size","ret","delete","entries","callback","thisArg","arguments","keys","call","has","values","prototype","ITERATOR_SYMBOL","Function"],"mappings":"4BAaA,qCAEMA,EAAMC,EAAOC,EAAA,IAEbC,EAA+BF,EAAOC,EAAA,IACtCE,EAAaH,EAAOC,EAAA,IAE1BG,EAAOC,SAAW,SAASC,GAMzB,IAAKJ,EAA6B,OAChC,OAAOI,EAAOC,IAPiB,IAmD3BA,GAnD2B,WA6D/B,SAAAA,EAAYC,GACV,GADoBC,EAAAC,KAAAH,GAEV,MAARG,MACiB,iBAATA,MAAqC,mBAATA,KAEpC,MAAM,IAAIC,UAAU,0BAKtB,GAFAC,EAAQF,MAEQ,MAAZF,EAGF,IAFA,IACIK,EADEC,EAAKX,EAAWK,KAEbK,EAAOC,EAAGD,QAAQE,MACzBL,KAAKM,IAAIH,EAAKI,OA3EW,OAAAC,EAAAX,IAAAY,IAAA,MAAAF,MAAA,SAwF3BA,GAGF,OAFAP,KAAKU,KAAKC,IAAIJ,EAAOA,GACrBP,KAAKY,KAAOZ,KAAKU,KAAKE,KACfZ,QA3FsBS,IAAA,QAAAF,MAAA,WAoG7BL,EAAQF,SApGqBS,IAAA,SAAAF,MAAA,SAgHxBA,GACL,IAAMM,EAAMb,KAAKU,KAAKI,OAAOP,GAE7B,OADAP,KAAKY,KAAOZ,KAAKU,KAAKE,KACfC,KAnHsBJ,IAAA,UAAAF,MAAA,WA4H7B,OAAOP,KAAKU,KAAKK,aA5HYN,IAAA,UAAAF,MAAA,SAsIvBS,GAIN,IAHA,IAEIb,EAFEc,EAAUC,UAAU,GACpBd,EAAKJ,KAAKU,KAAKS,SAEZhB,EAAOC,EAAGD,QAAQE,MACzBW,EAASI,KAAKH,EAASd,EAAKI,MAAOJ,EAAKI,MAAOP,SA3IpBS,IAAA,MAAAF,MAAA,SAuJ3BA,GACF,OAAOP,KAAKU,KAAKW,IAAId,MAxJQE,IAAA,SAAAF,MAAA,WAiK7B,OAAOP,KAAKU,KAAKY,aAjKYzB,GAAA,GA2KjC,SAASK,EAAQS,GACfA,EAAID,KAAO,IAAIrB,EACfsB,EAAIC,KAAOD,EAAID,KAAKE,KAGtB,OAVAf,EAAI0B,UAAU9B,EAAW+B,iBAAmB3B,EAAI0B,UAAUD,OAG1DzB,EAAI0B,UAAUJ,KAAOtB,EAAI0B,UAAUD,OAO5BzB,GAhLS,CAiLf4B,SAAS,cAATA","file":"102.js"}