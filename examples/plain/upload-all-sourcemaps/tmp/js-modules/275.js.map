{"version":3,"sources":["/Users/jamielynch/repos/bugsnag-react-native/examples/plain/node_modules/react-native/Libraries/Modal/Modal.js"],"sourcesContent":["/**\n * Copyright (c) 2015-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @format\n * @flow\n */\n\n'use strict';\n\nconst AppContainer = require('AppContainer');\nconst I18nManager = require('I18nManager');\nconst NativeEventEmitter = require('NativeEventEmitter');\nconst NativeModules = require('NativeModules');\nconst Platform = require('Platform');\nconst React = require('React');\nconst PropTypes = require('prop-types');\nconst StyleSheet = require('StyleSheet');\nconst View = require('View');\n\nconst deprecatedPropType = require('deprecatedPropType');\nconst requireNativeComponent = require('requireNativeComponent');\n\nconst RCTModalHostView = requireNativeComponent('RCTModalHostView');\n\nconst ModalEventEmitter =\n  Platform.OS === 'ios' && NativeModules.ModalManager\n    ? new NativeEventEmitter(NativeModules.ModalManager)\n    : null;\n\nimport type EmitterSubscription from 'EmitterSubscription';\n\n/**\n * The Modal component is a simple way to present content above an enclosing view.\n *\n * See https://facebook.github.io/react-native/docs/modal.html\n */\n\n// In order to route onDismiss callbacks, we need to uniquely identifier each\n// <Modal> on screen. There can be different ones, either nested or as siblings.\n// We cannot pass the onDismiss callback to native as the view will be\n// destroyed before the callback is fired.\nlet uniqueModalIdentifier = 0;\n\nclass Modal extends React.Component<Object> {\n  static propTypes = {\n    /**\n     * The `animationType` prop controls how the modal animates.\n     *\n     * See https://facebook.github.io/react-native/docs/modal.html#animationtype\n     */\n    animationType: PropTypes.oneOf(['none', 'slide', 'fade']),\n    /**\n     * The `presentationStyle` prop controls how the modal appears.\n     *\n     * See https://facebook.github.io/react-native/docs/modal.html#presentationstyle\n     */\n    presentationStyle: PropTypes.oneOf([\n      'fullScreen',\n      'pageSheet',\n      'formSheet',\n      'overFullScreen',\n    ]),\n    /**\n     * The `transparent` prop determines whether your modal will fill the\n     * entire view.\n     *\n     * See https://facebook.github.io/react-native/docs/modal.html#transparent\n     */\n    transparent: PropTypes.bool,\n    /**\n     * The `hardwareAccelerated` prop controls whether to force hardware\n     * acceleration for the underlying window.\n     *\n     * See https://facebook.github.io/react-native/docs/modal.html#hardwareaccelerated\n     */\n    hardwareAccelerated: PropTypes.bool,\n    /**\n     * The `visible` prop determines whether your modal is visible.\n     *\n     * See https://facebook.github.io/react-native/docs/modal.html#visible\n     */\n    visible: PropTypes.bool,\n    /**\n     * The `onRequestClose` callback is called when the user taps the hardware\n     * back button on Android or the menu button on Apple TV.\n     *\n     * See https://facebook.github.io/react-native/docs/modal.html#onrequestclose\n     */\n    onRequestClose:\n      Platform.isTV || Platform.OS === 'android'\n        ? PropTypes.func.isRequired\n        : PropTypes.func,\n    /**\n     * The `onShow` prop allows passing a function that will be called once the\n     * modal has been shown.\n     *\n     * See https://facebook.github.io/react-native/docs/modal.html#onshow\n     */\n    onShow: PropTypes.func,\n    /**\n     * The `onDismiss` prop allows passing a function that will be called once\n     * the modal has been dismissed.\n     *\n     * See https://facebook.github.io/react-native/docs/modal.html#ondismiss\n     */\n    onDismiss: PropTypes.func,\n    animated: deprecatedPropType(\n      PropTypes.bool,\n      'Use the `animationType` prop instead.',\n    ),\n    /**\n     * The `supportedOrientations` prop allows the modal to be rotated to any of the specified orientations.\n     *\n     * See https://facebook.github.io/react-native/docs/modal.html#supportedorientations\n     */\n    supportedOrientations: PropTypes.arrayOf(\n      PropTypes.oneOf([\n        'portrait',\n        'portrait-upside-down',\n        'landscape',\n        'landscape-left',\n        'landscape-right',\n      ]),\n    ),\n    /**\n     * The `onOrientationChange` callback is called when the orientation changes while the modal is being displayed.\n     *\n     * See https://facebook.github.io/react-native/docs/modal.html#onorientationchange\n     */\n    onOrientationChange: PropTypes.func,\n  };\n\n  static defaultProps = {\n    visible: true,\n    hardwareAccelerated: false,\n  };\n\n  static contextTypes = {\n    rootTag: PropTypes.number,\n  };\n\n  _identifier: number;\n  _eventSubscription: ?EmitterSubscription;\n\n  constructor(props: Object) {\n    super(props);\n    Modal._confirmProps(props);\n    this._identifier = uniqueModalIdentifier++;\n  }\n\n  static childContextTypes = {\n    virtualizedList: PropTypes.object,\n  };\n\n  getChildContext() {\n    // Reset the context so VirtualizedList doesn't get confused by nesting\n    // in the React tree that doesn't reflect the native component heirarchy.\n    return {\n      virtualizedList: null,\n    };\n  }\n\n  componentDidMount() {\n    if (ModalEventEmitter) {\n      this._eventSubscription = ModalEventEmitter.addListener(\n        'modalDismissed',\n        event => {\n          if (event.modalID === this._identifier && this.props.onDismiss) {\n            this.props.onDismiss();\n          }\n        },\n      );\n    }\n  }\n\n  componentWillUnmount() {\n    if (this._eventSubscription) {\n      this._eventSubscription.remove();\n    }\n  }\n\n  UNSAFE_componentWillReceiveProps(nextProps: Object) {\n    Modal._confirmProps(nextProps);\n  }\n\n  static _confirmProps(props: Object) {\n    if (\n      props.presentationStyle &&\n      props.presentationStyle !== 'overFullScreen' &&\n      props.transparent\n    ) {\n      console.warn(\n        `Modal with '${\n          props.presentationStyle\n        }' presentation style and 'transparent' value is not supported.`,\n      );\n    }\n  }\n\n  render(): React.Node {\n    if (this.props.visible === false) {\n      return null;\n    }\n\n    const containerStyles = {\n      backgroundColor: this.props.transparent ? 'transparent' : 'white',\n    };\n\n    let animationType = this.props.animationType;\n    if (!animationType) {\n      // manually setting default prop here to keep support for the deprecated 'animated' prop\n      animationType = 'none';\n      if (this.props.animated) {\n        animationType = 'slide';\n      }\n    }\n\n    let presentationStyle = this.props.presentationStyle;\n    if (!presentationStyle) {\n      presentationStyle = 'fullScreen';\n      if (this.props.transparent) {\n        presentationStyle = 'overFullScreen';\n      }\n    }\n\n    const innerChildren = __DEV__ ? (\n      <AppContainer rootTag={this.context.rootTag}>\n        {this.props.children}\n      </AppContainer>\n    ) : (\n      this.props.children\n    );\n\n    return (\n      <RCTModalHostView\n        animationType={animationType}\n        presentationStyle={presentationStyle}\n        transparent={this.props.transparent}\n        hardwareAccelerated={this.props.hardwareAccelerated}\n        onRequestClose={this.props.onRequestClose}\n        onShow={this.props.onShow}\n        identifier={this._identifier}\n        style={styles.modal}\n        onStartShouldSetResponder={this._shouldSetResponder}\n        supportedOrientations={this.props.supportedOrientations}\n        onOrientationChange={this.props.onOrientationChange}>\n        <View style={[styles.container, containerStyles]}>{innerChildren}</View>\n      </RCTModalHostView>\n    );\n  }\n\n  // We don't want any responder events bubbling out of the modal.\n  _shouldSetResponder(): boolean {\n    return true;\n  }\n}\n\nconst side = I18nManager.isRTL ? 'right' : 'left';\nconst styles = StyleSheet.create({\n  modal: {\n    position: 'absolute',\n  },\n  container: {\n    position: 'absolute',\n    [side]: 0,\n    top: 0,\n  },\n});\n\nmodule.exports = Modal;\n"],"names":["I18nManager","require","d","Platform","React","PropTypes","StyleSheet","View","deprecatedPropType","RCTModalHostView","requireNativeComponent","uniqueModalIdentifier","Modal","props","_this","_classCallCheck","this","_possibleConstructorReturn","_getPrototypeOf","call","_confirmProps","_identifier","virtualizedList","_eventSubscription","remove","nextProps","visible","containerStyles","backgroundColor","transparent","animationType","animated","presentationStyle","innerChildren","children","createElement","hardwareAccelerated","onRequestClose","onShow","identifier","style","styles","modal","onStartShouldSetResponder","_shouldSetResponder","supportedOrientations","onOrientationChange","container","console","warn","Component","propTypes","oneOf","bool","isTV","func","isRequired","onDismiss","arrayOf","defaultProps","contextTypes","rootTag","number","childContextTypes","object","side","isRTL","create","position","_container","_defineProperty","module","exports"],"mappings":"4BAUA,+EAGMA,GADeC,EAAOC,EAAA,IACRD,EAAOC,EAAA,KAGrBC,GAFqBF,EAAOC,EAAA,IACZD,EAAOC,EAAA,IACZD,EAAOC,EAAA,MAClBE,EAAQH,EAAOC,EAAA,KACfG,EAAYJ,EAAOC,EAAA,KACnBI,EAAaL,EAAOC,EAAA,KACpBK,EAAON,EAAOC,EAAA,KAEdM,EAAqBP,EAAOC,EAAA,KAG5BO,EAFyBR,EAAOC,EAAA,IAEbQ,CAAuB,oBAmB5CC,EAAwB,EAEtBC,eAqGJ,SAAAA,EAAYC,GAAe,IAAAC,EAAA,OAAAC,EAAAC,KAAAJ,GACzBE,EAAAG,EAAAD,KAAAE,EAAAN,GAAAO,KAAAH,KAAMH,IACND,EAAMQ,cAAcP,GACpBC,EAAKO,YAAcV,IAHMG,6DAazB,OACEQ,gBAAiB,kGAkBfN,KAAKO,oBACPP,KAAKO,mBAAmBC,kEAIKC,GAC/Bb,EAAMQ,cAAcK,oCAkBpB,IAA2B,IAAvBT,KAAKH,MAAMa,QACb,OAAO,KAGT,IAAMC,GACJC,gBAAiBZ,KAAKH,MAAMgB,YAAc,cAAgB,SAGxDC,EAAgBd,KAAKH,MAAMiB,cAC1BA,IAEHA,EAAgB,OACZd,KAAKH,MAAMkB,WACbD,EAAgB,UAIpB,IAAIE,EAAoBhB,KAAKH,MAAMmB,kBAC9BA,IACHA,EAAoB,aAChBhB,KAAKH,MAAMgB,cACbG,EAAoB,mBAIxB,IAAMC,EAKJjB,KAAKH,MAAMqB,SAGb,OACE9B,EAAA+B,cAAC1B,GACCqB,cAAeA,EACfE,kBAAmBA,EACnBH,YAAab,KAAKH,MAAMgB,YACxBO,oBAAqBpB,KAAKH,MAAMuB,oBAChCC,eAAgBrB,KAAKH,MAAMwB,eAC3BC,OAAQtB,KAAKH,MAAMyB,OACnBC,WAAYvB,KAAKK,YACjBmB,MAAOC,EAAOC,MACdC,0BAA2B3B,KAAK4B,oBAChCC,sBAAuB7B,KAAKH,MAAMgC,sBAClCC,oBAAqB9B,KAAKH,MAAMiC,qBAChC1C,EAAA+B,cAAC5B,GAAKiC,OAAQC,EAAOM,UAAWpB,IAAmBM,kDAOvD,OAAO,0CApEYpB,GAEjBA,EAAMmB,mBACsB,mBAA5BnB,EAAMmB,mBACNnB,EAAMgB,aAENmB,QAAQC,KAAR,eAEIpC,EAAMmB,kBAFV,0EApJc5B,EAAM8C,WAApBtC,EACGuC,WAMLrB,cAAezB,EAAU+C,OAAO,OAAQ,QAAS,SAMjDpB,kBAAmB3B,EAAU+C,OAC3B,aACA,YACA,YACA,mBAQFvB,YAAaxB,EAAUgD,KAOvBjB,oBAAqB/B,EAAUgD,KAM/B3B,QAASrB,EAAUgD,KAOnBhB,gBACElC,EAASmD,KACLjD,EAAUkD,KAAKC,YAQrBlB,OAAQjC,EAAUkD,KAOlBE,UAAWpD,EAAUkD,KACrBxB,SAAUvB,EACRH,EAAUgD,KACV,yCAOFR,sBAAuBxC,EAAUqD,QAC/BrD,EAAU+C,OACR,WACA,uBACA,YACA,iBACA,qBAQJN,oBAAqBzC,EAAUkD,MAtF7B3C,EAyFG+C,cACLjC,SAAS,EACTU,qBAAqB,GA3FnBxB,EA8FGgD,cACLC,QAASxD,EAAUyD,QA/FjBlD,EA2GGmD,mBACLzC,gBAAiBjB,EAAU2D,QA0G/B,IAAMC,EAAOjE,EAAYkE,MAAQ,QAAU,OACrCzB,EAASnC,EAAW6D,QACxBzB,OACE0B,SAAU,YAEZrB,WAASsB,GACPD,SAAU,YADHE,EAAAD,EAENJ,EAAO,GAFDK,EAAAD,EAAA,MAGF,GAHEA,KAOXE,EAAOC,QAAU5D","file":"275.js"}