{"version":3,"sources":["/Users/jamielynch/repos/bugsnag-react-native/examples/plain/node_modules/react-native/Libraries/Animated/src/AnimatedEvent.js"],"sourcesContent":["/**\n * Copyright (c) 2015-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @flow\n * @format\n */\n'use strict';\n\nconst AnimatedValue = require('./nodes/AnimatedValue');\nconst NativeAnimatedHelper = require('./NativeAnimatedHelper');\nconst ReactNative = require('ReactNative');\n\nconst invariant = require('fbjs/lib/invariant');\nconst {shouldUseNativeDriver} = require('./NativeAnimatedHelper');\n\nexport type Mapping = {[key: string]: Mapping} | AnimatedValue;\nexport type EventConfig = {\n  listener?: ?Function,\n  useNativeDriver?: boolean,\n};\n\nfunction attachNativeEvent(\n  viewRef: any,\n  eventName: string,\n  argMapping: Array<?Mapping>,\n) {\n  // Find animated values in `argMapping` and create an array representing their\n  // key path inside the `nativeEvent` object. Ex.: ['contentOffset', 'x'].\n  const eventMappings = [];\n\n  const traverse = (value, path) => {\n    if (value instanceof AnimatedValue) {\n      value.__makeNative();\n\n      eventMappings.push({\n        nativeEventPath: path,\n        animatedValueTag: value.__getNativeTag(),\n      });\n    } else if (typeof value === 'object') {\n      for (const key in value) {\n        traverse(value[key], path.concat(key));\n      }\n    }\n  };\n\n  invariant(\n    argMapping[0] && argMapping[0].nativeEvent,\n    'Native driven events only support animated values contained inside `nativeEvent`.',\n  );\n\n  // Assume that the event containing `nativeEvent` is always the first argument.\n  traverse(argMapping[0].nativeEvent, []);\n\n  const viewTag = ReactNative.findNodeHandle(viewRef);\n\n  eventMappings.forEach(mapping => {\n    NativeAnimatedHelper.API.addAnimatedEventToView(\n      viewTag,\n      eventName,\n      mapping,\n    );\n  });\n\n  return {\n    detach() {\n      eventMappings.forEach(mapping => {\n        NativeAnimatedHelper.API.removeAnimatedEventFromView(\n          viewTag,\n          eventName,\n          mapping.animatedValueTag,\n        );\n      });\n    },\n  };\n}\n\nclass AnimatedEvent {\n  _argMapping: Array<?Mapping>;\n  _listeners: Array<Function> = [];\n  _callListeners: Function;\n  _attachedEvent: ?{\n    detach: () => void,\n  };\n  __isNative: boolean;\n\n  constructor(argMapping: Array<?Mapping>, config?: EventConfig = {}) {\n    this._argMapping = argMapping;\n    if (config.listener) {\n      this.__addListener(config.listener);\n    }\n    this._callListeners = this._callListeners.bind(this);\n    this._attachedEvent = null;\n    this.__isNative = shouldUseNativeDriver(config);\n\n    if (__DEV__) {\n      this._validateMapping();\n    }\n  }\n\n  __addListener(callback: Function): void {\n    this._listeners.push(callback);\n  }\n\n  __removeListener(callback: Function): void {\n    this._listeners = this._listeners.filter(listener => listener !== callback);\n  }\n\n  __attach(viewRef: any, eventName: string) {\n    invariant(\n      this.__isNative,\n      'Only native driven events need to be attached.',\n    );\n\n    this._attachedEvent = attachNativeEvent(\n      viewRef,\n      eventName,\n      this._argMapping,\n    );\n  }\n\n  __detach(viewTag: any, eventName: string) {\n    invariant(\n      this.__isNative,\n      'Only native driven events need to be detached.',\n    );\n\n    this._attachedEvent && this._attachedEvent.detach();\n  }\n\n  __getHandler() {\n    if (this.__isNative) {\n      return this._callListeners;\n    }\n\n    return (...args: any) => {\n      const traverse = (recMapping, recEvt, key) => {\n        if (typeof recEvt === 'number' && recMapping instanceof AnimatedValue) {\n          recMapping.setValue(recEvt);\n        } else if (typeof recMapping === 'object') {\n          for (const mappingKey in recMapping) {\n            /* $FlowFixMe(>=0.53.0 site=react_native_fb,react_native_oss) This\n             * comment suppresses an error when upgrading Flow's support for\n             * React. To see the error delete this comment and run Flow. */\n            traverse(recMapping[mappingKey], recEvt[mappingKey], mappingKey);\n          }\n        }\n      };\n\n      if (!this.__isNative) {\n        this._argMapping.forEach((mapping, idx) => {\n          traverse(mapping, args[idx], 'arg' + idx);\n        });\n      }\n      this._callListeners(...args);\n    };\n  }\n\n  _callListeners(...args) {\n    this._listeners.forEach(listener => listener(...args));\n  }\n\n  _validateMapping() {\n    const traverse = (recMapping, recEvt, key) => {\n      if (typeof recEvt === 'number') {\n        invariant(\n          recMapping instanceof AnimatedValue,\n          'Bad mapping of type ' +\n            typeof recMapping +\n            ' for key ' +\n            key +\n            ', event value must map to AnimatedValue',\n        );\n        return;\n      }\n      invariant(\n        typeof recMapping === 'object',\n        'Bad mapping of type ' + typeof recMapping + ' for key ' + key,\n      );\n      invariant(\n        typeof recEvt === 'object',\n        'Bad event of type ' + typeof recEvt + ' for key ' + key,\n      );\n      for (const mappingKey in recMapping) {\n        traverse(recMapping[mappingKey], recEvt[mappingKey], mappingKey);\n      }\n    };\n  }\n}\n\nmodule.exports = {AnimatedEvent, attachNativeEvent};\n"],"names":["AnimatedValue","require","d","NativeAnimatedHelper","ReactNative","invariant","shouldUseNativeDriver","attachNativeEvent","viewRef","eventName","argMapping","eventMappings","nativeEvent","traverse","value","path","__makeNative","push","nativeEventPath","animatedValueTag","__getNativeTag","key","concat","viewTag","findNodeHandle","forEach","mapping","API","addAnimatedEventToView","detach","removeAnimatedEventFromView","AnimatedEvent","config","arguments","length","undefined","_classCallCheck","this","_listeners","_argMapping","listener","__addListener","_callListeners","bind","_attachedEvent","__isNative","callback","filter","_this","_len","args","Array","_key2","recMapping","recEvt","setValue","mappingKey","idx","apply","_len2","_key3","module","exports"],"mappings":"4BASA,qCAEMA,EAAgBC,EAAOC,EAAA,IACvBC,EAAuBF,EAAOC,EAAA,IAC9BE,EAAcH,EAAOC,EAAA,IAErBG,EAAYJ,EAAOC,EAAA,IAClBI,EAAyBL,EAAOC,EAAA,IAAhCI,sBAQP,SAASC,EACPC,EACAC,EACAC,GAIA,IAAMC,KAiBNN,EACEK,EAAW,IAAMA,EAAW,GAAGE,YAC/B,sFAjBe,SAAXC,EAAYC,EAAOC,GACvB,GAAID,aAAiBd,EACnBc,EAAME,eAENL,EAAcM,MACZC,gBAAiBH,EACjBI,iBAAkBL,EAAMM,wBAErB,GAAqB,iBAAVN,EAChB,IAAK,IAAMO,KAAOP,EAChBD,EAASC,EAAMO,GAAMN,EAAKO,OAAOD,KAWvCR,CAASH,EAAW,GAAGE,gBAEvB,IAAMW,EAAUnB,EAAYoB,eAAehB,GAU3C,OARAG,EAAcc,QAAQ,SAAAC,GACpBvB,EAAqBwB,IAAIC,uBACvBL,EACAd,EACAiB,MAKFG,OADK,WAEHlB,EAAcc,QAAQ,SAAAC,GACpBvB,EAAqBwB,IAAIG,4BACvBP,EACAd,EACAiB,EAAQP,0BAOZY,cASJ,SAAAA,EAAYrB,GAAwD,IAA3BsB,EAA2BC,UAAAC,OAAA,QAAAC,IAAAF,UAAA,GAAAA,UAAA,MAAAG,EAAAC,KAAAN,GAAAM,KAPpEC,cAQED,KAAKE,YAAc7B,EACfsB,EAAOQ,UACTH,KAAKI,cAAcT,EAAOQ,UAE5BH,KAAKK,eAAiBL,KAAKK,eAAeC,KAAKN,MAC/CA,KAAKO,eAAiB,KACtBP,KAAKQ,WAAavC,EAAsB0B,mDAO5Bc,GACZT,KAAKC,WAAWrB,KAAK6B,4CAGNA,GACfT,KAAKC,WAAaD,KAAKC,WAAWS,OAAO,SAAAP,GAAQ,OAAIA,IAAaM,qCAG3DtC,EAAcC,GACrBJ,EACEgC,KAAKQ,WACL,kDAGFR,KAAKO,eAAiBrC,EACpBC,EACAC,EACA4B,KAAKE,8CAIAhB,EAAcd,GACrBJ,EACEgC,KAAKQ,WACL,kDAGFR,KAAKO,gBAAkBP,KAAKO,eAAef,gDAG9B,IAAAmB,EAAAX,KACb,OAAIA,KAAKQ,WACAR,KAAKK,eAGP,WAAkB,IAAA,IAAAO,EAAAhB,UAAAC,OAAdgB,EAAc,IAAAC,MAAAF,GAAAG,EAAA,EAAAA,EAAAH,EAAAG,IAAdF,EAAcE,GAAAnB,UAAAmB,GACvB,IAAMvC,EAAW,SAAXA,EAAYwC,EAAYC,EAAQjC,GACpC,GAAsB,iBAAXiC,GAAuBD,aAAsBrD,EACtDqD,EAAWE,SAASD,QACf,GAA0B,iBAAfD,EAChB,IAAK,IAAMG,KAAcH,EAIvBxC,EAASwC,EAAWG,GAAaF,EAAOE,GAAaA,IAKtDR,EAAKH,YACRG,EAAKT,YAAYd,QAAQ,SAACC,EAAS+B,GACjC5C,EAASa,EAASwB,EAAKO,MAG3BT,EAAKN,eAALgB,MAAAV,EAAuBE,6CAIH,IAAA,IAAAS,EAAA1B,UAAAC,OAANgB,EAAM,IAAAC,MAAAQ,GAAAC,EAAA,EAAAA,EAAAD,EAAAC,IAANV,EAAMU,GAAA3B,UAAA2B,GACtBvB,KAAKC,WAAWb,QAAQ,SAAAe,GAAQ,OAAIA,EAAQkB,WAARvB,EAAYe,2DA+BpDW,EAAOC,SAAW/B,cAAAA,EAAexB,kBAAAA","file":"206.js"}