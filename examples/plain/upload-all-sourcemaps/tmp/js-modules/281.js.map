{"version":3,"sources":["/Users/jamielynch/repos/bugsnag-react-native/examples/plain/node_modules/react-native/Libraries/Components/Picker/PickerAndroid.android.js"],"sourcesContent":["/**\n * Copyright (c) 2015-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @format\n * @flow\n */\n\n'use strict';\n\nconst ColorPropType = require('ColorPropType');\nconst React = require('React');\nconst ReactPropTypes = require('prop-types');\nconst StyleSheet = require('StyleSheet');\nconst StyleSheetPropType = require('StyleSheetPropType');\nconst ViewPropTypes = require('ViewPropTypes');\nconst ViewStylePropTypes = require('ViewStylePropTypes');\n\nconst processColor = require('processColor');\nconst requireNativeComponent = require('requireNativeComponent');\n\nconst DropdownPicker = requireNativeComponent('AndroidDropdownPicker');\nconst DialogPicker = requireNativeComponent('AndroidDialogPicker');\n\nconst REF_PICKER = 'picker';\nconst MODE_DROPDOWN = 'dropdown';\n\nconst pickerStyleType = StyleSheetPropType({\n  ...ViewStylePropTypes,\n  color: ColorPropType,\n});\n\ntype Event = Object;\n\n/**\n * Not exposed as a public API - use <Picker> instead.\n */\nclass PickerAndroid extends React.Component<\n  {\n    style?: $FlowFixMe,\n    selectedValue?: any,\n    enabled?: boolean,\n    mode?: 'dialog' | 'dropdown',\n    onValueChange?: Function,\n    prompt?: string,\n    testID?: string,\n  },\n  *,\n> {\n  /* $FlowFixMe(>=0.78.0 site=react_native_android_fb) This issue was found\n   * when making Flow check .android.js files. */\n  static propTypes = {\n    ...ViewPropTypes,\n    style: pickerStyleType,\n    selectedValue: ReactPropTypes.any,\n    enabled: ReactPropTypes.bool,\n    mode: ReactPropTypes.oneOf(['dialog', 'dropdown']),\n    onValueChange: ReactPropTypes.func,\n    prompt: ReactPropTypes.string,\n    testID: ReactPropTypes.string,\n  };\n\n  /* $FlowFixMe(>=0.78.0 site=react_native_android_fb) This issue was found\n   * when making Flow check .android.js files. */\n  constructor(props, context) {\n    super(props, context);\n    const state = this._stateFromProps(props);\n\n    this.state = {\n      ...state,\n      initialSelectedIndex: state.selectedIndex,\n    };\n  }\n\n  /* $FlowFixMe(>=0.78.0 site=react_native_android_fb) This issue was found\n   * when making Flow check .android.js files. */\n  UNSAFE_componentWillReceiveProps(nextProps) {\n    this.setState(this._stateFromProps(nextProps));\n  }\n\n  // Translate prop and children into stuff that the native picker understands.\n  _stateFromProps = props => {\n    let selectedIndex = 0;\n    const items = React.Children.map(props.children, (child, index) => {\n      if (child.props.value === props.selectedValue) {\n        selectedIndex = index;\n      }\n      const childProps = {\n        value: child.props.value,\n        label: child.props.label,\n      };\n      if (child.props.color) {\n        /* $FlowFixMe(>=0.78.0 site=react_native_android_fb) This issue was\n         * found when making Flow check .android.js files. */\n        childProps.color = processColor(child.props.color);\n      }\n      return childProps;\n    });\n    return {selectedIndex, items};\n  };\n\n  render() {\n    const Picker =\n      this.props.mode === MODE_DROPDOWN ? DropdownPicker : DialogPicker;\n\n    const nativeProps = {\n      enabled: this.props.enabled,\n      items: this.state.items,\n      mode: this.props.mode,\n      onSelect: this._onChange,\n      prompt: this.props.prompt,\n      selected: this.state.initialSelectedIndex,\n      testID: this.props.testID,\n      style: [styles.pickerAndroid, this.props.style],\n      /* $FlowFixMe(>=0.78.0 site=react_native_android_fb) This issue was found\n       * when making Flow check .android.js files. */\n      accessibilityLabel: this.props.accessibilityLabel,\n    };\n\n    return <Picker ref={REF_PICKER} {...nativeProps} />;\n  }\n\n  _onChange = (event: Event) => {\n    if (this.props.onValueChange) {\n      const position = event.nativeEvent.position;\n      if (position >= 0) {\n        /* $FlowFixMe(>=0.78.0 site=react_native_android_fb) This issue was\n         * found when making Flow check .android.js files. */\n        const children = React.Children.toArray(this.props.children);\n        const value = children[position].props.value;\n        /* $FlowFixMe(>=0.78.0 site=react_native_android_fb) This issue was\n         * found when making Flow check .android.js files. */\n        this.props.onValueChange(value, position);\n      } else {\n        this.props.onValueChange(null, position);\n      }\n    }\n    /* $FlowFixMe(>=0.78.0 site=react_native_android_fb) This issue was found\n     * when making Flow check .android.js files. */\n    this._lastNativePosition = event.nativeEvent.position;\n    this.forceUpdate();\n  };\n\n  componentDidMount() {\n    /* $FlowFixMe(>=0.78.0 site=react_native_android_fb) This issue was found\n     * when making Flow check .android.js files. */\n    this._lastNativePosition = this.state.initialSelectedIndex;\n  }\n\n  componentDidUpdate() {\n    // The picker is a controlled component. This means we expect the\n    // on*Change handlers to be in charge of updating our\n    // `selectedValue` prop. That way they can also\n    // disallow/undo/mutate the selection of certain values. In other\n    // words, the embedder of this component should be the source of\n    // truth, not the native component.\n    if (\n      this.refs[REF_PICKER] &&\n      /* $FlowFixMe(>=0.78.0 site=react_native_android_fb) This issue was found\n       * when making Flow check .android.js files. */\n      this.state.selectedIndex !== this._lastNativePosition\n    ) {\n      this.refs[REF_PICKER].setNativeProps({\n        selected: this.state.selectedIndex,\n      });\n      /* $FlowFixMe(>=0.78.0 site=react_native_android_fb) This issue was found\n       * when making Flow check .android.js files. */\n      this._lastNativePosition = this.state.selectedIndex;\n    }\n  }\n}\n\nconst styles = StyleSheet.create({\n  pickerAndroid: {\n    // The picker will conform to whatever width is given, but we do\n    // have to set the component's height explicitly on the\n    // surrounding view to ensure it gets rendered.\n    // TODO would be better to export a native constant for this,\n    // like in iOS the RCTDatePickerManager.m\n    height: 50,\n  },\n});\n\nmodule.exports = PickerAndroid;\n"],"names":["ColorPropType","require","d","React","ReactPropTypes","StyleSheet","StyleSheetPropType","ViewPropTypes","ViewStylePropTypes","processColor","requireNativeComponent","DropdownPicker","DialogPicker","pickerStyleType","_objectSpread","color","PickerAndroid","props","context","_this","_classCallCheck","this","_possibleConstructorReturn","_getPrototypeOf","call","_stateFromProps","selectedIndex","items","Children","map","children","child","index","value","selectedValue","childProps","label","_onChange","event","onValueChange","position","nativeEvent","toArray","_lastNativePosition","forceUpdate","state","initialSelectedIndex","nextProps","setState","Picker","mode","nativeProps","enabled","onSelect","prompt","selected","testID","style","styles","pickerAndroid","accessibilityLabel","createElement","_extends","ref","refs","setNativeProps","Component","propTypes","any","bool","oneOf","func","string","create","height","module","exports"],"mappings":"4BAUA,uFAEMA,EAAgBC,EAAOC,EAAA,IACvBC,EAAQF,EAAOC,EAAA,IACfE,EAAiBH,EAAOC,EAAA,IACxBG,EAAaJ,EAAOC,EAAA,KACpBI,EAAqBL,EAAOC,EAAA,KAC5BK,EAAgBN,EAAOC,EAAA,KACvBM,EAAqBP,EAAOC,EAAA,KAE5BO,EAAeR,EAAOC,EAAA,KACtBQ,EAAyBT,EAAOC,EAAA,KAEhCS,EAAiBD,EAAuB,yBACxCE,EAAeF,EAAuB,uBAKtCG,EAAkBP,EAAkBQ,KACrCN,GACHO,MAAOf,KAQHgB,eA2BJ,SAAAA,EAAYC,EAAOC,GAAS,IAAAC,EAAAC,EAAAC,KAAAL,IAC1BG,EAAAG,EAAAD,KAAAE,EAAAP,GAAAQ,KAAAH,KAAMJ,EAAOC,KAgBfO,gBAAkB,SAAAR,GAChB,IAAIS,EAAgB,EACdC,EAAQxB,EAAMyB,SAASC,IAAIZ,EAAMa,SAAU,SAACC,EAAOC,GACnDD,EAAMd,MAAMgB,QAAUhB,EAAMiB,gBAC9BR,EAAgBM,GAElB,IAAMG,GACJF,MAAOF,EAAMd,MAAMgB,MACnBG,MAAOL,EAAMd,MAAMmB,OAOrB,OALIL,EAAMd,MAAMF,QAGdoB,EAAWpB,MAAQN,EAAasB,EAAMd,MAAMF,QAEvCoB,IAET,OAAQT,cAAAA,EAAeC,MAAAA,IAlCGR,EA0D5BkB,UAAY,SAACC,GACX,GAAInB,EAAKF,MAAMsB,cAAe,CAC5B,IAAMC,EAAWF,EAAMG,YAAYD,SACnC,GAAIA,GAAY,EAAG,CAGjB,IACMP,EADW9B,EAAMyB,SAASc,QAAQvB,EAAKF,MAAMa,UAC5BU,GAAUvB,MAAMgB,MAGvCd,EAAKF,MAAMsB,cAAcN,EAAOO,QAEhCrB,EAAKF,MAAMsB,cAAc,KAAMC,GAKnCrB,EAAKwB,oBAAsBL,EAAMG,YAAYD,SAC7CrB,EAAKyB,eA1EL,IAAMC,EAAQ1B,EAAKM,gBAAgBR,GAFT,OAI1BE,EAAK0B,MAAL/B,KACK+B,GACHC,qBAAsBD,EAAMnB,gBANJP,4EAYK4B,GAC/B1B,KAAK2B,SAAS3B,KAAKI,gBAAgBsB,qCAyBnC,IAAME,EA7EY,aA8EhB5B,KAAKJ,MAAMiC,KAAyBvC,EAAiBC,EAEjDuC,GACJC,QAAS/B,KAAKJ,MAAMmC,QACpBzB,MAAON,KAAKwB,MAAMlB,MAClBuB,KAAM7B,KAAKJ,MAAMiC,KACjBG,SAAUhC,KAAKgB,UACfiB,OAAQjC,KAAKJ,MAAMqC,OACnBC,SAAUlC,KAAKwB,MAAMC,qBACrBU,OAAQnC,KAAKJ,MAAMuC,OACnBC,OAAQC,EAAOC,cAAetC,KAAKJ,MAAMwC,OAGzCG,mBAAoBvC,KAAKJ,MAAM2C,oBAGjC,OAAOzD,EAAA0D,cAACZ,EAADa,GAAQC,IA/FA,UA+FqBZ,gDA2BpC9B,KAAKsB,oBAAsBtB,KAAKwB,MAAMC,kEAWpCzB,KAAK2C,KAAL,QAGA3C,KAAKwB,MAAMnB,gBAAkBL,KAAKsB,sBAElCtB,KAAK2C,KAAL,OAAsBC,gBACpBV,SAAUlC,KAAKwB,MAAMnB,gBAIvBL,KAAKsB,oBAAsBtB,KAAKwB,MAAMnB,uBAlIhBvB,EAAM+D,WAA5BlD,EAcGmD,eACF5D,GACHkD,MAAO5C,EACPqB,cAAe9B,EAAegE,IAC9BhB,QAAShD,EAAeiE,KACxBnB,KAAM9C,EAAekE,OAAO,SAAU,aACtC/B,cAAenC,EAAemE,KAC9BjB,OAAQlD,EAAeoE,OACvBhB,OAAQpD,EAAeoE,SAiH3B,IAAMd,EAASrD,EAAWoE,QACxBd,eAMEe,OAAQ,MAIZC,EAAOC,QAAU5D","file":"281.js"}